made train set of size: 11900 , of which positive examples: 36
out of  20474  sequences 8610  are positive. (percent:  0.42053335938263164 )
examples per length: [0, 4, 16, 64, 254, 262, 275, 276, 296, 309, 334, 359, 402, 426, 479, 495, 544, 537, 587, 533, 598, 548, 622, 492, 653, 466, 616, 446, 596, 341, 640, 292, 584, 378, 556, 283, 730, 254, 508, 404, 568, 250, 594, 250, 456, 402, 323, 250, 414, 258, 250]
size of train set: 18426
size of test set: 2048
The dy.parameter(...) call is now DEPRECATED.
        There is no longer need to explicitly add parameters to the computation graph.
        Any used parameter will be added automatically.
current average loss is:  0.0005420438480250983
classification loss on last batch was: 2.5023648853515313e-06
testing on train set, i.e. test set is train set
rnn score against target on test set:                              2048 (100.0)
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1185300350189209  s
EQ test took  0.0006926059722900391  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12024092674255371  s
EQ test took  0.11769628524780273  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3604555130004883
overall guided extraction time took: 0.34000000000003183
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.07000000000005002)
('dd', 0.12000000000000455)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.343747615814209
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.360456          None            None              []          0         0         0            4                    None                                    None               0.343748         True      0.1    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1118006706237793  s
EQ test took  0.0006418228149414062  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12891530990600586  s
EQ test took  0.13521838188171387  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.38017892837524414
overall guided extraction time took: 0.8099999999999454
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.18999999999994088)
('dd', 0.2900000000000773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8098974227905273
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.380179          None            None              []          0         0         0            4                    None                                    None               0.809897         True      0.1   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12213683128356934  s
EQ test took  0.0006189346313476562  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11823749542236328  s
EQ test took  0.1836409568786621  s


epsilon= 0.1 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.42798805236816406
overall guided extraction time took: 5.340000000000032
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 1.3500000000000227)
('dd', 1.8999999999999773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 5.336143255233765
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.427988          None            None              []          0         0         0            4                    None                                    None               5.336143         True      0.1   0.01
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11438465118408203  s
EQ test took  0.000652313232421875  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11971831321716309  s
EQ test took  0.22186994552612305  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.46039915084838867
overall guided extraction time took: 0.37000000000000455
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.09000000000003183)
('dd', 0.12000000000000455)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3684720993041992
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.460399          None            None              []          0         0         0            4                    None                                    None               0.368472         True     0.05    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11062884330749512  s
EQ test took  0.0005943775177001953  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11647748947143555  s
EQ test took  0.2727084159851074  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.5035653114318848
overall guided extraction time took: 0.82000000000005
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.21000000000003638)
('dd', 0.2899999999999636)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8161544799804688
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.503565          None            None              []          0         0         0            4                    None                                    None               0.816154         True     0.05   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11240386962890625  s
EQ test took  0.0006122589111328125  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11485075950622559  s
EQ test took  0.3722255229949951  s


epsilon= 0.05 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.6032040119171143
overall guided extraction time took: 5.3700000000000045
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 1.4099999999999682)
('dd', 1.8999999999999773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 5.371102809906006
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.603204          None            None              []          0         0         0            4                    None                                    None               5.371103         True     0.05   0.01
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11162042617797852  s
EQ test took  0.0006110668182373047  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10742020606994629  s
EQ test took  1.1135714054107666  s


epsilon= 0.01 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 1.3368606567382812
overall guided extraction time took: 0.36000000000001364
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.08000000000004093)
('dd', 0.12000000000000455)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3614811897277832
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         1.336861          None            None              []          0         0         0            4                    None                                    None               0.361481         True     0.01    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13250112533569336  s
EQ test took  0.0006127357482910156  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12702345848083496  s
EQ test took  1.3140606880187988  s


epsilon= 0.01 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 1.5778470039367676
overall guided extraction time took: 0.82000000000005
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.18000000000006366)
('dd', 0.2899999999999636)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8140537738800049
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         1.577847          None            None              []          0         0         0            4                    None                                    None               0.814054         True     0.01   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10576415061950684  s
EQ test took  0.0002956390380859375  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12062406539916992  s
EQ test took  1.8082892894744873  s


epsilon= 0.01 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 2.037588119506836
overall guided extraction time took: 5.2999999999999545
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 1.3400000000000318)
('dd', 1.8700000000000045)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 5.292901992797852
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         2.037588          None            None              []          0         0         0            4                    None                                    None               5.292902         True     0.01   0.01
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11148834228515625  s
No positive counterexample found
EQ test took  0.014068603515625  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11119747161865234  s
EQ test took  0.0008618831634521484  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.16968846321105957  s
No positive counterexample found
EQ test took  0.03226494789123535  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.34778642654418945  s
No positive counterexample found
EQ test took  0.09276962280273438  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0740597248077393  s
EQ test took  0.11412310600280762  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: ((b | (a | c)) -> (X (b | (a | c))))
Learning took:  2.6553852558135986  s
EQ test took  0.055916786193847656  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba']



5  iteration complete



start formula depth: 7
Before normalization: (((x2 | x0) | x1) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X c))
Learning took:  1.8021578788757324  s
No positive counterexample found
EQ test took  0.13134098052978516  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((F x0) | (x1 | x2)) -> (X x2))
Learning formula with depth 3
learned LTL formula: (((F a) | (b | c)) -> (X c))
Learning took:  8.868089199066162  s
No positive counterexample found
EQ test took  0.1901845932006836  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac']



7  iteration complete



start formula depth: 8
Before normalization: ((F (x2 | (x0 | x1))) U (! (F (x2 | (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F (c | (a | b))) U (~ (F (c | (a | b)))))
Learning took:  7.392054796218872  s
No positive counterexample found
EQ test took  0.044648170471191406  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd']



8  iteration complete



start formula depth: 8
Before normalization: ((F (x0 | x1)) U (! (x2 | (F (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F (a | b)) U (~ (c | (F (a | b)))))
Learning took:  50.951534032821655  s
No positive counterexample found
EQ test took  0.05691814422607422  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((x1 | x2) | (F x0)) -> (x0 U (X x1)))
Learning formula with depth 3
learned LTL formula: (((F a) | (b | c)) -> (a U (X b)))
Learning took:  139.61891055107117  s
EQ test took  0.16048002243041992  s
new counterexample: dacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad']



10  iteration complete



start formula depth: 9
Before normalization: ((x2 | ((F x0) | x1)) -> ((x2 | ((F x0) | x1)) U (X x1)))
Learning formula with depth 5
learned LTL formula: ((c | (b | (F a))) -> ((c | (b | (F a))) U (X b)))
Learning took:  9.767484664916992  s
EQ test took  0.04637742042541504  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb']



11  iteration complete



start formula depth: 9
Before normalization: (((x2 | x1) -> x0) & ((F x0) -> (F x1)))
Learning formula with depth 3
learned LTL formula: (((F a) -> (F b)) & ((b | c) -> a))
Learning took:  8.567976236343384  s
No positive counterexample found
EQ test took  0.20450472831726074  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb', 'ab']



12  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! (((F x0) | x2) | x1)))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (b | (c | (F a)))))
Learning took:  28.07128071784973  s
No positive counterexample found
EQ test took  0.07668733596801758  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb', 'ab', 'dc']



13  iteration complete



start formula depth: 9
Before normalization: ((F ((x2 | x1) | x0)) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X (b | c))))
Learning took:  14.577755212783813  s
No positive counterexample found
EQ test took  0.2259993553161621  s
new counterexample: adc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb', 'ab', 'dc', 'adc']



14  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! (x1 | (F (x2 | x0)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (b | (F (a | c)))))
Learning took:  37.29295039176941  s
No positive counterexample found
EQ test took  0.10211825370788574  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb', 'ab', 'dc', 'adc', 'db']



15  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! (x1 | (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (b | (a | c)))))
Learning took:  36.0850784778595  s
No positive counterexample found
EQ test took  0.15864825248718262  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'dacbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'da', 'ac', 'cd', 'ad', 'cb', 'ab', 'dc', 'adc', 'db', 'bd']



16  iteration complete





epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((F b) U (G (~ (b | (a | c)))))
incomplete formula
Number of samples: 141
Number of counterexamples returned: 132
19017904041563.94 3.7532207847070236

Time taken to extract ltl: 401.06784439086914
overall guided extraction time took: 0.10000000000002274
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09473633766174316
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 95.27
RNN matches ground truth: 100.0
Explanation matches ground truth: 95.27
Lstar matches RNN: 57.97
Lstar matches ground truth: 57.97
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F b) U (G (~ (b | (a | c)))))  False          100.0      100.0              95.27                              95.27       401.067844   1.901790e+13         3.753221  [b, , a, c, acbd, ba, da, ac, cd, ad, dacbd, c...          0         0         5            2                    57.97                                    57.97               0.094736         True      0.1    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11149358749389648  s
No positive counterexample found
EQ test took  0.015857696533203125  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10451006889343262  s
EQ test took  0.0015850067138671875  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1490340232849121  s
No positive counterexample found
EQ test took  0.05260491371154785  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3582735061645508  s
No positive counterexample found
EQ test took  0.08670496940612793  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0717315673828125  s
EQ test took  0.0739293098449707  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X c))
Learning took:  2.6513144969940186  s
EQ test took  0.13988161087036133  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((((F x2) | x0) | x1) -> (x0 & (F x2)))
Learning formula with depth 4
learned LTL formula: ((b | (a | (F c))) -> (a & (F c)))
Learning took:  9.700090408325195  s
No positive counterexample found
EQ test took  0.16894769668579102  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db']



6  iteration complete



start formula depth: 8
Before normalization: (F (G (! (x2 | (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: (F (G (~ (c | (a | b)))))
Learning took:  3.822766065597534  s
No positive counterexample found
EQ test took  0.04203367233276367  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd']



7  iteration complete



start formula depth: 8
Before normalization: (((F (x2 | x1)) | x0) -> ((F (x2 | x1)) & x0))
Learning formula with depth 4
learned LTL formula: ((a | (F (b | c))) -> (a & (F (b | c))))
Learning took:  7.63172721862793  s
No positive counterexample found
EQ test took  0.22136640548706055  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd', 'ac']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((F x1) | (F (x2 | x0))) -> (x0 & (F x1)))
Learning formula with depth 4
learned LTL formula: (((F b) | (F (a | c))) -> (a & (F b)))
Learning took:  104.92148613929749  s
No positive counterexample found
EQ test took  0.22934651374816895  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd', 'ac', 'ab']



9  iteration complete



start formula depth: 9
Before normalization: ((x0 | (F (x1 | x2))) -> (X (X x1)))
Learning formula with depth 4
learned LTL formula: ((a | (F (b | c))) -> (X (X b)))
Learning took:  13.017967462539673  s
No positive counterexample found
EQ test took  0.23061108589172363  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd', 'ac', 'ab', 'da']



10  iteration complete



start formula depth: 9
Before normalization: ((F (x2 | (x0 | x1))) -> (X (X x1)))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (X (X b)))
Learning took:  9.306829690933228  s
EQ test took  0.11910128593444824  s
new counterexample: accccbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'accccbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd', 'ac', 'ab', 'da']



11  iteration complete



start formula depth: 9
Before normalization: ((((x1 | x0) | x2) | (X ((x1 | x0) | x2))) -> (X (X ((x1 | x0) | x2))))
Learning formula with depth 5
learned LTL formula: (((c | (a | b)) | (X (c | (a | b)))) -> (X (X (c | (a | b)))))
Learning took:  22.561192750930786  s
EQ test took  0.11443305015563965  s
new counterexample: bbc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'accccbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'db', 'bd', 'ac', 'ab', 'da', 'bbc']



12  iteration complete





epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: true
final ltl:  (((c | (a | b)) | (X (c | (a | b)))) -> (X (X (c | (a | b)))))
incomplete formula
Number of samples: 121
Number of counterexamples returned: 93
1.3956158325985562e+26 2.3570100166542467

Time taken to extract ltl: 401.0158989429474
overall guided extraction time took: 0.6699999999999591
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbd', 0.2300000000000182)
('aabbcbd', 0.08000000000004093)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.6649556159973145
number of states of the dfa: 11
returned flag: True
transitions:->
{'': {'a': 'aa', 'b': 'aab', 'c': 'aab', 'd': ''}, 'aa': {'a': 'aa', 'b': 'aab', 'c': 'ac', 'd': 'aab'}, 'a': {'a': 'aa', 'b': 'aab', 'c': 'ac', 'd': 'aab'}, 'ac': {'a': 'aab', 'b': 'acb', 'c': 'ac', 'd': 'aab'}, 'aab': {'a': 'aab', 'b': 'aab', 'c': 'aab', 'd': 'aab'}, 'aabb': {'a': 'aab', 'b': 'aab', 'c': 'aab', 'd': 'aab'}, 'acb': {'a': 'aab', 'b': 'acb', 'c': 'aab', 'd': ''}, 'aabbc': {'a': 'aab', 'b': 'aab', 'c': 'aab', 'd': 'aab'}, 'aabbcbd': {'a': 'aab', 'b': 'aab', 'c': 'aab', 'd': 'aab'}, 'aabbcb': {'a': 'aab', 'b': 'aab', 'c': 'aab', 'd': 'aab'}, 'acbd': {'a': 'aa', 'b': 'aab', 'c': 'aab', 'd': ''}}
Explanation matches RNN: 55.42
RNN matches ground truth: 100.0
Explanation matches ground truth: 55.42
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query                                        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((c | (a | b)) | (X (c | (a | b)))) -> (X (X ...  False          100.0      100.0              55.42                              55.42       401.015899   1.395616e+26          2.35701  [c, , a, b, acbd, dc, db, bd, ac, ab, da, accc...          0         0         5           11                    100.0                                    100.0               0.664956         True      0.1   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1192023754119873  s
No positive counterexample found
EQ test took  0.016340970993041992  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12043452262878418  s
EQ test took  0.0015721321105957031  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1677703857421875  s
EQ test took  0.0225217342376709  s
new counterexample: aaccbd  should be accepted by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 -> (X x0))
Learning formula with depth 2
learned LTL formula: (a -> (X a))
Learning took:  0.29670286178588867  s
EQ test took  0.04021167755126953  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: ((x2 | x0) -> (X x0))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X a))
Learning took:  0.9823181629180908  s
No positive counterexample found
EQ test took  0.09693312644958496  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (((x0 | x1) | x2) -> (X (x0 | x1)))
Learning formula with depth 3
learned LTL formula: ((c | (a | b)) -> (X (a | b)))
Learning took:  3.498737096786499  s
No positive counterexample found
EQ test took  0.11659550666809082  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba']



5  iteration complete



start formula depth: 7
Before normalization: (! (G ((x0 | x1) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (G (c | (a | b))))
Learning took:  2.2378056049346924  s
No positive counterexample found
EQ test took  0.04349398612976074  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((x0 | x2) | x1) U (! (F ((x0 | x2) | x1))))
Learning formula with depth 5
learned LTL formula: ((b | (a | c)) U (~ (F (b | (a | c)))))
Learning took:  11.895546197891235  s
No positive counterexample found
EQ test took  0.12293052673339844  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd']



7  iteration complete



start formula depth: 8
Before normalization: ((((F x2) | x1) -> x0) & (x0 -> ((F x2) | x1)))
Learning formula with depth 4
learned LTL formula: ((a -> (b | (F c))) & ((b | (F c)) -> a))
Learning took:  5.01717209815979  s
No positive counterexample found
EQ test took  0.24732375144958496  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd', 'da']



8  iteration complete



start formula depth: 8
Before normalization: (! ((F (G (x0 | x2))) | x1))
Learning formula with depth 5
learned LTL formula: (~ (b | (F (G (a | c)))))
Learning took:  8.499503374099731  s
No positive counterexample found
EQ test took  0.136749267578125  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd', 'da', 'ab']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((F (x0 | (x1 | x2))) -> (X (X x2)))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X c)))
Learning took:  117.97292256355286  s
No positive counterexample found
EQ test took  0.2957477569580078  s
new counterexample: adc  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd', 'da', 'ab', 'adc']



10  iteration complete



start formula depth: 9
Before normalization: (((x2 | x0) | ((X (x2 | x0)) | x1)) -> ((x2 | x0) & ((X (x2 | x0)) | x1)))
Learning formula with depth 5
learned LTL formula: (((a | c) | (b | (X (a | c)))) -> ((a | c) & (b | (X (a | c)))))
Learning took:  16.73456382751465  s
EQ test took  0.13486766815185547  s
new counterexample: adacbdddaccbd  should be accepted by implementation


positive traces---> 
['', 'aaccbd', 'adacbdddaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd', 'da', 'ab', 'adc']



11  iteration complete



start formula depth: 9
Before normalization: (! (x1 | (G ((F (x0 | x2)) | x1))))
Learning formula with depth 6
learned LTL formula: (~ (b | (G (b | (F (a | c))))))
Learning took:  206.50609159469604  s
EQ test took  0.12988018989562988  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'aaccbd', 'adacbdddaccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'dc', 'bd', 'da', 'ab', 'adc', 'cd']



12  iteration complete





epsilon= 0.1 delta= 0.01 max_trace_length= 50
query: true
final ltl:  (~ (b | (G (b | (F (a | c))))))
incomplete formula
Number of samples: 137
Number of counterexamples returned: 111
5.2367611123801116e+26 2.6433879154897735

Time taken to extract ltl: 401.04026985168457
Interrupted due to time limit
overall guided extraction time took: 555.72
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbd', 1.5699999999999363)
('ccbd', 0.41000000000008185)
('daacbda', 2.0)
('acbbbddb', 2.2299999999999045)
('daccbcbd', 1.4800000000000182)
('ddaaabbbbbd', 1.9700000000000273)
('aaacbbda', 1.0199999999999818)
('dddaadd', 3.269999999999982)
('dcacccccbd', 2.4300000000000637)
('bdadaadaccbdd', 2.160000000000082)

Time taken to extract lstar-dfa: 555.6792323589325
number of states of the dfa: 1277
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'ccb', 'c': 'c', 'd': 'd'}, 'daacbbadadadaaaac': {'a': 'ddaaaca', 'b': 'daacbbadadadaaaacb', 'c': 'daacbbadadadaaaacc', 'd': 'daacbbadadadaaaacd'}, 'daaccbbddaacbbbbba': {'a': 'daaccbbddaacbbbbbaa', 'b': 'daaccbbddaacbbbbbab', 'c': 'daaccbbdddcc', 'd': 'daaccbbddaacbbbbbad'}, 'acbbbdacbadaccbbbbbbcbbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcbbbb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbcbbbd'}, 'daaccbbddaaccbbbdabbbc': {'a': 'ddaaacabbbca', 'b': 'ddaaacabbbcb', 'c': 'acbbbbdbdc', 'd': 'daccbcbbddadb'}, 'daaccbcdd': {'a': 'daaccbcdda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbcddd'}, 'daaccbbdacac': {'a': 'daaccbbdacaca', 'b': 'daaccbbdacacb', 'c': 'daaccc', 'd': 'daaccd'}, 'daacccbcbbdd': {'a': 'daaccbbda', 'b': 'daacccbcbbddb', 'c': 'daaccba', 'd': 'daacccbcbbddd'}, 'acbd': {'a': 'acbda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'acbdd'}, 'ddaaacacbdaa': {'a': 'ddaaacacbdaaa', 'b': 'ddaaacacbdaab', 'c': 'ddaaacacbdaac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaacbdada': {'a': 'acbbbdaaa', 'b': 'daab', 'c': 'daaccbbddaacbdadac', 'd': 'daaccbcddad'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadacbbbbbbbcb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbbcb', 'c': 'ccb', 'd': 'dcaccccbccbddadaaadacbbbbbbbcbd'}, 'daadaaaaaca': {'a': 'aaaa', 'b': 'daacbbc', 'c': 'daadaaaaacac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbbcbbbbda': {'a': 'acbbbdacbadaaa', 'b': 'daaccbbdacbbbbbbbcbbbdab', 'c': 'daaccbbdacbbbbbbbcbbbdac', 'd': 'daaccbbdacbbbbbbdbddd'}, 'daacbb': {'a': 'daacbba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daaccbbdccb': {'a': 'daaccbbdccba', 'b': 'acbbbdacbadaccbbbbbbdbbbddacbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'ddaaacacbdaabaa': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdc', 'c': 'aaac', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadadaaddaacbb': {'a': 'daacccbcbbbdddcaca', 'b': 'dddaaddacbb', 'c': 'c', 'd': 'daacccbcbcbd'}, 'ddaaacabbb': {'a': 'daaccbbdccba', 'b': 'ddaaacabbbb', 'c': 'ddaaacabbbc', 'd': 'daaccbbddabbbd'}, 'daaccbbddaacbddcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdddccb', 'c': 'ddaaacacbdaabc', 'd': 'daccbcbbddadb'}, 'dcaccccbc': {'a': 'dca', 'b': 'aabb', 'c': 'dcaccccbcc', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadaaa': {'a': 'dcaccccbccbddadaaadaaaa', 'b': 'dcaccccbccbddadaaadaaab', 'c': 'dcaccccbccbddadaaadaaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddaaccbbbdabd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaaccbbbdabd'}, 'daacccbcbdddac': {'a': 'ddaa', 'b': 'daacccbcbdddacb', 'c': 'daacccbcbdddacc', 'd': 'daacccbcbdddacd'}, 'acbbbdacbadaccbbbbbbdbbbddacd': {'a': 'acbbbdacbadaccbbbbbbdbbbddacda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdd'}, 'daaccbbddaaccbbdcbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbbadadacbbb', 'c': 'daaccbbddaaccbbdcbbc', 'd': 'dacbd'}, 'daacbdaabbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'ddaaabbbb', 'c': 'daaccbbdacbbbbbbbcbbbdab', 'd': 'dacbd'}, 'dddaaddacbda': {'a': 'dddaaddacbdaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbbadadadaaaacc', 'd': 'dacbad'}, 'daacbbbaaca': {'a': 'daacbbadadadacca', 'b': 'daacbbbaacab', 'c': 'ac', 'd': 'acbbbdacbadadaadd'}, 'dac': {'a': 'daaba', 'b': 'dacb', 'c': 'dacc', 'd': 'daad'}, 'daaccbbddaba': {'a': 'acbbbdacbadaa', 'b': 'acbbbdc', 'c': 'acbbbbdbdaac', 'd': 'daaccbbaad'}, 'daccbccc': {'a': 'daccbccca', 'b': 'ddaaacacacb', 'c': 'daccbccc', 'd': 'daccbcccd'}, 'acbbbdacbadaccbbbbbbdbbbdadac': {'a': 'acbbbdacbadacaaa', 'b': 'daacbbadadacb', 'c': 'daacccbbcc', 'd': 'daaccbcdaccbbacd'}, 'ddaaacacbdaabc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbc', 'c': 'ddaaacacbdaabcc', 'd': 'ddaaacacbdaabcd'}, 'dacc': {'a': 'daacbbadadadacca', 'b': 'daccb', 'c': 'daccc', 'd': 'daccd'}, 'acbbbdacbadaccbbbbbbbcbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daaccbbdacbbbbbbdbddd'}, 'acbbbdacbadaadda': {'a': 'acbbbdacbadaaddaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbdadac', 'd': 'acbbbdacbadadaadd'}, 'daabb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbb', 'c': 'acbbbdacbaddcc', 'd': 'daaccbcdd'}, 'acbbbcb': {'a': 'ccb', 'b': 'acbbbcb', 'c': 'ccb', 'd': 'daacbbbabdd'}, 'daacbbadada': {'a': 'daacbbadadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbbadadac', 'd': 'daacbbadadad'}, 'daaccbbdacbcbbbbdaab': {'a': 'daacbbbaa', 'b': 'daacbbadadacb', 'c': 'acbbbdc', 'd': 'daacbdaabd'}, 'daccbcbbdd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddb', 'c': 'acbbbbdab', 'd': 'daccbcbbddd'}, 'daaccbbdacbbbbbbbcbbbdab': {'a': 'daaccbbdacbcbdba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'daaccbbddaacbbbdbc', 'd': 'daaccbbdacbbbbbbbcbbbdabd'}, 'daaccbbddaaccbbdc': {'a': 'ddaaacacbdaaba', 'b': 'daaccbbddaaccbbdcb', 'c': 'daaccbac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbbdaa': {'a': 'acbbbdaaa', 'b': 'daacbdaab', 'c': 'acbbbdaac', 'd': 'daaccbcddad'}, 'acbbbbdbdda': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'daaccbbdacbbbbbbbdbddac', 'd': 'acbbbbdbddad'}, 'acbbbdacbadacaa': {'a': 'acbbbdacbadacaaa', 'b': 'daacbbbaacab', 'c': 'acbbbdacbadacaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbdbdda': {'a': 'daacbbadadaa', 'b': 'acbbbbdbddab', 'c': 'daaccbbdacbbbbbbdbddac', 'd': 'daaccbbdacbbbbbbdbddad'}, 'acbbbdacbadaccbbbbbbddbd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbddddbdd'}, 'ddaaacac': {'a': 'ddaaacaca', 'b': 'ddaaacacb', 'c': 'daaccc', 'd': 'dacba'}, 'acbbbdacbadaccbbbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbdbb', 'c': 'ccb', 'd': 'acbbbbdbd'}, 'daaccbbdacbbbbbbdbddd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'acbbbbdbdaa': {'a': 'acbbbdacbadaa', 'b': 'acbbbdc', 'c': 'acbbbbdbdaac', 'd': 'acbbbbdbdaad'}, 'acbbbdacbadaccbbbbbbcbbbd': {'a': 'acbbbdacbadaccbbbbbbcbbbda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbcbbbdd'}, 'daadaaaaacac': {'a': 'daaccca', 'b': 'daadaaaaacacb', 'c': 'daccccc', 'd': 'daadaaaaacacd'}, 'dcaccccbccbddadaaadacbbbbcdd': {'a': 'dcaccccbccbddadaaadacbbbbcdda', 'b': 'ccb', 'c': 'ccb', 'd': 'dcaccccbccbddadaaadacbbbbcddd'}, 'daaccbbddaacbdadacbcbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'daaccbbddaacbdadacbcbbbb', 'c': 'daaccbbdacbcbbbbc', 'd': 'daccbcbbbd'}, 'daaccbcdaccbba': {'a': 'ddaaacacbdaaba', 'b': 'daacbbbab', 'c': 'daaccbcdaccbbac', 'd': 'acbbbdacbad'}, 'daaccbbdda': {'a': 'daaccbbddaa', 'b': 'daaccbbddab', 'c': 'daacccbddac', 'd': 'daaccbbddad'}, 'acbbbdacbadaccbbbbbbdbbbddc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbbdb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daacbbbad'}, 'daacbbbabddddacab': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdccbabb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadacbbbbcdda': {'a': 'acbbbdacbadadaadaa', 'b': 'ccbd', 'c': 'dcaccccbccbddadaaadacbbbbcddac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddabbb': {'a': 'daaccbbdccba', 'b': 'daaccbbdddccbb', 'c': 'ddaaacabbbc', 'd': 'daaccbbddabbbd'}, 'ddaaacacbdaaba': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdacbadacdaab', 'c': 'daaccbac', 'd': 'ddaaacacbdaabaad'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac', 'd': 'ccbd'}, 'daacccbcbbbddbdddd': {'a': 'acbbbdacbadda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daacccbcbbbddbddddd'}, 'dcaccccbccbddadaaadaacbba': {'a': 'dcaccccbccbddadaaadaacbbaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbac', 'd': 'daacbbadadadaaaabd'}, 'acbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdcd'}, 'daaccbbddaacbbbdb': {'a': 'dacba', 'b': 'daaccbbddaacbbbdbb', 'c': 'daaccbbddaacbbbdbc', 'd': 'daaccbbddaacbbbdbd'}, 'daacbbadadadaaac': {'a': 'ddaaacaa', 'b': 'daacbbadadadaaacb', 'c': 'daacbbadadadaaaacc', 'd': 'daacbbadadadaaacd'}, 'daaccbbdacbbbbbbbcbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbcbbbbdbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbbbad'}, 'daaccbbddaacbbbbdbd': {'a': 'daaccbcda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'daacccbcbbbddddbdd': {'a': 'daacccbcbbbddddbdda', 'b': 'ccbd', 'c': 'ccbd', 'd': 'daacccbcbbbddddbddd'}, 'dcaccccbccbddadaaadacbbbbbbbcdd': {'a': 'daacccbcbbbddddbdda', 'b': 'ccbd', 'c': 'ddaaacabbbcc', 'd': 'dcaccccbccbddadaaadacbbbbbbbcddd'}, 'daaccbbdacbbbbbbbcbb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'daaccbbdacbbbbbbbcbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcbbd'}, 'dddaaddacb': {'a': 'daacccbcbbbdddcaca', 'b': 'dddaaddacbb', 'c': 'dca', 'd': 'dddaaddacbd'}, 'daaccbbddaacaadd': {'a': 'daaccbbddaacaadda', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbdacbadacdaad'}, 'dcaccccbccbddadaaa': {'a': 'ddaaa', 'b': 'dcaccccbccbddadaaab', 'c': 'dcaccccbccbddadaaac', 'd': 'dcaccccbccbddadaaad'}, 'acbbbdacbadaaadda': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadddac', 'd': 'daacbbadadad'}, 'daaccbcdac': {'a': 'daaccbbdacaca', 'b': 'daaccbcdacb', 'c': 'daaccbcdacc', 'd': 'daaccd'}, 'acbbbdacbadaccbbbbbbbbc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbddb'}, 'dcaccccbccbddadaaadaaaaa': {'a': 'ddaaa', 'b': 'dcaccccbccbddadaaadaaaaab', 'c': 'dcaccccbccbddadaaac', 'd': 'daad'}, 'dcaccccbccbddadaaab': {'a': 'daacbbadadadaaa', 'b': 'dcaccccbccbddadaaabb', 'c': 'dcaccccbccbddadaaabc', 'd': 'daacbbadadadaaaabd'}, 'dcaccccbccbddadaaadaaacaaa': {'a': 'ddaaaca', 'b': 'ddaaacab', 'c': 'ddaaabbbbbdac', 'd': 'ddddab'}, 'aaacb': {'a': 'dacba', 'b': 'aaacbb', 'c': 'daacbbc', 'd': 'aaacbd'}, 'daacbcdaac': {'a': 'daaccbbdacaca', 'b': 'ddacb', 'c': 'daacbcdaacc', 'd': 'daaccd'}, 'daaccbbdacbcbbb': {'a': 'daaccbbdacbcbbba', 'b': 'daaccbbdacbcbbbb', 'c': 'daacbbbab', 'd': 'aaacbbd'}, 'acbbbdacbadaccbbbbbbbdcb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbdcb', 'c': 'ddaaacabbbcc', 'd': 'acbd'}, 'daaccbcdaddc': {'a': 'daaccbcdaddc', 'b': 'ccb', 'c': 'dcac', 'd': 'ccb'}, 'daacbbadadadaaaacccbaa': {'a': 'daaca', 'b': 'acbbbdc', 'c': 'daaccbbddaacbcac', 'd': 'ddaaacacbdaabaad'}, 'daadaacc': {'a': 'daacbbbaaca', 'b': 'daadaaccb', 'c': 'dacc', 'd': 'daadaaccd'}, 'daaccbbddaacbbcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbccb', 'c': 'daccbccc', 'd': 'daaccd'}, 'daadaac': {'a': 'daadaaca', 'b': 'daadaacb', 'c': 'daadaacc', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbdac': {'a': 'ddaaacacbdaabaa', 'b': 'daccccbb', 'c': 'daaccc', 'd': 'daaccbcdd'}, 'daaccbbdacbbbbbbbcbbbbdbbbb': {'a': 'daaccbbdacbbbbbbbca', 'b': 'daaccbbdacbbbbbbbcbbbbdbbbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbbd'}, 'acbbbdacbadaad': {'a': 'daacbbada', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbdacbadaadd'}, 'dddaad': {'a': 'daacbbadadadaaa', 'b': 'ccb', 'c': 'dca', 'd': 'dddaadd'}, 'daacccbbd': {'a': 'daaccbbdda', 'b': 'daacccbbdb', 'c': 'daaccbbdc', 'd': 'daacccbbd'}, 'ccbd': {'a': 'ccbda', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadddac': {'a': 'acbbbdacbadacaaa', 'b': 'daacbbadadacb', 'c': 'acbbbdacbadddacc', 'd': 'acbbbdacbadddacd'}, 'daacbacc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbaccb', 'c': 'aac', 'd': 'daacbaccd'}, 'daacbbadadadaaaacccbcbdd': {'a': 'daacccbcbddda', 'b': 'daacccbcbbddb', 'c': 'daaccba', 'd': 'daacbbadadadaaaacccbcbddd'}, 'daaccbbddaacbbcb': {'a': 'daaccbbdacbcbbba', 'b': 'daaccbcddadacbb', 'c': 'daacbbc', 'd': 'daaccbbddaacbbcbd'}, 'daaccbbdacbbbbbbbcbbbbdbbb': {'a': 'ccbd', 'b': 'daaccbbdacbbbbbbbcbbbbdbbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbd'}, 'daacccbcbdddab': {'a': 'acbda', 'b': 'acbbbbdab', 'c': 'acbbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbddcbb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbbdcd'}, 'acbbbbdbddab': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadab', 'c': 'acbbbbdbdc', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaacaa': {'a': 'ddaaacacbdaabaa', 'b': 'aaab', 'c': 'aaac', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaacb': {'a': 'daacccbcbbbdacba', 'b': 'daaccbbdacbb', 'c': 'dcaccccbccbddadaacbc', 'd': 'daacccbcbd'}, 'daacc': {'a': 'daaccca', 'b': 'daaccb', 'c': 'daaccc', 'd': 'daaccd'}, 'dcaccccbccbddadaaada': {'a': 'dcaccccbccbddadaaadaa', 'b': 'acbbbdacbadadaadd', 'c': 'dcaccccbccbddadaaadac', 'd': 'acbbbdacbadadaadd'}, 'daacba': {'a': 'daacbaa', 'b': 'acbbbdc', 'c': 'daacbac', 'd': 'daacbad'}, 'daaccbbaaa': {'a': 'daaccbbaaaa', 'b': 'daacbbc', 'c': 'daaccbbdacac', 'd': 'daaccbbaad'}, 'acbbbbdbdd': {'a': 'acbbbbdbdda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbbdbddd'}, 'acbbbdacbaa': {'a': 'acbbbdacbaaa', 'b': 'daacbbc', 'c': 'daaccbbaac', 'd': 'acbbbdacbadacd'}, 'daaccbbdccba': {'a': 'daaccbbdacbcbdba', 'b': 'daaccbbdccbab', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'ddaaaca': {'a': 'ddaaacaa', 'b': 'ddaaacab', 'c': 'ddaaacac', 'd': 'daaccbbaad'}, 'daccc': {'a': 'daaccbca', 'b': 'daccb', 'c': 'dacccc', 'd': 'dacccd'}, 'dcaccccbccbddadaaadaacbbbbdbd': {'a': 'daacbbdbda', 'b': 'ccbd', 'c': 'dcaccccbccbddadaaadaacbbbbdbdc', 'd': 'daaccbbddaacbbbdbd'}, 'ddacbacb': {'a': 'daccbcba', 'b': 'ddaaabbb', 'c': 'acbbbdc', 'd': 'acbbbbdbdaacbd'}, 'daccccdddd': {'a': 'acbbbdacbadadaa', 'b': 'ccb', 'c': 'ccbda', 'd': 'daacbbbabddd'}, 'acbbbdacbadadaadac': {'a': 'daaba', 'b': 'daacbbadadadaaaacccbbdcb', 'c': 'acbbbbdbdaacc', 'd': 'dacbad'}, 'dc': {'a': 'dca', 'b': 'ccb', 'c': 'dcac', 'd': 'ccb'}, 'acbbbdacbadacd': {'a': 'acbbbdacbadacda', 'b': 'ccb', 'c': 'dcacc', 'd': 'acbbbdacbadacdaad'}, 'daadaaaaacacbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdcdaccb', 'c': 'daccbccc', 'd': 'daaccd'}, 'dcaccccbccbddadaaadaaccd': {'a': 'acbbbdacbadacaaa', 'b': 'ccb', 'c': 'cc', 'd': 'acbbbdacbadadaadd'}, 'dddaa': {'a': 'ddaaa', 'b': 'dddaab', 'c': 'dddaac', 'd': 'dddaad'}, 'daaccbbdacbbbbbbdcdaccbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbdacbcbbb', 'c': 'acbbbdc', 'd': 'ddaaacacbcbd'}, 'acbbbdacbadaccbbbbbbdbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'acbbbdacbadaccbbbbbbdbbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbdbbd'}, 'daacccbcbbbbdbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbbdcd'}, 'daaccbbddaacbbbdbd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbd'}, 'acbbbdacbadadaaddaacb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadadaaddaacbb', 'c': 'daccbccca', 'd': 'dddaaddacbd'}, 'acbbbda': {'a': 'acbbbdaa', 'b': 'acbbbbdab', 'c': 'acbbbdac', 'd': 'acbbbdad'}, 'dddabaa': {'a': 'aa', 'b': 'ccb', 'c': 'ddaaacacbdaabcc', 'd': 'ccbd'}, 'daaccbcddadacbd': {'a': 'aaacbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'dacbdd'}, 'ddacb': {'a': 'ddacba', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'dacbd'}, 'daccccdddc': {'a': 'ccbda', 'b': 'ccb', 'c': 'dcaccccbbc', 'd': 'ccbd'}, 'daacbbcd': {'a': 'daacbbdbda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadadaadaab': {'a': 'acbbbdacbadacaaa', 'b': 'acbbbdacbadab', 'c': 'daccbccca', 'd': 'daad'}, 'daacccbbdb': {'a': 'dacba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'dcaccc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbbbbcd': {'a': 'daccbcba', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbcdd'}, 'daccbccb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'acbbbdc', 'd': 'daccbccbd'}, 'dcaccccbccbddadaaadaac': {'a': 'daadaa', 'b': 'dcaccccbccbddadaaadaacb', 'c': 'dcaccccbccbddadaaadaacc', 'd': 'acbbbdacbadadaadd'}, 'daccccbdcda': {'a': 'daacbcdaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddacdac', 'd': 'acbbbdacbadad'}, 'daaccbbdacbbbbbbbdaab': {'a': 'ddaaacacbdaaba', 'b': 'daacbbadadacb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbbbdcdac': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbcdaccbbacb', 'c': 'daaccbbdacbbbbbbdcdacc', 'd': 'daaccbcdaccbbacd'}, 'daacbbbabdd': {'a': 'acbbbdacbadda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbabddd'}, 'acbbbdacbaddcc': {'a': 'ccb', 'b': 'daaccbbdccbabb', 'c': 'dcac', 'd': 'ccb'}, 'daaccbbdacbbbbbbbcbbbbdbbbbbdd': {'a': 'daaccbbdacbbbbbbbcbbbbdbbbbbdda', 'b': 'daaccbbdacbbbbbbbcbddb', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbbbddd'}, 'daaccbbddabbddd': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daaccbbddabbdddd'}, 'acbbbdacbadaccbbbbbbdbbd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbddbdd'}, 'daacccbcbbbddddb': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacab', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbddddbd'}, 'daaccbbddaadc': {'a': 'daaba', 'b': 'daccccbdb', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'daacbbbabddd': {'a': 'daacbbbabddda', 'b': 'ccb', 'c': 'daadaaccd', 'd': 'daacbbbabdddd'}, 'dddaacc': {'a': 'dddaacca', 'b': 'dddaaccb', 'c': 'dddaaccc', 'd': 'daaccbbddaacaad'}, 'dcaccccbccbddadaaadacbbbbcddd': {'a': 'acbda', 'b': 'ccb', 'c': 'daacbbdbdaddc', 'd': 'daaccbbddaaccbbbdabd'}, 'dcaccccbccbddadaaadacbbbbbbbcddd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daaccbbddaacbbbdbd'}, 'acbbbdaaabb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'ddaaabbb', 'c': 'acbbbdc', 'd': 'daccbccbd'}, 'dcacc': {'a': 'ccb', 'b': 'ccb', 'c': 'dcaccc', 'd': 'ccb'}, 'daaccbbddaacbddc': {'a': 'daaba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'daaccbbddaacbddcc', 'd': 'acbbbdacbadacdaad'}, 'daaccbbdacbbbbbbdbbba': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadadaadd'}, 'dddaaccca': {'a': 'daaccca', 'b': 'daacbbc', 'c': 'daacbacc', 'd': 'acbbbdacbadadaadd'}, 'ddaaacaa': {'a': 'ddaaacaa', 'b': 'daacbbc', 'c': 'daacbcdaacc', 'd': 'acbbbdacbadacd'}, 'daaccbbddaacb': {'a': 'acbbbdacbadaaa', 'b': 'daaccbbddaacbb', 'c': 'daaccbbddaacbc', 'd': 'daaccbbddaacbd'}, 'acbbbdaa': {'a': 'acbbbdaaa', 'b': 'daaccbbdab', 'c': 'acbbbdaac', 'd': 'daaccbcddad'}, 'daacbbbabda': {'a': 'acbbbbdbdaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'acbbbdacbadacdaad'}, 'daaccbbaadda': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbaaddac', 'd': 'daacbbadadad'}, 'daccccbb': {'a': 'daacbba', 'b': 'daaccbb', 'c': 'daccccbbc', 'd': 'daacccbbd'}, 'daaccbbdacbbbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbdbd'}, 'daaccbbddaacbdad': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaacbdad'}, 'daaccbbddaacbbba': {'a': 'acbbbdacbadaa', 'b': 'daacbbc', 'c': 'daaccbc', 'd': 'daacbdaabd'}, 'daacbbadadadaaaabd': {'a': 'daadaaa', 'b': 'ccb', 'c': 'cc', 'd': 'dacbad'}, 'daaccbbddaacbbbbbaa': {'a': 'daaccbbddaacbbbbbaaa', 'b': 'acbbbdc', 'c': 'acbbbdacbadaccbbbbbbdbbbddacc', 'd': 'daaccbbddaacbbbbbaad'}, 'daacbacbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbacbbb', 'c': 'acbbbdc', 'd': 'aaacbbd'}, 'daacccbcbbbdddcacd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbca', 'd': 'ddaaacacbdaabaad'}, 'daaccbcdddd': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daaccbbddabbddd'}, 'daaccbbddaacbbbba': {'a': 'daaccbbaaaa', 'b': 'daccccbdb', 'c': 'daaccbbddaacbbbbac', 'd': 'daaccbbddaacbbbdbd'}, 'daccccbdcd': {'a': 'daccccbdcda', 'b': 'ccb', 'c': 'dcacc', 'd': 'daccccbdcdd'}, 'dcaccccbccbddadaaadaacb': {'a': 'aa', 'b': 'dcaccccbccbddadaaadaacbb', 'c': 'daacccbcbbbdacbc', 'd': 'acbbbdad'}, 'daaccbbdddccb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdddccbb', 'c': 'dcaccccbcc', 'd': 'daaccbbddaacbbcd'}, 'dcaccccbccbddadaaabb': {'a': 'acbbbdacbadacaaa', 'b': 'acbbbdacbadadaaddaacbb', 'c': 'aaba', 'd': 'daaccbcdad'}, 'daaccbbdacbbbbbbbcbbbbdbbbbbd': {'a': 'daaccbcd', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbbbdd'}, 'daacccbcbdd': {'a': 'daccbcbbdda', 'b': 'acbbbbdbddab', 'c': 'daab', 'd': 'daacccbcbddd'}, 'dacbd': {'a': 'acbbbda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'dacbdd'}, 'daacbcdaa': {'a': 'daacbbadadaa', 'b': 'daacbbc', 'c': 'daacbcdaac', 'd': 'daacbcdaad'}, 'dcaccccbccbddadaacd': {'a': 'dcaccccbccbddadaacda', 'b': 'ccb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbcbbbbaad': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'daaccbbdacbbbbbbbca', 'd': 'acbbbdacbadacdaad'}, 'dcaccccbccbddadaaadaa': {'a': 'dcaccccbccbddadaaadaaa', 'b': 'daadaaccd', 'c': 'dcaccccbccbddadaaadaac', 'd': 'acbbbdacbadadaadd'}, 'daacbbdd': {'a': 'acbbbddda', 'b': 'daacbbddb', 'c': 'daab', 'd': 'daacbbdd'}, 'dcaccccbccbddadaaadacbbbb': {'a': 'daaccd', 'b': 'dcaccccbccbddadaaadacbbbbb', 'c': 'dcaccccbccbddadaaadacbbbbc', 'd': 'aaacbbd'}, 'daaccb': {'a': 'daaccba', 'b': 'daaccbb', 'c': 'daaccbc', 'd': 'daaccbd'}, 'daaccbbdacbbbbbbba': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'daacccbcbbbddbdd'}, 'acbbbdacbadddaccb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbbadadadaccbb', 'c': 'daacbbc', 'd': 'daccbccbd'}, 'daaccbbddd': {'a': 'daaccbbda', 'b': 'daaccbbdddb', 'c': 'daaccbbdddc', 'd': 'daaccbbddd'}, 'acbbbdacbadaaadd': {'a': 'acbbbdacbadaaadda', 'b': 'ccb', 'c': 'daacbbdbdadc', 'd': 'dddaadd'}, 'daccbcccdc': {'a': 'ccb', 'b': 'ccb', 'c': 'dcaccccbbc', 'd': 'ccb'}, 'dcaccccbccbddadaaadaaaca': {'a': 'dcaccccbccbddadaaadaaacaa', 'b': 'dcaccccbccbddadaaadaaacab', 'c': 'daacbbadadadaaaacc', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadaaacabbc': {'a': 'dca', 'b': 'daaccbbdccbabb', 'c': 'dcaccc', 'd': 'acbbbdacbadadaadd'}, 'daacbbbabddda': {'a': 'acbbbdacbadaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbbbabdddac', 'd': 'daacbbbabddddd'}, 'acbbbdacbadaccbbbbbbdbbbddda': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadaccbbbbbbdbbbdddab', 'c': 'ddac', 'd': 'daaccbcdd'}, 'daaccbbdacbbbbbbd': {'a': 'daaccbbdacbbbbbbda', 'b': 'daaccbbdacbbbbbbdb', 'c': 'daaccbbdacbbbbbbdc', 'd': 'daaccbbdacbbbbbbdd'}, 'daacbcbb': {'a': 'daaccbbdacbcbbba', 'b': 'daacbcbbb', 'c': 'acbbbdc', 'd': 'daaccbbdacbcbd'}, 'daaccbbdacbbbbbbbcbdd': {'a': 'daaccbbdacbbbbbbbcbdda', 'b': 'daaccbbdacbbbbbbbcbddb', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daacbcbd': {'a': 'acbbbda', 'b': 'acbbbdb', 'c': 'daacbbc', 'd': 'daacbcbdd'}, 'ddaaacacb': {'a': 'daaccbbddaacbbca', 'b': 'daccccbb', 'c': 'ddaaacacbc', 'd': 'ddaaacacbd'}, 'acbbbdacbadadaadaa': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadaab', 'c': 'daacbbadadaac', 'd': 'dacbad'}, 'daaccbbdacbbbbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbdbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbdbd'}, 'daadaaaa': {'a': 'daadaaaaa', 'b': 'ddacab', 'c': 'daadaaaac', 'd': 'acbbbdacbadadaadd'}, 'daacbdaab': {'a': 'daacbaa', 'b': 'daacbdaabb', 'c': 'daacbdaabc', 'd': 'daacbdaabd'}, 'ddaaacabbbcb': {'a': 'acbbbdacbadadaadd', 'b': 'ddaaacabbbcb', 'c': 'ccb', 'd': 'ddaaacabbbcbd'}, 'daacccbcbbbddbdaddd': {'a': 'daacccbcbbbddbdaddda', 'b': 'ccb', 'c': 'ccbd', 'd': 'ddaaacacbdaabaad'}, 'daaccbbdddcdd': {'a': 'acbbbdacbadda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daacbbad'}, 'daaccbbdacbbbbbbbdbbddd': {'a': 'acbbbdacbadaccbbbbbbdbbbddda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'daacbbadadadaccbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbbb', 'c': 'daacbbadadacbbbc', 'd': 'daaccbbdacbcbbbbd'}, 'daacbbadadadaaca': {'a': 'daacbbadadadaacaa', 'b': 'daaccbcdaddc', 'c': 'daacbbadadadaacac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbddacbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacbbb', 'c': 'acbbbdc', 'd': 'acbbbd'}, 'acbbbdacbadaccbbbbbbdbbbddaca': {'a': 'daaccbbddaacbbca', 'b': 'acbbbbdbddab', 'c': 'ddaaacacbdaabcc', 'd': 'ddaaacacbdaabaad'}, 'dddaaddacbdaa': {'a': 'dddaa', 'b': 'ddaab', 'c': 'ddaaacacbdaac', 'd': 'dddaadd'}, 'acbbbdacbadaccbbbbbbd': {'a': 'acbbbdacbadaccbbbbbbda', 'b': 'acbbbdacbadaccbbbbbbdb', 'c': 'acbbbdacbadaccbbbbbbdc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daccccb': {'a': 'daaccbbddaacbbca', 'b': 'daccccbb', 'c': 'daaccbc', 'd': 'daccccbd'}, 'daccccbdc': {'a': 'daccccbdca', 'b': 'daacbbc', 'c': 'ac', 'd': 'daccccbdcd'}, 'acbbbdacbadaccbbbbdd': {'a': 'acbbbddda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'acbbbdacbadaccbbbbddd'}, 'daaccbbddaacbbbb': {'a': 'daaccbbddaacbbbba', 'b': 'daaccbbddaacbbbbb', 'c': 'daacbbc', 'd': 'daaccbbddaacbbbbd'}, 'daaccbbddaab': {'a': 'acbbbdacbadaaa', 'b': 'daaccbcdaccbb', 'c': 'daaccbbddaabc', 'd': 'daaccbbddaabd'}, 'daacbbdbda': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'daacbbdbdac', 'd': 'daacbbdbdad'}, 'dcaccccbcc': {'a': 'cc', 'b': 'dcaccccbccb', 'c': 'dcaccccbc', 'd': 'ccb'}, 'daadaaacb': {'a': 'a', 'b': 'daaccbcdaccbb', 'c': 'daacbc', 'd': 'daaccbbdadd'}, 'daaccbaccb': {'a': 'daaccbaccba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'acbbbd'}, 'daacbbada': {'a': 'daacbbadadaa', 'b': 'acbbbdacbadacdaab', 'c': 'acbbbbdbdaac', 'd': 'daacbbadad'}, 'dcaccccbccbddadaaadaaacabbb': {'a': 'daaccbcdaccbbacd', 'b': 'dcaccccbbb', 'c': 'ddaaacabbbcc', 'd': 'daacbbadadacbbbd'}, 'daccbcba': {'a': 'dddaba', 'b': 'ccb', 'c': 'ddaaacacbdaabc', 'd': 'dacbad'}, 'dcaccccbccbdda': {'a': 'acbbbdaa', 'b': 'acbbbdacbadadaadaab', 'c': 'daadaaaaac', 'd': 'dcaccccbccbddad'}, 'ddaaba': {'a': 'ddaaacacbdaabaa', 'b': 'daadaaccd', 'c': 'daaccbac', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbbbdddcdcc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'acbbbdacbaddcc', 'd': 'ccb'}, 'daaccbcdda': {'a': 'acbbbdaa', 'b': 'daccbcbbdc', 'c': 'daaccbcddac', 'd': 'daaccbcddad'}, 'daaccbbdacbbbbbbbcbbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'daaccbbdacbbbbbbbcbbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcbbbd'}, 'acbbbdacbadada': {'a': 'acbbbdacbadadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddadc', 'd': 'dacbad'}, 'acbbbdacbadadaadd': {'a': 'acbbbdacbadadaadda', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbcbbbbdaa': {'a': 'acbbbdaaa', 'b': 'daaccbbdacbcbbbbdaab', 'c': 'daaccbbdac', 'd': 'daaccbcddad'}, 'daaccbbdacbbbbbbbdbd': {'a': 'acbbbdacbadaccbbbbdddcda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbbbbbbbdbdd'}, 'daaccbbdacbcbbbbda': {'a': 'daaccbbdacbcbbbbdaa', 'b': 'acbbbbdab', 'c': 'ddaaacacbdaac', 'd': 'daaccbbddaacd'}, 'acbbbdacbadaccbbbdb': {'a': 'daccbcba', 'b': 'acbbbdacbadab', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbdbd'}, 'daacbbadadadaaaacccbcbddd': {'a': 'daaccbbda', 'b': 'daacccbcbdddb', 'c': 'daab', 'd': 'daacccbcbbbdddd'}, 'daacccbcbbbdddcdc': {'a': 'acbbbdacbaddc', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daacccbcbbbdddcdcc', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadadaaaacccbcbbb': {'a': 'daaccbbddaacbbbbbaa', 'b': 'daacbbadadadaaaacccbcbbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'ddaaacba': {'a': 'ddaaacaa', 'b': 'daacbbc', 'c': 'daacbbbaac', 'd': 'acbbbdacbad'}, 'daacbdcddacc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbdcddaccb', 'c': 'acbbbdacbadaccc', 'd': 'daacbdcddaccd'}, 'dddd': {'a': 'dddda', 'b': 'ccb', 'c': 'ccbda', 'd': 'ddddd'}, 'daaccbbdacbbbbb': {'a': 'daaccbbddaacbbbbbba', 'b': 'daaccbbdacbbbbbb', 'c': 'daaccbbdacbbbbbc', 'd': 'daaccbbdacbbbbbd'}, 'daacbdcdd': {'a': 'daacbdcdda', 'b': 'ccb', 'c': 'ccb', 'd': 'daad'}, 'ddaabd': {'a': 'ddaabda', 'b': 'ccb', 'c': 'daccbccca', 'd': 'daccccbdcdd'}, 'daacbcdaadac': {'a': 'acbbbdacbadacaaa', 'b': 'daacbdaabb', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadddacd'}, 'daccbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daccbcb', 'c': 'daccbcc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'daaccbbdacbbbbbbbdacd': {'a': 'daaccbcda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbbbbcbbbbd': {'a': 'daaccbbdacbbbbbbbcbbbbda', 'b': 'daaccbbdacbbbbbbbcbbbbdb', 'c': 'daaccbbdacbbbbbbbcbbbbdc', 'd': 'acbbbbd'}, 'daaccbd': {'a': 'aaacbbda', 'b': 'daaccbbdacbcbdb', 'c': 'daaccbdc', 'd': 'daaccbdd'}, 'acbbbdacbadaccbbbbbbda': {'a': 'daaccbbddaacbdada', 'b': 'daccbcbbdc', 'c': 'daaccbbdacbbbbbbbdac', 'd': 'daaccbbddabbdddd'}, 'dcaccccbccbddadaaadaaccb': {'a': 'daacbbadadadaaaacba', 'b': 'dddaaccbb', 'c': 'acbbbdacbaaac', 'd': 'daacccbcbd'}, 'daaccbbddaacca': {'a': 'ddaaacaa', 'b': 'daaccbbddaaccab', 'c': 'daaccbbddaaccac', 'd': 'daaccbbaad'}, 'acbbbdacbadaccbbbbbbbad': {'a': 'acbbbbdbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacccbcbbbddbdd'}, 'dddaaddacc': {'a': 'daacbbadadadacca', 'b': 'daacbbadadadaacb', 'c': 'dddaaddaccc', 'd': 'acbbbdacbadadaadd'}, 'acbbbbdbddadad': {'a': 'daacbbadada', 'b': 'ccb', 'c': 'daaccbcdaddc', 'd': 'acbbbbdbddadadd'}, 'daacccbcbbbddddbdddd': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daacccbcbbbddddbddddd'}, 'dcaccccbccbddadaaadaacbbbb': {'a': 'dcaccccbccbddadaaadaacbbbba', 'b': 'daacccbcbbbb', 'c': 'daacbbc', 'd': 'dcaccccbccbddadaaadaacbbbbd'}, 'acbbbdacbadaccbbbbbbcbbbbddb': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbddb'}, 'daacccbbcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdcdaccb', 'c': 'daccbccc', 'd': 'daccccd'}, 'daaccbbdacbbbbbbbcddd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'daacbbbaada': {'a': 'acbda', 'b': 'daacbbbaacab', 'c': 'acbbbdc', 'd': 'acbbbdacbadad'}, 'daacbbadadadaaaab': {'a': 'aa', 'b': 'daacbbadadadaaaabb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbadadadaaaabd'}, 'acbbbdcb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'ccb', 'd': 'daacbbadadadaccbd'}, 'daaccbbdacbbbbbbbcbbbdac': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbacbb', 'c': 'daacbbadadadaaaacbcc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'daacccbcbbbddbddddd': {'a': 'daacbbada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daacccbcbbbddbddddd'}, 'daaccbbddaaccbbbd': {'a': 'daaccbbddaaccbbbda', 'b': 'daaccbbddaaccbbbdb', 'c': 'daaccbbddaaccbbbdc', 'd': 'daacccbbd'}, 'daacccbcbbbdddcb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbb', 'c': 'acbbbbdbdc', 'd': 'daaccbbddaacbbbdbd'}, 'ddaaacacbcbd': {'a': 'aaacbbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daacbbc', 'd': 'daccbcbbddd'}, 'daacbbadadadaaaacddac': {'a': 'acbbbdacbadaca', 'b': 'ddaaabb', 'c': 'acbbbdacbadaccc', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadacbbbbbbbd': {'a': 'acbbbdacbadaccbbbbbbda', 'b': 'daaccbbdacbbbbbbdb', 'c': 'daaccbbdacbbbbbbdcdac', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daacbbadadadaccbdd': {'a': 'aaacbbda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'daacbdcddaccb': {'a': 'daaccbbddaacaaadacba', 'b': 'daacbacb', 'c': 'acbbbdc', 'd': 'daccbccbd'}, 'daaccbbddaacbbbbddbd': {'a': 'daacccbcbbbddbda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbbdbdd'}, 'daaccbbdacbcbbd': {'a': 'aaacbbda', 'b': 'daaccbbdacbcbdb', 'c': 'acbbbbdab', 'd': 'daccbcbbddd'}, 'aaacbb': {'a': 'daaccbbdacbcbbba', 'b': 'aaacbbb', 'c': 'acbbbdc', 'd': 'aaacbbd'}, 'daaccbbdacbbbbbbdcdd': {'a': 'daaccbcda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daaccbbddaacbbbdbd'}, 'daadaaaacb': {'a': 'daacba', 'b': 'daccccbb', 'c': 'ddaaacacbc', 'd': 'daaccbcdaccbd'}, 'daccbcbbd': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdb', 'c': 'daccbcbbdc', 'd': 'daccbcbbdd'}, 'dddaaddacbbbb': {'a': 'daaccbbddaacbbbbacd', 'b': 'dddaaddacbbbbb', 'c': 'acbbbc', 'd': 'daaccbbdacbcbbbbd'}, 'daacbbdbdac': {'a': 'acbbbdacbadaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'acbbbdacbadacc', 'd': 'dacba'}, 'daacccbcbbbddddc': {'a': 'daacccbcbbbdddca', 'b': 'daccccbdb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbcbdbd'}, 'daaccbbdacbcbbbba': {'a': 'daaccbbdacbcbbbbaa', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbcbdbd'}, 'dcacccccb': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacacacbb', 'c': 'ddaaacacbdaabc', 'd': 'dcacccccbd'}, 'acbbbdacbadda': {'a': 'daacbbadadaa', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbaddac', 'd': 'acbbbdacbadad'}, 'daacbcdaad': {'a': 'daacbcdaada', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbdacbadad'}, 'daaccbbdac': {'a': 'daaccbbdaca', 'b': 'daaccbbdacb', 'c': 'daac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaacbbccb': {'a': 'acbbbdacbadacdaab', 'b': 'daaccbbdacbcbb', 'c': 'acbbbdc', 'd': 'daacbbadadacbbbd'}, 'daaccbbdacbbbbbbbdbbdd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbbbbbbbdbbddd'}, 'daaccbbddaaccbbb': {'a': 'daaccbbddaaccbbba', 'b': 'daaccbbddaacbbbb', 'c': 'daaccbbddaaccbbbc', 'd': 'daaccbbddaaccbbbd'}, 'acbbbdacbadaca': {'a': 'acbbbdacbadacaa', 'b': 'daacbbbaacab', 'c': 'ddaaacacbdaabcc', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'daacccbcbbbbbb', 'c': 'daaccbbdacbcbbbbc', 'd': 'acbbbdacbadaccbbbbbd'}, 'daaccbbdadd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'daacbcdad': {'a': 'daacbcdaada', 'b': 'ccb', 'c': 'cc', 'd': 'dddaadd'}, 'daccdd': {'a': 'ddaaba', 'b': 'ccb', 'c': 'ccb', 'd': 'daad'}, 'daacbacbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbbb', 'c': 'daacbbbab', 'd': 'aaacbbd'}, 'daaccbbdacbbbbbbbdbddacc': {'a': 'daacccbcbbbdddcaca', 'b': 'daccbccb', 'c': 'daccbccc', 'd': 'daccbcba'}, 'daacbbadadac': {'a': 'daaba', 'b': 'daacbbadadacb', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadddacd'}, 'daaccbbddaacbbbbbbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbbbb', 'c': 'acbbbbdbdc', 'd': 'acbbbbdbd'}, 'daaccbbdacbbbbdbbbd': {'a': 'daacbcda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'acbbbdacbadaccbbbbbbcbbbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcbbbb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbcbbbbd'}, 'daadaaaaacacb': {'a': 'daaccbbddaacbbca', 'b': 'daacbbb', 'c': 'daadaaaaacacbc', 'd': 'ddaaabbbbd'}, 'acbbbdacbaddd': {'a': 'acbbbdacbaddda', 'b': 'ccb', 'c': 'daacbbdbdaddc', 'd': 'dddaadd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbbdda': {'a': 'acbbbdacbadaaa', 'b': 'acbbbdacbadacdaab', 'c': 'daacbbbabdddac', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbdbb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbdbbb', 'c': 'ccb', 'd': 'daacccbcbbbddbdd'}, 'daaccbbdddcda': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdacbadaccbbbbbbdbbbddacdac', 'd': 'acbbbdacbadad'}, 'daadaaac': {'a': 'daadaaaca', 'b': 'daadaaacb', 'c': 'daaccbbdacac', 'd': 'acbbbdacbadadaadd'}, 'acbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ccb', 'd': 'acbbbbdbd'}, 'acbbbdacbaddacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbaddacbb', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbcd'}, 'acbbbdacbadaccbbbbbbcbdd': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'ddaaabbbbd'}, 'daacbbadadadaaaacccbc': {'a': 'daaccca', 'b': 'daacbbadadadaaaacccbcb', 'c': 'dacc', 'd': 'daaccbbddabbd'}, 'daaccbbddaacbbbd': {'a': 'daaccbbdda', 'b': 'daaccbbddaacbbbdb', 'c': 'daaccbbddaacbbbdc', 'd': 'daaccbbddaacbbbbdd'}, 'daaccbbdacbbbbdb': {'a': 'daccbcba', 'b': 'daaccbbdacbbbbdbb', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbbbbdbd'}, 'acbbbbdbdc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadadaadd'}, 'daacccbcd': {'a': 'daaccbcda', 'b': 'daccbcbbddadb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbcddd'}, 'dcaccccbccbddadaaadaacbbbbab': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacabbbcb', 'c': 'ccb', 'd': 'acbbbdcd'}, 'dcaccccbccbddadaaadacbbbbbbcdd': {'a': 'daaccbbdddcda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'dcaccccbccbddadaaadacbbbbbbcddd'}, 'daaccbdca': {'a': 'acbbbdacbadacaa', 'b': 'daacbbbaacab', 'c': 'acbbbdacbadacaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddaacaadacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacbb', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbcd'}, 'acbbbdacbadaccbbbbdddcda': {'a': 'acbbbbdbdaa', 'b': 'acbbbdacbadab', 'c': 'daaccbbdddcc', 'd': 'daacccbcbbbddbdadd'}, 'ddaaa': {'a': 'ddaaa', 'b': 'ddaaab', 'c': 'ddaaac', 'd': 'daaccbcdad'}, 'daacccbcbbbddddbdda': {'a': 'daaccbcda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbbaadd'}, 'daaccbbddaacbbbbacda': {'a': 'daacbbbaa', 'b': 'daacbbbaacab', 'c': 'acbbbdc', 'd': 'acbbbdacbadacdaad'}, 'daaccdd': {'a': 'daaccbbddaacaadda', 'b': 'ccb', 'c': 'daaccddc', 'd': 'daabdd'}, 'ddaaacacacbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbbadadadaaaacccbcbbbb', 'c': 'acbbbdc', 'd': 'aaacbbd'}, 'daaccbc': {'a': 'daaccbca', 'b': 'aaacb', 'c': 'daaccbac', 'd': 'daaccbcd'}, 'daadaaaac': {'a': 'daadaaaaaca', 'b': 'daadaaaacb', 'c': 'ddaaabbbbbdac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddaacbbbbbddd': {'a': 'acbbbddda', 'b': 'acbbbdacbadaccbbbbdddb', 'c': 'daacccbcbbbdddc', 'd': 'acbbbdacbadaccbbbbddd'}, 'daaccbbdacbbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbdbb', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbddbdd'}, 'daaccbbdacbcbdbd': {'a': 'daaccbbdddcda', 'b': 'ccb', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbcbbbbcddd'}, 'acbbbdacbadaccbbbbbbdbbbdada': {'a': 'acbbbdacbadaa', 'b': 'daaccbbdacbbbbbbbcbbdab', 'c': 'acbbbdacbadaccbbbbbbdbbbdadac', 'd': 'acbbbbdbddad'}, 'daacccbcbbbddddbddddd': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daacccbcbbbddddbddddd'}, 'daaccbbdddbd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdddbdd'}, 'daacccbcbbbddbdada': {'a': 'acbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdacbadad'}, 'daacccbdb': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daacbbcd'}, 'daaccbbdacbbbbbbdbbbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbdbbbbd'}, 'ddaaacb': {'a': 'ddaaacba', 'b': 'daacccbb', 'c': 'daacccbc', 'd': 'daacccbd'}, 'dcaccccbccbddadaaac': {'a': 'daaccbbddaaca', 'b': 'dcaccccbccbddadaaacb', 'c': 'dcaccccbccbddadaaacc', 'd': 'dcaccccbccbddadaaacd'}, 'daaccbbdacaa': {'a': 'daaccbbdacaaa', 'b': 'daacbbc', 'c': 'ddaaacac', 'd': 'daaccbbaad'}, 'daaccbbddaacbbbdcb': {'a': 'dacba', 'b': 'daaccbbddaacbbbdcbb', 'c': 'ddaaacacbdaabc', 'd': 'dacbd'}, 'daacccbcbbbdddcd': {'a': 'acbbbdacbadaccbbbbbbdbbbddacda', 'b': 'ccbd', 'c': 'daacccbcbbbdddcdc', 'd': 'daacccbcbbbdddcdd'}, 'daaccbbddaa': {'a': 'daaccbbddaa', 'b': 'daaccbbddaab', 'c': 'daaccbbddaac', 'd': 'daaccbbddaad'}, 'daacccbcbbbddddbddd': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daacccbcbbbddddbdddd'}, 'acbbbbdbddca': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'acbbbbdbddcac', 'd': 'ccbd'}, 'daaccbcddad': {'a': 'daaccbcddada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbcddad'}, 'daacbbadadadaaaacccbcbbbbdb': {'a': 'daccbcba', 'b': 'acbbbdacbadadaaddaacbb', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbbbbdbd'}, 'aaacbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbb', 'c': 'acbbbdc', 'd': 'aaacbbbd'}, 'acbbbdacbadaccbbbbbbddcddd': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbddcdddd'}, 'daaccbbdacbba': {'a': 'daacbcdaa', 'b': 'daacbbc', 'c': 'daaccbc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdddcd': {'a': 'daaccbbdddcda', 'b': 'ccb', 'c': 'daaccbbdddcdc', 'd': 'daaccbbdddcdd'}, 'dcaccccbccbddadaa': {'a': 'dcaccccbccbddadaaa', 'b': 'dcaccccbccbddadaab', 'c': 'dcaccccbccbddadaac', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadadaccbbbc': {'a': 'cc', 'b': 'ddaaacabbbcb', 'c': 'cc', 'd': 'acbbbdcd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbbbd'}, 'daaccbbddaacbbbdbbbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'daaccbbddaacbbbdbbbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbddaacbbbdbbbbd'}, 'aaacbd': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'dacbdd'}, 'dcaccccbccbddadaaadaaacda': {'a': 'dddaadda', 'b': 'ccb', 'c': 'ddaaacacbdaabc', 'd': 'ccbd'}, 'dcaccccbccbddadaaadacbbbbbbcddd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daaccbbddaacbbbdbd'}, 'daadaaaaacb': {'a': 'daacbbadadadaaaaccba', 'b': 'daccccbb', 'c': 'daaccbc', 'd': 'aaacbbd'}, 'ddaaacabbbc': {'a': 'ddaaacabbbca', 'b': 'ddaaacabbbcb', 'c': 'ddaaacabbbcc', 'd': 'daccbcbbddadb'}, 'dddaaddacac': {'a': 'daacccbcbbbdddcaca', 'b': 'dddaaddacacb', 'c': 'acbbbdacbadaccc', 'd': 'ccbd'}, 'daacbbbabdddac': {'a': 'daaccbbddaacbbca', 'b': 'ddaaabb', 'c': 'daaccbcdacc', 'd': 'daaccbbaad'}, 'daacbbbad': {'a': 'daaccbcda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbbbcb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'daaccbbdacbbbbbbbcbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcbd'}, 'daacbbbabddddd': {'a': 'daacbbadadadaa', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadacbbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'dcaccccbccbddadaaadacbbbbbb', 'c': 'acbbbc', 'd': 'acbbbdacbadaccbbbbd'}, 'daaccbbddaacbbbdbb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbddaacbbbdbbd'}, 'daacbbadadadaaaacccbbdc': {'a': 'ddaaacacbdaaba', 'b': 'daacbbadadadaaaacccbbdcb', 'c': 'daaccbac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbbbdac': {'a': 'daacbaa', 'b': 'daccccbb', 'c': 'daaccc', 'd': 'daaccbbdacbbbbbbbdacd'}, 'daaccbbddaacbbbdcbb': {'a': 'daaccbcdaccbbacd', 'b': 'ddaaacabbbb', 'c': 'ddaaacabbbc', 'd': 'daaccbbdddccbbd'}, 'daacbbadadada': {'a': 'daacbbadadadaa', 'b': 'ccb', 'c': 'daacbbadadadac', 'd': 'acbbbdacbadadaadd'}, 'daaccbcdaccbbac': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbcdaccbbacb', 'c': 'daccbccc', 'd': 'daaccbcdaccbbacd'}, 'acbbbbdbdaacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'acbbbdc', 'd': 'acbbbbdbdaacbd'}, 'daacbbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbc', 'c': 'ddaaacacbdaabc', 'd': 'daacbbcd'}, 'daacbbadadca': {'a': 'dca', 'b': 'ccb', 'c': 'dca', 'd': 'ccb'}, 'daaccbbddaacbcac': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbaacb', 'c': 'aac', 'd': 'daccbcba'}, 'daacccbcbdddacbba': {'a': 'acbbbdacbadaa', 'b': 'daacbbc', 'c': 'daacbbadadadaaaacbc', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadaccbbbbcd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbdddcdd'}, 'daccbcbbdcda': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daccbcbbdcdac', 'd': 'dddaadd'}, 'daacbcda': {'a': 'daacbcdaa', 'b': 'acbbbdacbadab', 'c': 'daaccbac', 'd': 'daacbcdad'}, 'daacbbbaad': {'a': 'daacbbbaada', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'daaccbbaadd'}, 'daacbbadadadaaaaccb': {'a': 'daacbbadadadaaaaccba', 'b': 'daacccbb', 'c': 'daacbcdaacc', 'd': 'daacccbcbbd'}, 'daaccbcdad': {'a': 'acbbbdacbadadaa', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'daaccbcdadd'}, 'ddaaacacbda': {'a': 'ddaaacacbdaa', 'b': 'acbbbbdab', 'c': 'daac', 'd': 'daaccbcddad'}, 'daacbbadadacbd': {'a': 'acbbbdacbadaa', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daaccbbdadd'}, 'acbbbdacbadaccbbbbbbddcddddda': {'a': 'daacbbadadaa', 'b': 'acbbbdacbadacdaab', 'c': 'acbbbdacbadaccbbbbbbdbbbdadac', 'd': 'acbbbbdbddad'}, 'daaccbbdacbcbd': {'a': 'aaacbbda', 'b': 'daaccbbdacbcbdb', 'c': 'daccbcbbdc', 'd': 'daccbcbbddd'}, 'ddaaacab': {'a': 'daacbbbaaca', 'b': 'ddaaacabb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'daacbbadadadaacc': {'a': 'daaccca', 'b': 'daacbbadadadaaccb', 'c': 'daacbcdaacc', 'd': 'daacbbadadadaaccd'}, 'daacbcd': {'a': 'daacbcda', 'b': 'ccbd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddada': {'a': 'dcaccccbccbddadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daadaaaac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaa': {'a': 'acbbbdacbadaaa', 'b': 'daccbcbbdc', 'c': 'ddac', 'd': 'acbbbdacbadaad'}, 'ddaaacacac': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacacacb', 'c': 'aac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbddacbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ccb', 'd': 'daacccbcbbbddbdd'}, 'acbbbdacbadaccbbbbbba': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbad'}, 'daaccbbddaacbbbdbcc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'dcaccccbbc', 'd': 'ccb'}, 'daaccbbdacbbbbbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbbdbd'}, 'daaccbbaaaa': {'a': 'acbbbdacbadaa', 'b': 'daacbbc', 'c': 'ddaaabbbbbdac', 'd': 'daaccbbaad'}, 'daacbbbab': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daacbbbabd'}, 'daaccbbdacbbbbbbdbddcb': {'a': 'daaccbbdacbbbbbbbca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'daaccbbdacbbbbbbbdbddd': {'a': 'acbbbdacbadaccbbbbbbdbbbddda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'acbbbdaac': {'a': 'daaccbbdacaa', 'b': 'daaccbbdacb', 'c': 'daac', 'd': 'daaccbbddaaccbbbdabd'}, 'daacbad': {'a': 'daacccbcbbbddbda', 'b': 'ccb', 'c': 'daacbadc', 'd': 'acbbbdacbadacdaad'}, 'acbbbdacbaddacc': {'a': 'daacbbadadadacca', 'b': 'acbbbdacbaddaccb', 'c': 'acbbbbdbdaacc', 'd': 'daccbcba'}, 'daacbbadadadaaaacc': {'a': 'daacbbadadadaaaacca', 'b': 'daacbbadadadaaaaccb', 'c': 'daacbbadadadaaaaccc', 'd': 'daaccd'}, 'daaccbbddaacbdadacbcba': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadaccbbbbbbcbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'dddaaddacbbb': {'a': 'daaccbbdacbcbdba', 'b': 'dddaaddacbbbb', 'c': 'ccb', 'd': 'daacbbadadacbbbd'}, 'ccb': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccbd'}, 'daacbdaa': {'a': 'daaccbbddaa', 'b': 'daacbdaab', 'c': 'acbbbdaac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbbdbb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'daaccbbdacbbbbbbdbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbdbbd'}, 'daaccbbdacbbbbbbdbddc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadadac': {'a': 'acbbbdacbadacaaa', 'b': 'daacbbadadadacb', 'c': 'daacbbadadadacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadacaac': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdddccb', 'c': 'daccbccc', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbddb': {'a': 'daaccbbdacbcbdba', 'b': 'daacbbbaacabb', 'c': 'ddaaacabbbcc', 'd': 'acbbbbdbd'}, 'daccbcb': {'a': 'daccbcba', 'b': 'daccbcbb', 'c': 'acbbbdc', 'd': 'daccbcbd'}, 'daaccbbddaacbdadacbcbbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbb', 'c': 'ddaaacabbbc', 'd': 'ddaaabbbbd'}, 'acbbbbdbdaacbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'ddaca': {'a': 'ddacaa', 'b': 'ddacab', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbdddc': {'a': 'dacba', 'b': 'acbbbdacbadaccbbbbdddcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbdddcd'}, 'dcaccccbccbddadaaacc': {'a': 'dcaccccbccbddadaaacca', 'b': 'dcaccccbccbddadaaaccb', 'c': 'daac', 'd': 'daacbbbad'}, 'daaccbbddaacaaadac': {'a': 'daacbbbaaca', 'b': 'daaccbbddaacaaadacb', 'c': 'acbbbdacbadaccc', 'd': 'daadaaaaacacd'}, 'daaccbbdacbbbbbbbca': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'ccbd'}, 'daaccbbda': {'a': 'daaccbbddaa', 'b': 'daaccbbdab', 'c': 'daaccbbdac', 'd': 'daaccbbdad'}, 'dcaccccbccbddadaaadaaaaabb': {'a': 'ddacba', 'b': 'daaccbacbb', 'c': 'daacbbc', 'd': 'acbbbbdbdaacbd'}, 'daaccbcddadac': {'a': 'ddaaacacbdaabaa', 'b': 'daaccbcddadacb', 'c': 'daacbcdaac', 'd': 'daaccbbddaacaad'}, 'daaccbbddabb': {'a': 'dacba', 'b': 'daaccbbddabbb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddabbd'}, 'daaccbbdacbbbbbbdcdacc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdcdaccb', 'c': 'daccbccc', 'd': 'daaccbbdccba'}, 'dcaccccbccbddadaaadaaaabbbb': {'a': 'dacba', 'b': 'acbbb', 'c': 'ddaaacabbbcc', 'd': 'acbbbd'}, 'daacbd': {'a': 'daacbda', 'b': 'acbbbdb', 'c': 'daacbdc', 'd': 'daacbdd'}, 'daaccbca': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadab', 'c': 'ac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbdddcd': {'a': 'acbbbdacbadaccbbbbdddcda', 'b': 'ccb', 'c': 'acbbbbdbddc', 'd': 'acbbbdacbadaccbbbbdddcdd'}, 'daacccbcbbbdddca': {'a': 'daacbaa', 'b': 'daacbbbaacab', 'c': 'daacccbcbbbdddcac', 'd': 'ddaaacacbdaabaad'}, 'daaccbbddaaccbbbdabbb': {'a': 'daccbcba', 'b': 'ddaaabbbb', 'c': 'daaccbbddaaccbbbdabbbc', 'd': 'aaacbd'}, 'dcacccc': {'a': 'dcac', 'b': 'dcaccccb', 'c': 'dcaccccc', 'd': 'ccb'}, 'daacbadc': {'a': 'ccb', 'b': 'ccb', 'c': 'daacbadcc', 'd': 'ccb'}, 'daaccbbdacbbbbbbc': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbddaacbbbdbbbbb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbdbbd'}, 'daaccbbddaacaaadacbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'ddaaabbbbb', 'c': 'acbbbdacbadaccbbbbc', 'd': 'acbbbd'}, 'daacbbbabdddd': {'a': 'daacbbbabdddda', 'b': 'ccb', 'c': 'c', 'd': 'daacbbbabddddd'}, 'ddaaab': {'a': 'daacbaa', 'b': 'ddaaabb', 'c': 'daacbdaabc', 'd': 'daacbbbad'}, 'dcaccccbccbddadaaadacc': {'a': 'daacbbbaaca', 'b': 'daadaaacb', 'c': 'daadaacc', 'd': 'acbbbdacbadadaadd'}, 'daacbbddb': {'a': 'daaccbbdacbcbdba', 'b': 'ddaaacabbbcc', 'c': 'ddaaacabbbcc', 'd': 'acbbbdcd'}, 'dcaccccbccbddadaaadaaab': {'a': 'dddabaa', 'b': 'acbbbdacbadab', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbb': {'a': 'acbbbdacbadaccbbbbbbba', 'b': 'acbbbdacbadaccbbbbbbbb', 'c': 'acbbbdacbadaccbbbbbbbc', 'd': 'acbbbdacbadaccbbbbbbbd'}, 'daaccbbdacbcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbdacbcbb', 'c': 'acbbbdc', 'd': 'daaccbbdacbcbd'}, 'acbbbdacbadaccbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbbb', 'c': 'acbbbdacbadaccbbbbc', 'd': 'acbbbdacbadaccbbbbd'}, 'daacbcdaacc': {'a': 'daaccca', 'b': 'daccb', 'c': 'dacc', 'd': 'daaccd'}, 'acbbbdacbadaccbbbbbbdbbbddacbbbd': {'a': 'daaccbbdacbcbbbbda', 'b': 'acbbbdacbadaccbbbbbbdbbbddacbbbdb', 'c': 'daacbbc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'dcaccccbccbd': {'a': 'daacbbadadadaaaacda', 'b': 'ccb', 'c': 'dca', 'd': 'dcaccccbccbdd'}, 'daacccbcbbbdacb': {'a': 'daacccbcbbbdacba', 'b': 'daaccbb', 'c': 'daacccbcbbbdacbc', 'd': 'daacccbd'}, 'acbbc': {'a': 'c', 'b': 'aabb', 'c': 'dca', 'd': 'daccbcbbddadb'}, 'daacccbcbbbdacbc': {'a': 'daaccca', 'b': 'daacbcb', 'c': 'daacbcc', 'd': 'daacbbbad'}, 'daacbbadadacbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'ddaaabbbbb', 'c': 'daacbbadadacbbbc', 'd': 'daacbbadadacbbbd'}, 'daacbbadadadaaaacccbcb': {'a': 'daacbbadadadaaaacccbcba', 'b': 'daacbbadadadaaaacccbcbb', 'c': 'daccccbbc', 'd': 'daacbbadadadaaaacccbcbd'}, 'daaccbbddaacbbbbd': {'a': 'daaccbbddaacbbbbda', 'b': 'daaccbbddaacbbbbdb', 'c': 'daacccbcbbbdddc', 'd': 'daaccbbddaacbbbbdd'}, 'daaccbbddaacaab': {'a': 'daaccbbddaacbbca', 'b': 'ddaaabbb', 'c': 'ddaaacacbdaabcc', 'd': 'daaccbbddaacaabd'}, 'daaccbacbb': {'a': 'daaccbbdacbcbbba', 'b': 'daacbacbbb', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbd'}, 'daaccbbddaacaaadacba': {'a': 'acbbbdacbadacaa', 'b': 'daacbbbaacab', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaaaacbcc': {'a': 'daacccbcbbbdddcaca', 'b': 'aaacb', 'c': 'daacbacc', 'd': 'daaccd'}, 'daaccbbdacbbbbbbdbbbbda': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'daaccbbdacbbbbbbdcdac', 'd': 'daaccbcdd'}, 'daadaaaaa': {'a': 'daa', 'b': 'daab', 'c': 'daadaaaaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbba': {'a': 'daaccbbdacbbbbbbdcda', 'b': 'daacccbcbbbab', 'c': 'acbbbdc', 'd': 'daaccbbdacbbbbbbbdacd'}, 'daacccbcbbbddb': {'a': 'daccbcba', 'b': 'acbbbdacbadab', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbddbd'}, 'acbbbbdbddd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbbdbdddc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbbbbdbdd': {'a': 'daaccbbdacbbbbbbbdbdda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbbbbbbbdbddd'}, 'acbbbdacbadaccbbbbbbdbbbdda': {'a': 'acbbbdacbadaaa', 'b': 'acbbbdacbadaccbbbbbbdbbbddab', 'c': 'acbbbdacbadaccbbbbbbdbbbddac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaad': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'daaccbbddaadc', 'd': 'daaccbbddaacbdad'}, 'acbbbdacbadaccbbbbc': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbcd'}, 'daaccbbddabbbd': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'dacbdd'}, 'ddaaacabbd': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'acbbbdacbadaccbbbddb': {'a': 'daccbcba', 'b': 'daacbbbaacabb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbbdcd'}, 'daacbbdbd': {'a': 'daacbbdbda', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacaaa': {'a': 'daaccbbdacaaa', 'b': 'daacbbc', 'c': 'ddaaabbbbbdac', 'd': 'acbbbdacbadacd'}, 'dcaccccbccbddadaaadacbbbbc': {'a': 'ccb', 'b': 'aabb', 'c': 'ccb', 'd': 'dcaccccbccbddadaaadacbbbbcd'}, 'daaccbbdacbbbbbbbdad': {'a': 'daaccbbdacbbbbbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbbbbbbbdad'}, 'dcaccccbccbddadaab': {'a': 'daada', 'b': 'ccbd', 'c': 'aaba', 'd': 'acbbbdacbadadaadd'}, 'daaccbcdadd': {'a': 'daacbbbabddda', 'b': 'ccb', 'c': 'daaccbcdaddc', 'd': 'daaccbcdaddd'}, 'daaccc': {'a': 'daaccca', 'b': 'daacccb', 'c': 'daacccc', 'd': 'daaccd'}, 'daaccbbddaacaadda': {'a': 'acbda', 'b': 'daacbbbaacab', 'c': 'daaccbbdddcc', 'd': 'acbbbdacbadacdaad'}, 'dddaaddacbd': {'a': 'dddaaddacbda', 'b': 'ccb', 'c': 'aaba', 'd': 'dddaaddacbdd'}, 'daacbdaabd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadadaadda': {'a': 'acbbbdacbadadaaddaa', 'b': 'ccb', 'c': 'ddaaacacbdaabc', 'd': 'ccbd'}, 'dcaccccbccbddadaaadacbbbbbbbcbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'acbbbdacbadaccbbbbbbddc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbddcd'}, 'daacbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'ac', 'd': 'daacbdcd'}, 'daacccb': {'a': 'daaccba', 'b': 'daacccbb', 'c': 'daacccbc', 'd': 'daacccbd'}, 'daaccbbdacbcbbbbcba': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'daaccbbdacbcbbbbcbac', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadaaacab': {'a': 'daaba', 'b': 'dcaccccbccbddadaaadaaacabb', 'c': 'ddaaacacbdaabc', 'd': 'dcaccccbccbd'}, 'daccccc': {'a': 'daaccbca', 'b': 'daccccb', 'c': 'daccccc', 'd': 'dacccccd'}, 'daaccbbddaacbbbbb': {'a': 'daaccbbddaacbbbbba', 'b': 'daaccbbddaacbbbbbb', 'c': 'ddaaacabb', 'd': 'daaccbbddaacbbbbbd'}, 'ddaaabbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'ddaaabbbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'daaccbbddaabda': {'a': 'daacbdaa', 'b': 'acbbbbdab', 'c': 'ddaaacacbdaac', 'd': 'daaccbbddaaccbbbdabd'}, 'daacbacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbacbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'acbbbdacbad': {'a': 'acbbbdacbada', 'b': 'ccb', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbbddd': {'a': 'daaccbbdacbbbbbbbcbdda', 'b': 'acbbbdacbadaccbbbbbbcbbbbddb', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbcbbbbdd'}, 'dcaccccbccbddadaaaccaa': {'a': 'daaca', 'b': 'daacbbc', 'c': 'daadaaaaacac', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaaaacccbcbb': {'a': 'daaccbba', 'b': 'daacbbadadadaaaacccbcbbb', 'c': 'daacbbc', 'd': 'daacbbadadadaaaacccbcbbd'}, 'daacbbda': {'a': 'daaccbbddaa', 'b': 'daab', 'c': 'acbbbdaac', 'd': 'daaccbbddaacd'}, 'acbbbdacbadaccbbbbbbcb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'acbbbdacbadaccbbbbbbcbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbcbd'}, 'daaccbbddaacbbbdbc': {'a': 'ddaaacabbbca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daaccbbddaacbbbdbcc', 'd': 'acbbbdacbadadaadd'}, 'acbbbbdbddadadda': {'a': 'daacbbbabddddacdaaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadddac', 'd': 'acbbbdacbadadaadd'}, 'daacbaccd': {'a': 'daaccbbdacbcbdba', 'b': 'ccb', 'c': 'dcacc', 'd': 'acbbbdacbadacdaad'}, 'daacbdcd': {'a': 'ddaaba', 'b': 'ccb', 'c': 'c', 'd': 'daacbdcdd'}, 'daaccbbddaacbbbbda': {'a': 'daaccbbddaa', 'b': 'daaccbbddaacbbbbdab', 'c': 'daacccbcbbbdac', 'd': 'daaccbcddadacbd'}, 'daaccbbddaacbba': {'a': 'daacbbadadaa', 'b': 'daacbbc', 'c': 'daaccbcddacc', 'd': 'daaccbbddaaccbbbdabd'}, 'd': {'a': 'da', 'b': 'ccb', 'c': 'dc', 'd': 'dd'}, 'ddaaacabbbb': {'a': 'daccbcba', 'b': 'ddaaabbbbb', 'c': 'acbbbbdbdc', 'd': 'aaacbd'}, 'dcaccccbccbddadaaadaaacabb': {'a': 'acbbbdacbadacaaa', 'b': 'dcaccccbccbddadaaadaaacabbb', 'c': 'dcaccccbccbddadaaadaaacabbc', 'd': 'daccbcbd'}, 'daacccbcbbbdd': {'a': 'acbbbddda', 'b': 'daacccbcbbbddb', 'c': 'acbbbbdab', 'd': 'daacccbcbbbddd'}, 'daacccbcbdddad': {'a': 'daccbcbbddada', 'b': 'daccbcbbddadb', 'c': 'daaccbbddadc', 'd': 'daaccbbdad'}, 'dddaadd': {'a': 'dddaadda', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacaca': {'a': 'daaba', 'b': 'acbbbdc', 'c': 'ddaaacacac', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbbadadacbb', 'c': 'acbbbdc', 'd': 'daacbbadadacbd'}, 'daacbbadadadaaaacdd': {'a': 'daacbbadadadaaaacdda', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbbba': {'a': 'daccbcba', 'b': 'daacbbbaacab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbbbad'}, 'daaccbbddaacbbbbbb': {'a': 'daaccbbddaacbbbbbba', 'b': 'daaccbbdacbbbbbb', 'c': 'daaccbbddaacbbbbbbc', 'd': 'daaccbbdacbbbbbd'}, 'daaccbbdccbab': {'a': 'acbbbdacbaddc', 'b': 'daaccbbdccbabb', 'c': 'ccb', 'd': 'daccbcbbddadb'}, 'daaccbbddaacbbbbbab': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'daacbbbabd'}, 'daaccbbddaaccbbbdabb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbddaaccbbbdabbb', 'c': 'ddaaacacbdaabc', 'd': 'aaacbd'}, 'aac': {'a': 'daacbbadadadacca', 'b': 'daacbaacb', 'c': 'acbbbdacbadaccc', 'd': 'acbbbdacbadadaadd'}, 'daacbbbabdddda': {'a': 'acbbbdacbadaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbbbabddddac', 'd': 'acbbbdacbadadaadd'}, 'acbdd': {'a': 'acbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'dacbdd'}, 'daaccbcddacc': {'a': 'ddaaacaca', 'b': 'daaccbcddaccb', 'c': 'dacc', 'd': 'daaccd'}, 'daacbbadadaa': {'a': 'daaccbbddaacbdada', 'b': 'acbbbbdab', 'c': 'daacbbadadaac', 'd': 'daacbbadadaad'}, 'daaccbbdacbbbbbbdbddad': {'a': 'acbbbdacbadadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbdacbbbbbbdbddad'}, 'acbbbdacbadaccbbbbbbcbbbbdda': {'a': 'daccbcbbddada', 'b': 'acbbbbdab', 'c': 'daaccbcddac', 'd': 'acbbbbdad'}, 'daccccd': {'a': 'dddaba', 'b': 'ccb', 'c': 'dcaccc', 'd': 'daccccdd'}, 'acbbbdacbadddacc': {'a': 'daacbbadadadacca', 'b': 'acbbbdacbadddaccb', 'c': 'acbbbbdbdaacc', 'd': 'daadaaaaacacd'}, 'daaccbbdacbbbbbbdbbdd': {'a': 'daacbbdbda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbbbbbbdbddd'}, 'acbbbdacbadacccbb': {'a': 'daaccbbdacbcbbba', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'dcaccccbccbddadaaacdd': {'a': 'daadaaa', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'ddaab': {'a': 'ddaaba', 'b': 'daacbbadadacb', 'c': 'ddaaacacbdaabc', 'd': 'ddaabd'}, 'dacccc': {'a': 'daaccbca', 'b': 'daccccb', 'c': 'daccccc', 'd': 'daccccd'}, 'daaccbbdacbbbbdbbb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbdbbbd'}, 'dddaaba': {'a': 'ddaaacaa', 'b': 'ddacab', 'c': 'aaac', 'd': 'dacbad'}, 'daaccbbdacbbbbbbbcdd': {'a': 'acbbbdacbadaccbbbbbbdbbbddacda', 'b': 'ccbd', 'c': 'daaccbbdccbab', 'd': 'daaccbbdacbbbbbbbcddd'}, 'daaccbdc': {'a': 'daaccbdca', 'b': 'daacbbc', 'c': 'ac', 'd': 'daccd'}, 'dcaccccbccbddadaacda': {'a': 'dcaccccbccbddada', 'b': 'ccb', 'c': 'daadaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdccbabb': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadacaaa': {'a': 'daaba', 'b': 'acbbbdacbadacaaab', 'c': 'ddaaacacbdaabcc', 'd': 'acbbbdacbadadaadd'}, 'daaccbcdaccbdd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daacccbdd'}, 'daaccbbdacbbbbbbdbbd': {'a': 'dacba', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbbbbbbdbbdd'}, 'daccccddd': {'a': 'acbbbdacbadda', 'b': 'ccb', 'c': 'daccccdddc', 'd': 'daccccdddd'}, 'daacccbcbddda': {'a': 'daaccbbddaa', 'b': 'daacccbcbdddab', 'c': 'daacccbcbdddac', 'd': 'daacccbcbdddad'}, 'daaccbbddaaccbb': {'a': 'daaccbbddaaccbba', 'b': 'daaccbbddaaccbbb', 'c': 'daaccbbddaaccbbc', 'd': 'daaccbbddaaccbbd'}, 'dcaccccbccbddadaaacca': {'a': 'dcaccccbccbddadaaaccaa', 'b': 'dcaccccbccbddadaaaccab', 'c': 'daaccc', 'd': 'acbbbdacbadacd'}, 'daacccbcbbbddbdd': {'a': 'daaccbbdddcda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daacccbcbbbddbddd'}, 'daaccbbdacbbbbbbbcbbbbdbbbd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbbcbd'}, 'daaccbbddaaccbbbda': {'a': 'daaccbbddaa', 'b': 'daaccbbddaaccbbbdab', 'c': 'daacccbddac', 'd': 'daaccbbddaaccbbbdad'}, 'daacccbcbbbbd': {'a': 'daacbbda', 'b': 'daacccbcbbbbdb', 'c': 'daacbbc', 'd': 'acbbbdacbadaccbbbbdd'}, 'daaccbcddadacbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbb', 'c': 'daacbbc', 'd': 'aaacbbd'}, 'dcaccccbbc': {'a': 'ccb', 'b': 'daaccbbdccbabb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbd': {'a': 'acbbbdacbadaccbbbbbbdbbbda', 'b': 'ccbd', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbdd'}, 'daaccbbddaabcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbdacbcbb', 'c': 'acbbbdc', 'd': 'daccbccbd'}, 'daccccbbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbcb', 'c': 'daacbdaabc', 'd': 'daacbbbad'}, 'daacbbadadadaaaacdda': {'a': 'daadaaa', 'b': 'ccb', 'c': 'daacbbadadadaaaacddac', 'd': 'acbbbdacbadadaadd'}, 'acbbbddda': {'a': 'daaccbbddaa', 'b': 'acbbbdddab', 'c': 'daacccbddac', 'd': 'daaccbbdad'}, 'daaccbbdacbbbbbbbcbbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daccbcbbddadb'}, 'acbbbdacb': {'a': 'acbbbdacba', 'b': 'daacbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'dcaccccbccbddadaaadaaccaa': {'a': 'daaba', 'b': 'aaab', 'c': 'acbbbdacbadaccc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbddab': {'a': 'daaccbbdacbcbdba', 'b': 'daacccbcbbbab', 'c': 'acbbbdacbadaccbbbbbbdbbbddabc', 'd': 'acbbbdacbadaccbbbbbbdbbbddabd'}, 'daacbdaabb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbdaabbb', 'c': 'acbbbdc', 'd': 'acbbbbdbdaacbd'}, 'acbbbdacbadadaada': {'a': 'acbbbdacbadadaadaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadadaadac', 'd': 'acbbbdacbadadaadd'}, 'daacccbddaccd': {'a': 'daaccbbddaba', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daacbdaabd'}, 'dcaccccbccbddadaaadaaaaab': {'a': 'daacbbadadadaaca', 'b': 'dcaccccbccbddadaaadaaaaabb', 'c': 'daaccbbdacbc', 'd': 'daaccbcdad'}, 'dddaba': {'a': 'dddabaa', 'b': 'ccb', 'c': 'ddaaacacbdaabc', 'd': 'ccbd'}, 'cc': {'a': 'ccb', 'b': 'ccb', 'c': 'dca', 'd': 'ccb'}, 'ddaaacacbdaabaad': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'c', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbaddc': {'a': 'daaccbcdaddc', 'b': 'ccb', 'c': 'acbbbdacbaddcc', 'd': 'ccbd'}, 'daaccbbdddccbb': {'a': 'daccbcba', 'b': 'ddaaabbbb', 'c': 'ddaaacabbbc', 'd': 'daaccbbdddccbbd'}, 'daacbdcddac': {'a': 'acbbbdacbadacaaa', 'b': 'acbbbdacbaddacb', 'c': 'daacbdcddacc', 'd': 'dacbad'}, 'acbbbdacbadaccbbbbbbdbbbddacdadc': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'dcaccccbbc', 'd': 'ccbd'}, 'acbbbdacbadaccbbbbbbdbbbddacdd': {'a': 'acbbbdacbadda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbdacbbbbbbdbddad'}, 'daaccbbddaaccb': {'a': 'daaccbbaa', 'b': 'daaccbbddaaccbb', 'c': 'daaccbbddaacbc', 'd': 'daaccbbddaaccbd'}, 'acbbbdacbadaadd': {'a': 'acbbbdacbadaadda', 'b': 'ccb', 'c': 'daacbbadadc', 'd': 'dacbad'}, 'aaacbbda': {'a': 'daaccbbddaa', 'b': 'daab', 'c': 'ddaaacacbdaac', 'd': 'acbbbdad'}, 'ddaaacacbdaabcc': {'a': 'daccbccca', 'b': 'ddaaacabb', 'c': 'ac', 'd': 'daccbcbbddadb'}, 'daaccbbddaacbbbbdb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdacbadaccbbbbbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daaccbbddaacbbbbdbd'}, 'daaccbbddaacaaad': {'a': 'daaccbbddaacaaada', 'b': 'acbbbdacbadadaadd', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbdacbadacd'}, 'daaccbbdacacb': {'a': 'daaccbbddaacbbca', 'b': 'daccccbb', 'c': 'daacbc', 'd': 'aaacbbd'}, 'daaccbbdb': {'a': 'dacba', 'b': 'acbbbdcb', 'c': 'daaccbbddaacbbbdbc', 'd': 'daaccbbddaacbbbdbd'}, 'ddaaabbbb': {'a': 'daacccbcbcba', 'b': 'ddaaabbbbb', 'c': 'daacbbadadacbbbc', 'd': 'ddaaabbbbd'}, 'daacbbadadadaaa': {'a': 'daacbbadadadaaaa', 'b': 'daaccbcdaddc', 'c': 'daacbbadadadaaac', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadacbbbbbbbcd': {'a': 'daccbcba', 'b': 'ccb', 'c': 'ccb', 'd': 'dcaccccbccbddadaaadacbbbbbbbcdd'}, 'daaccbdd': {'a': 'daacbda', 'b': 'acbbbddb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daacccbdd'}, 'daaccbbdacbbbbbbdd': {'a': 'daaccbbdacbbbbbda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'daaccbbdacbbbbbbddc', 'd': 'acbbbdacbadaccbbbbbbddd'}, 'dcaccccbccbddadaaadaaccac': {'a': 'daacbbadadadacca', 'b': 'daccb', 'c': 'daccc', 'd': 'ccbda'}, 'dcaccccbccbddadaaadacbb': {'a': 'dddaaddaca', 'b': 'dcaccccbccbddadaaadacbbb', 'c': 'c', 'd': 'daacbbadadadaccbdd'}, 'acbbbdacbadaccbbbbbbdbbbda': {'a': 'daacbbdbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbdad'}, 'dcaccccbccbddadaaadacbbbbbbc': {'a': 'ccb', 'b': 'acbbbdacbadaccbbbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'dcaccccbccbddadaaadacbbbbbbcd'}, 'daab': {'a': 'daaba', 'b': 'daabb', 'c': 'ddaaacacbdaabc', 'd': 'daabd'}, 'daaccbbdacbcbbbbcd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbcbbbbcdd'}, 'dacccccd': {'a': 'daaccbbdacbcbdba', 'b': 'ccb', 'c': 'dcaccc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'ddaaacacbc': {'a': 'daacbbadadadacca', 'b': 'ddaaacacbcb', 'c': 'daccbccc', 'd': 'daacbcd'}, 'daadaaccd': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'cc', 'd': 'acbbbdacbadadaadd'}, 'dddaacca': {'a': 'dcaccccbccbddadaaadaaccaa', 'b': 'daacbbc', 'c': 'daacbaac', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadaccbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbb', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbd'}, 'daaccbbddaaccbbcb': {'a': 'daaccbcdaccbba', 'b': 'daaccbcddadacbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'daaccbbdacbbbbbbbdbddac': {'a': 'acbbbdacbadacaaa', 'b': 'ddaaabbb', 'c': 'daaccbbdacbbbbbbbdbddacc', 'd': 'daaccbcdaccbbacd'}, 'dddaaca': {'a': 'dddaacaa', 'b': 'ddaaacab', 'c': 'ddaaabbbbbdac', 'd': 'daaccbbaad'}, 'daaccbbdacbbbbbbdcd': {'a': 'daaccbbdacbbbbbbdcda', 'b': 'ccb', 'c': 'daaccbbddaacbbbdbc', 'd': 'daaccbbdacbbbbbbdcdd'}, 'daaccbcdaddd': {'a': 'daacbbadadadaaa', 'b': 'ccb', 'c': 'c', 'd': 'dacbad'}, 'daacccbcbbbd': {'a': 'daacccbcbbbda', 'b': 'daccccbdb', 'c': 'acbbbbdab', 'd': 'daacccbcbbbdd'}, 'acbbbdacbadaccbbbbbbddcddddd': {'a': 'acbbbdacbadaccbbbbbbddcddddda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbddcddddd'}, 'daaccbbdacbbbbbbbdcb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbbbb', 'c': 'ddaaacabbbcc', 'd': 'aaacbd'}, 'daacbbbaa': {'a': 'acbbbdacbaaa', 'b': 'acbbbdc', 'c': 'daacbbbaac', 'd': 'daacbbbaad'}, 'daaccbbdacbbbbdc': {'a': 'daaccbcdaccbbacd', 'b': 'daaccbbdacbbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbcd'}, 'daaccbbddaacaadada': {'a': 'acbbbdacbadadaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'dacbad'}, 'ddaaac': {'a': 'ddaaaca', 'b': 'ddaaacb', 'c': 'daac', 'd': 'daacbbad'}, 'acbbbdacbadaccbbbbbbdbbbddacdad': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'ccbd', 'c': 'acbbbdacbadaccbbbbbbdbbbddacdadc', 'd': 'daaccbbaadd'}, 'daaccbbdacbbbbbbbcbbdab': {'a': 'daaccbbdacbcbdba', 'b': 'daaccbbddaacbbbbbab', 'c': 'daaccbbddaacbbbdbc', 'd': 'acbbbdacbadaccbbbbbbddcd'}, 'daacbbadadadaacb': {'a': 'daaba', 'b': 'acbbbdacbadaccbb', 'c': 'daacbbc', 'd': 'daacccbcbdddacd'}, 'daaccbbdacbbbbbbbdaa': {'a': 'dddaa', 'b': 'daaccbbdacbbbbbbbdaab', 'c': 'acbbbdaac', 'd': 'daaccbcddad'}, 'daaccca': {'a': 'daacbbadadadacca', 'b': 'acbbbdc', 'c': 'daccbccc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaaa': {'a': 'acbbbdacbadaaa', 'b': 'daab', 'c': 'daacbbadadaac', 'd': 'acbbbdacbadaaad'}, 'daacccbcbbbddddbd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbddddbdd'}, 'acbbbdacbadaccbbbbbbbc': {'a': 'ccb', 'b': 'acbbbdacbadaccbbbbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbddb'}, 'daaccbbdacbbbbbbbd': {'a': 'daaccbbdacbbbbbbbda', 'b': 'daaccbbdacbbbbbbbdb', 'c': 'daaccbbdacbbbbbbbdc', 'd': 'daaccbbdacbbbbbbdd'}, 'acbbbdacbadaccbbbbbbdddc': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdacbadaccbbbbdddcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbdddcd'}, 'acbbbdacbadaccbbbbddd': {'a': 'acbbbddda', 'b': 'acbbbdacbadaccbbbbdddb', 'c': 'acbbbdacbadaccbbbbdddc', 'd': 'acbbbdacbadaccbbbbddd'}, 'acbbbdacbadaccbbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbddbdd'}, 'daaccbbdacbbbbbbda': {'a': 'daaccbbdacbbbbbbdaa', 'b': 'acbbbbdab', 'c': 'daaccbbdacbbbbbbdac', 'd': 'daaccbbddabbdddd'}, 'daaccbbddaacbbbbacdd': {'a': 'acbbbbdbdda', 'b': 'ccb', 'c': 'daccccdddc', 'd': 'daccccdddd'}, 'dcaccc': {'a': 'c', 'b': 'acbbbc', 'c': 'dcacccc', 'd': 'ccb'}, 'daccbcbbddada': {'a': 'acbbbdaaa', 'b': 'acbbbdddab', 'c': 'daccbcbbddadac', 'd': 'daccbcbbddadad'}, 'daad': {'a': 'daada', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'daaccbacc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbaccb', 'c': 'daacbacc', 'd': 'daaccbbdccba'}, 'dcaccccbccbddadaaadacac': {'a': 'daacbbadadadacca', 'b': 'daacbdcddaccb', 'c': 'dddaaddaccc', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbbcbbbdabdc': {'a': 'acbbbdacbadaccbbbbbbdbbbddacdadc', 'b': 'daacbbbaacabb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddab': {'a': 'daaccbbddaba', 'b': 'daaccbbddabb', 'c': 'acbbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbcdaccbbacd': {'a': 'dacba', 'b': 'ccb', 'c': 'dcaccc', 'd': 'daacccbcbbbddbdad'}, 'acbbbdacbadaccbbbbbbdbbbddabdaaca': {'a': 'acbbbdacbadaccbaa', 'b': 'acbbbbdbddab', 'c': 'ac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddaaca': {'a': 'daaccbbddaacaa', 'b': 'daacbbadadadaacb', 'c': 'ddaaacacbdaac', 'd': 'daacbbad'}, 'daacbcbdd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daccbcbbddd'}, 'dcaccccbccbddadaaadaacbbbbdb': {'a': 'daccbcba', 'b': 'acbbbdacbadadaaddaacbb', 'c': 'ddaaacabbbcc', 'd': 'dcaccccbccbddadaaadaacbbbbdbd'}, 'aaac': {'a': 'daacbbbaaca', 'b': 'aaacb', 'c': 'aac', 'd': 'dcaccccbccbddadaaadaaacd'}, 'daacccbdd': {'a': 'daacccbdda', 'b': 'acbbbddb', 'c': 'daaccbbddadc', 'd': 'acbbbdacbadaccbbbdd'}, 'acbda': {'a': 'daaccbbddaacbdada', 'b': 'aaab', 'c': 'daaccbbdacac', 'd': 'daaccbcdadd'}, 'daacccbbc': {'a': 'daaccbca', 'b': 'daaccbbdacbcb', 'c': 'daacccbbcc', 'd': 'daacbbadadadaccbd'}, 'daaccbbddaacbbbdbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'daaccbbdacbcbbbbcbac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdad': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'acbbbbdad'}, 'dcaccccbccbddadaaad': {'a': 'dcaccccbccbddadaaada', 'b': 'ccb', 'c': 'cc', 'd': 'acbbbdacbadadaadd'}, 'daadaaccb': {'a': 'ddacba', 'b': 'daccccbb', 'c': 'ddaaacacbc', 'd': 'daaccbcdaccbd'}, 'acbbbdacbadaccbbbbbbbdcd': {'a': 'daaccbbddaacbbbbbaad', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbbdbdd'}, 'daacbbadadadaaaacca': {'a': 'daaccbbdacaca', 'b': 'daacbbc', 'c': 'aac', 'd': 'acbbbdacbadadaadd'}, 'daacbda': {'a': 'daacbdaa', 'b': 'daab', 'c': 'daacbdac', 'd': 'daaccbcddad'}, 'daaccbbddadc': {'a': 'dacba', 'b': 'acbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadacdaad'}, 'daaccbbddaacbbbbbba': {'a': 'ddaaacacbdaaba', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbbbbbad'}, 'acbbbdacbadaccbbbbbbddcdddd': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbddcddddd'}, 'ddaaacabbbcc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ccb', 'd': 'ccb'}, 'daaccbbddaacaabda': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadacdaab', 'c': 'daacbbbaac', 'd': 'daacbcdaad'}, 'ddaad': {'a': 'daadaaa', 'b': 'ccb', 'c': 'c', 'd': 'dacbad'}, 'daaccbbdacbcbbbbcbac': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daacccbcbbbdddcdcc', 'd': 'acbbbdacbadadaadd'}, 'daaba': {'a': 'daaba', 'b': 'ccb', 'c': 'ac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdccb', 'c': 'daccbccc', 'd': 'acbbbdacbadacd'}, 'daaccbbddaacaabd': {'a': 'daaccbbddaacaabda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddacba': {'a': 'ddaaacacbdaaba', 'b': 'acbbbdacbadadaadd', 'c': 'ddacbac', 'd': 'daad'}, 'acbbbbdad': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbcdddd'}, 'daccbcbbddad': {'a': 'daccbcbbddada', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daaccbbdad'}, 'acbbbdacbadadaad': {'a': 'acbbbdacbadadaada', 'b': 'ccb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadc': {'a': 'daacbbadadca', 'b': 'ccb', 'c': 'dca', 'd': 'ccb'}, 'daaccbbdacbcbbbb': {'a': 'daaccbbdacbcbbbba', 'b': 'acbbbb', 'c': 'daaccbbdacbcbbbbc', 'd': 'daaccbbdacbcbbbbd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbdd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daaccbbdacbbbbbbbcbdd'}, 'daacccbb': {'a': 'daacccbba', 'b': 'daaccbb', 'c': 'daacccbbc', 'd': 'daacccbbd'}, 'daaccbbddaaccbbd': {'a': 'daaccbbdda', 'b': 'daaccbbddaaccbbdb', 'c': 'daaccbbddaaccbbdc', 'd': 'daacccbbd'}, 'daaccbbddaacbbb': {'a': 'daaccbbddaacbbba', 'b': 'daaccbbddaacbbbb', 'c': 'daaccbbdddccb', 'd': 'daaccbbddaacbbbd'}, 'daacccbcbbbdddcac': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdddccb', 'c': 'daccbccc', 'd': 'daacccbcbbbdddcacd'}, 'acbbbdacbadd': {'a': 'acbbbdacbadda', 'b': 'ccb', 'c': 'acbbbdacbaddc', 'd': 'acbbbdacbaddd'}, 'acbbbdacbadaccbbbbbbdbbbddac': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'acbbbdacbadaccbbbbbbdbbbddacc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'daacbbadadadaaaacbc': {'a': 'daaccca', 'b': 'aaacb', 'c': 'daacbbadadadaaaacbcc', 'd': 'daacbbbad'}, 'daaccbbdddca': {'a': 'ddaaacacbdaabaa', 'b': 'daacbbbaacab', 'c': 'daaccbcdaccbbac', 'd': 'ddaaacacbdaabaad'}, 'daadaacb': {'a': 'acbbbdacbadacaaa', 'b': 'daaccbbddaacbbcb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbcddd'}, 'daacbbadadadaccb': {'a': 'acbbbdacbadaca', 'b': 'daacbbadadadaccbb', 'c': 'acbbbdc', 'd': 'daacbbadadadaccbd'}, 'daaccbbdacbbbbbbbc': {'a': 'daaccbbdacbbbbbbbca', 'b': 'daaccbbdacbbbbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcd'}, 'acbbbbdbdaac': {'a': 'daaccbbdacaca', 'b': 'acbbbbdbdaacb', 'c': 'acbbbbdbdaacc', 'd': 'dacba'}, 'daccbcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daccbccb', 'c': 'daccbccc', 'd': 'daccbccd'}, 'daacccbcbbbab': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbbbab', 'c': 'ddaaacabbbcc', 'd': 'daacbbbabd'}, 'daabdd': {'a': 'ddaabda', 'b': 'ccb', 'c': 'c', 'd': 'daacbbbabddd'}, 'daaccbbddaacbdadacb': {'a': 'daacbbadadadaaaacba', 'b': 'daacbb', 'c': 'daaccbbddaacbdadacbc', 'd': 'daacbbadadadaaaacbd'}, 'ddaaacacbdaab': {'a': 'ddaaacacbdaaba', 'b': 'daacbdaabb', 'c': 'ddaaacacbdaabc', 'd': 'daacbdaabd'}, 'dcaccccbccbddadaaadaaaab': {'a': 'daacbbadadadaaca', 'b': 'dcaccccbccbddadaaadaaaabb', 'c': 'daacbbadadadaaaaccca', 'd': 'ddaad'}, 'acbbbdacbada': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdacbadac', 'd': 'acbbbdacbadad'}, 'acbbbdacbadad': {'a': 'acbbbdacbadada', 'b': 'ccb', 'c': 'c', 'd': 'dddaadd'}, 'daaccbbaa': {'a': 'daaccbbaaa', 'b': 'daacbbc', 'c': 'daaccbbaac', 'd': 'daaccbbaad'}, 'daaccbbdacbbbbbbddcbbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbbbbbbddcbbdd'}, 'daacbbadadadaaacba': {'a': 'ddaaacaa', 'b': 'aaab', 'c': 'daacbac', 'd': 'daacbbadadadaaacbad'}, 'daacbbadadadacc': {'a': 'daacbbadadadacca', 'b': 'daacbbadadadaccb', 'c': 'acbbbdacbadaccc', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadaaaabb': {'a': 'acbbbdacbadacaaa', 'b': 'dcaccccbccbddadaaadaaaabbb', 'c': 'aaba', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadaccbbbbbbdbbbddacc': {'a': 'daacccbcbbbdddcaca', 'b': 'aaacb', 'c': 'acbbbbdbdaacc', 'd': 'daaccd'}, 'daacbacd': {'a': 'dddaba', 'b': 'ccb', 'c': 'daacbadc', 'd': 'acbbbdacbadacdaad'}, 'daaccbbdacbcbdb': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdacbadab', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbcbdbd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbda': {'a': 'daacbbadadadaccbd', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbdad'}, 'daaccbbddaacbbc': {'a': 'daaccbbddaacbbca', 'b': 'daaccbbddaacbbcb', 'c': 'daaccbbddaacbbcc', 'd': 'daaccbbddaacbbcd'}, 'daaccbaccba': {'a': 'daacbbadadadacca', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabcc', 'd': 'ddaaacacbdaabaad'}, 'daaccbbddaaccbbdcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbddaaccbbdcbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'dddaadda': {'a': 'daadaaa', 'b': 'ccbd', 'c': 'dddaaddac', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbbbddbdadd': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'acbbbdacbadadaadd', 'd': 'daacccbcbbbddbdaddd'}, 'daacbbbaacab': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ccb', 'd': 'daccbcbbddadb'}, 'dacba': {'a': 'daaba', 'b': 'ccb', 'c': 'ddaaacacbdaabcc', 'd': 'dacbad'}, 'dcaccccbccbddadaaadacbbbbcddac': {'a': 'acbbbdacbadacaaa', 'b': 'ddaaabb', 'c': 'acbbbbdbdaacc', 'd': 'daad'}, 'dcaccccbccbddadaaadacbbbbcd': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'ccb', 'd': 'dcaccccbccbddadaaadacbbbbcdd'}, 'ddda': {'a': 'dddaa', 'b': 'dddab', 'c': 'daaccbcddadac', 'd': 'dddad'}, 'daaccbbdacbbbbbbbcbbbda': {'a': 'acbbbdacbadaaa', 'b': 'daaccbbdacbbbbbbbcbbbdab', 'c': 'daaccbbdacbbbbbbbcbbbdac', 'd': 'acbdd'}, 'daacbbadadadaaaacccbbdcbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'ddaaacabbbb', 'c': 'daaccbbddaaccbbbdabbbc', 'd': 'daaccbbdddccbbd'}, 'acbbbdd': {'a': 'daacbbda', 'b': 'acbbbddb', 'c': 'acbbbdc', 'd': 'acbbbddd'}, 'ddaaacabbbca': {'a': 'ccb', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'ccb'}, 'daadaa': {'a': 'daadaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daadaac', 'd': 'acbbbdacbadadaadd'}, 'daacccbddac': {'a': 'acbbbdacbadaaa', 'b': 'daaccbbdacb', 'c': 'daacccbddacc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddaaabbbbbda': {'a': 'ddaaabbbbbdaa', 'b': 'daccbcbbdc', 'c': 'ddaaabbbbbdac', 'd': 'daaccbcddd'}, 'daacbbadadadacca': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'ac', 'd': 'ccb'}, 'daacccbcbbbddbdaddda': {'a': 'daaccbbddaad', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daacbbadadad'}, 'daaccbbddaacbdadacbcbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbbddaacbdadacbcbbb', 'c': 'acbbbdc', 'd': 'ddaaacacbcbd'}, 'dddaacaa': {'a': 'daaccbbdacaaa', 'b': 'daaccbbddaaccbbab', 'c': 'ddaaabbbbbdac', 'd': 'daaccbbaad'}, 'daaccbbddaacaa': {'a': 'daaccbbddaacaaa', 'b': 'daaccbbddaacaab', 'c': 'ddaaacacbdaac', 'd': 'daaccbbddaacaad'}, 'daaccbbddaacbd': {'a': 'daaccbbddaacbda', 'b': 'daaccbbddaacbdb', 'c': 'daaccbbdc', 'd': 'daaccbbddaacbdd'}, 'daaccbbddaacbbbdbbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'ccbd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'daaccbbdacbbbbbbdbdd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daaccbbdacbbbbbbdbddd'}, 'daaccbbaacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbb', 'c': 'daacbbc', 'd': 'aaacbbd'}, 'a': {'a': 'aa', 'b': 'ccb', 'c': 'ac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdab': {'a': 'daacbaa', 'b': 'acbbbbdab', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddaaacacbcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbb', 'c': 'acbbbdc', 'd': 'ddaaacacbcbd'}, 'dddaac': {'a': 'dddaaca', 'b': 'dddaacb', 'c': 'dddaacc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbcbbbbcb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbcbbbbcbd'}, 'acbbbdacbadadaaddaa': {'a': 'daacbbadadadaa', 'b': 'ccbd', 'c': 'acbbbdacbadadaaddaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbdbbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbdbbdd'}, 'dcaccccbccbddadaac': {'a': 'daa', 'b': 'dcaccccbccbddadaacb', 'c': 'daadaaaaac', 'd': 'dcaccccbccbddadaacd'}, 'daaccbbdddb': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacabb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdddbd'}, 'acbbbdacbadaccbbbbbbcbb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcbbb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbcbbd'}, 'daacccbcbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'daacccbcbbbbb', 'c': 'daacbbbab', 'd': 'daacccbcbbbbd'}, 'daaccbbdacbcbbbbcbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'daccbcbbddadb', 'c': 'daaccbcddadc', 'd': 'daacccbcbdddacd'}, 'daacccbcbdddacbcb': {'a': 'daaccbbddaacbbca', 'b': 'daaccbcddadacbb', 'c': 'daacbbc', 'd': 'daaccbbdacbcbbd'}, 'daaccbbdacbcbbbbc': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbcbbbbcd'}, 'daacbbbabddddaca': {'a': 'daacbaa', 'b': 'daacbbbabddddacab', 'c': 'acbbbbdbdaacc', 'd': 'dacbad'}, 'daaccbbdacbbbbd': {'a': 'daaccbbdacbbbbda', 'b': 'daaccbbdacbbbbdb', 'c': 'daaccbbdacbbbbdc', 'd': 'daaccbbdacbbbbdd'}, 'dddaaddacacb': {'a': 'daacccbcbbbdddcaca', 'b': 'dddaaddacacbb', 'c': 'daccbccca', 'd': 'daaccbcdad'}, 'daaccbbddaacbbbdc': {'a': 'daaccbbddaacbbca', 'b': 'daaccbbddaacbbbdcb', 'c': 'daaccbcdaccbbac', 'd': 'daaccbbddaaccbbbdabd'}, 'ac': {'a': 'daacccbcbbbdddcaca', 'b': 'acb', 'c': 'daccbccc', 'd': 'ccbd'}, 'daacbdcdda': {'a': 'acbbbdacbadadaa', 'b': 'ccb', 'c': 'daacbdcddac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdddab': {'a': 'acbbbbdbdaa', 'b': 'daacbbc', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbddd': {'a': 'acbbbddda', 'b': 'acbbbddb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daaccbbdacbbbbdd'}, 'acbbbdacbadaccbbbd': {'a': 'aaacbbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daccbcbbdc', 'd': 'acbbbdacbadaccbbbdd'}, 'daa': {'a': 'acbbbdacbadaaa', 'b': 'daab', 'c': 'daac', 'd': 'daad'}, 'acbbbdacbadacc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccb', 'c': 'acbbbdacbadaccc', 'd': 'daccbcba'}, 'daaccbbaada': {'a': 'acbbbdacbadadaa', 'b': 'daacbbbaacab', 'c': 'daacccbcbbbdddcac', 'd': 'acbbbdacbadacdaad'}, 'dddaaddacbbbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbb', 'c': 'acbbbc', 'd': 'acbbbdacbadaccbbbbbd'}, 'daaccbbddabbdddd': {'a': 'daaccbbddaacbdada', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daaccbbdacbbbbbbbdad'}, 'dcaccccbccbddadaaaccab': {'a': 'daacbbbaaca', 'b': 'daaccbcdaccbbacb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaacaabd'}, 'acbbbc': {'a': 'ccb', 'b': 'acbbbcb', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'dcaccccc': {'a': 'dcacc', 'b': 'dcacccccb', 'c': 'dcaccccc', 'd': 'ccb'}, 'daccbcbbddadb': {'a': 'daaccbbdacbcbdba', 'b': 'ddaaacabbbcc', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'acbbbbdab': {'a': 'dacba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbad'}, 'acbbbdacbadaccbbbbbbdbbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbdbbbd'}, 'daac': {'a': 'daaca', 'b': 'daacb', 'c': 'daacc', 'd': 'daccd'}, 'acbbbdacbadaccbbbbbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbbdcb', 'c': 'dcaccccbcc', 'd': 'acbbbdacbadaccbbbbbbbdcd'}, 'daaccbbdddc': {'a': 'daaccbbdddca', 'b': 'daccccbdb', 'c': 'daaccbbdddcc', 'd': 'daaccbbdddcd'}, 'daaccbbddaacbdb': {'a': 'dacba', 'b': 'acbbbdcb', 'c': 'dcaccc', 'd': 'daacbbcd'}, 'daacccbba': {'a': 'daaccbbaa', 'b': 'daacbbc', 'c': 'daaccbc', 'd': 'daaccbbddaaccbbbdabd'}, 'dcaccccbccbddadaaadaaaa': {'a': 'dcaccccbccbddadaaadaaaaa', 'b': 'dcaccccbccbddadaaadaaaab', 'c': 'dcaccccbccbddadaaac', 'd': 'acbbbdacbadadaadd'}, 'ddaaacacbdaaab': {'a': 'daacbaa', 'b': 'daacbdaabb', 'c': 'daacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaaccbbbc': {'a': 'daaccbca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbcd'}, 'daccccdda': {'a': 'daaccbbaaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcdaccbbac', 'd': 'acbbbdacbadad'}, 'acbbbdacbadaccb': {'a': 'acbbbdacbadaccba', 'b': 'acbbbdacbadaccbb', 'c': 'acbbbdc', 'd': 'acbbbbdbdaacbd'}, 'daaccbbddaacbbbbbdda': {'a': 'daaccbbddaa', 'b': 'acbbbdddab', 'c': 'daacccbddac', 'd': 'daacbcbdd'}, 'acbbbbdbddadac': {'a': 'daaccbbddaacbbca', 'b': 'daacbbadadacb', 'c': 'acbbbdacbaddacc', 'd': 'dacba'}, 'acbbbdacbadaccbbbdbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'ccbd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daaccbbddaacbbbdbd'}, 'dcaccccbccbddadaaadaacbbbbd': {'a': 'daacbbda', 'b': 'dcaccccbccbddadaaadaacbbbbdb', 'c': 'acbbbbdab', 'd': 'daaccbbdacbbbbdd'}, 'dcaccccbccbddadaaadacbbbbbbbc': {'a': 'ccb', 'b': 'dcaccccbccbddadaaadacbbbbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'dcaccccbccbddadaaadacbbbbbbbcd'}, 'daccbcbbddbd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadaccbbbbbbddcdd'}, 'daacbbb': {'a': 'daacbbba', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'dddaaddaca': {'a': 'daccccbdca', 'b': 'ccb', 'c': 'dddaaddacac', 'd': 'ccbd'}, 'daaccbbaac': {'a': 'daaccca', 'b': 'daaccbbaacb', 'c': 'dacc', 'd': 'daaccd'}, 'daaccbcddadc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadadaadd'}, 'daaccbcdacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'aaacbb', 'c': 'daacbbc', 'd': 'aaacbbd'}, 'dcaccccbccbddadaaacb': {'a': 'daacbcdaa', 'b': 'daacccbcbbbdacb', 'c': 'acbbbdacbaaac', 'd': 'daacccbcbbd'}, 'daaccbbddaacbbbdbbbbbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'daccbcbbddadb', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'daaccbbdacb': {'a': 'daacccbcbbbdacba', 'b': 'daaccbbdacbb', 'c': 'daaccbbdacbc', 'd': 'daacccbd'}, 'daacbbdbdadd': {'a': 'ddaabda', 'b': 'ccb', 'c': 'daacbbdbdaddc', 'd': 'dddaadd'}, 'dacb': {'a': 'dacba', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'dacbd'}, 'daaccbbdacbcbb': {'a': 'daaccbbdacbcbbba', 'b': 'daaccbbdacbcbbb', 'c': 'acbbbdc', 'd': 'daaccbbdacbcbbd'}, 'ddaaabbbbbd': {'a': 'ddaaabbbbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdd'}, 'daaccbcd': {'a': 'daaccbcda', 'b': 'daccbcbbddadb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbcdd'}, 'daada': {'a': 'daadaa', 'b': 'ccb', 'c': 'ddaaacacbdaabcc', 'd': 'ccbd'}, 'ddac': {'a': 'ddaca', 'b': 'ddacb', 'c': 'daacbcdaacc', 'd': 'daccdd'}, 'acbbbdacbadaccbbbbbbbbad': {'a': 'acbbbdacbadaccbbbbbbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbad'}, 'daaccbbddb': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacabb', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbcbdbd'}, 'acbbbbdbddadab': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdacbadab', 'c': 'daacbadc', 'd': 'ddaaacacbdaabaad'}, 'daadaaaaac': {'a': 'daadaaaaaca', 'b': 'daadaaaaacb', 'c': 'ddaaabbbbbdac', 'd': 'daacbbadadadaaccd'}, 'daaccbbddad': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'daaccbbddadc', 'd': 'daaccbbdad'}, 'daacccbcbbbdacba': {'a': 'daacbcdaa', 'b': 'daacbbc', 'c': 'daacbbbaac', 'd': 'daacbbad'}, 'daaccbbdacbbbbbbddcbb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbdcb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbddcbbd'}, 'daacbaacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'ddaaabbbbd'}, 'daacbcdaada': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbcdaadac', 'd': 'dddaadd'}, 'dca': {'a': 'c', 'b': 'ccb', 'c': 'dcac', 'd': 'ccb'}, 'daacbbadadacbbbc': {'a': 'ddaaacabbbca', 'b': 'ddaaacabbbcb', 'c': 'ddaaacabbbcc', 'd': 'ddaaacacbdaabaad'}, 'daaccbbaad': {'a': 'daaccbbaada', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'daaccbbaadd'}, 'ddaaacacbdaac': {'a': 'ddaaacaa', 'b': 'daacbbadadadaaaacccb', 'c': 'daac', 'd': 'daacbbbad'}, 'daacccbcbdddacc': {'a': 'ddaaacba', 'b': 'daaccbbddaaccb', 'c': 'daac', 'd': 'daaccbbddaacbbbdbd'}, 'acbbbbd': {'a': 'acbbbbda', 'b': 'acbbbbdb', 'c': 'acbbbdc', 'd': 'acbbbdd'}, 'daaccbcddadacb': {'a': 'acbbbdacba', 'b': 'daaccbcddadacbb', 'c': 'daacbbc', 'd': 'daaccbcddadacbd'}, 'daacbba': {'a': 'ddaaacacbdaabaa', 'b': 'daacbbab', 'c': 'daaccbac', 'd': 'daacbbad'}, 'acbbbdacbadaccbbbbbbbbada': {'a': 'acbbbdacbadaccbbbbbbbbadaa', 'b': 'daacbbbaacab', 'c': 'acbbbdc', 'd': 'daacccbcbbbddbdaddd'}, 'daacccbcbddd': {'a': 'daacccbcbddda', 'b': 'daacccbcbdddb', 'c': 'daab', 'd': 'daacbbdd'}, 'daacccbcbbbdddb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdacbadab', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbddddbd'}, 'daacbbbaacabb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ccb', 'd': 'acbbbdcd'}, 'daacb': {'a': 'daacba', 'b': 'daacbb', 'c': 'daacbc', 'd': 'daacbd'}, 'daadaaa': {'a': 'daadaaaa', 'b': 'daadaaccd', 'c': 'daadaaac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbda': {'a': 'daacbdaa', 'b': 'daab', 'c': 'ddaaacacbdaac', 'd': 'dacbdd'}, 'daacbdac': {'a': 'ddaaacaa', 'b': 'daacb', 'c': 'daaccbbddaaccac', 'd': 'daacbbbad'}, 'daacccbcbdddacbc': {'a': 'daaccbbddaacbbca', 'b': 'daacccbcbdddacbcb', 'c': 'daacbbadadadaaaacbcc', 'd': 'daacbbadadadaccbd'}, 'ddaaacacbdaabcd': {'a': 'daaccbbdacbcbdba', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'ddaaacacbdaabaad'}, 'acbbbdaaab': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdaaabb', 'c': 'daacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'dcaccccbccbddadaaadacbbbbbbb': {'a': 'acbbbdacbadaccbbbbbba', 'b': 'acbbbdacbadaccbbbbbbb', 'c': 'dcaccccbccbddadaaadacbbbbbbbc', 'd': 'dcaccccbccbddadaaadacbbbbbbbd'}, 'dcacccccbd': {'a': 'daaccbcda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'daadaaaaacacd': {'a': 'dddaba', 'b': 'ccb', 'c': 'dcacc', 'd': 'dacbad'}, 'acbbbdacbaddacbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbdacbaddacbbb', 'c': 'acbbbdc', 'd': 'daccbcbbbd'}, 'daaccbbdacbcbbbbd': {'a': 'daaccbbdacbcbbbbda', 'b': 'acbbbdb', 'c': 'daacbbc', 'd': 'acbbbdd'}, 'daacbbadadadaaccb': {'a': 'daaccbbddaacbbca', 'b': 'daaccbcdaccbb', 'c': 'daacbc', 'd': 'daacbbadadacbbbd'}, 'daccb': {'a': 'daaccbbddaacbbca', 'b': 'daacbb', 'c': 'daccbc', 'd': 'acbbbd'}, 'daaccbbddaaccbba': {'a': 'daacbbadadaa', 'b': 'daaccbbddaaccbbab', 'c': 'daaccbcddacc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddabbdd': {'a': 'acbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddabbddd'}, 'dcaccccbccbddadaaadaacbbaa': {'a': 'dcaccccbccbddadaaadaacbbaaa', 'b': 'aaab', 'c': 'daaccbcddacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbbdbddc': {'a': 'acbbbbdbddca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ddaaacabbbcc', 'd': 'acbbbdacbadadaadd'}, 'daaccbcdaccb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daaccbcdaccbb', 'c': 'daccbc', 'd': 'daaccbcdaccbd'}, 'dddaaccc': {'a': 'dddaaccca', 'b': 'daacbbadadadaaaacccb', 'c': 'daacbbadadadaaaaccc', 'd': 'daaccd'}, 'acbbbdacbadaccbbbbbbdddcd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbdddcdd'}, 'daaccbbddaacbdadacbc': {'a': 'daacbbadadadacca', 'b': 'daaccbbddaacbdadacbcb', 'c': 'daaccbbdacbbbbbbbdbddacc', 'd': 'daacbcd'}, 'acbbbdacbadadaaddaac': {'a': 'daaba', 'b': 'acbbbdacbadadaaddaacb', 'c': 'daadaacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbb': {'a': 'acbbbdacbadaccbbbbbba', 'b': 'acbbbdacbadaccbbbbbbb', 'c': 'acbbbdacbadaccbbbbbbc', 'd': 'acbbbdacbadaccbbbbbbd'}, 'daaccddc': {'a': 'c', 'b': 'ccb', 'c': 'acbbbdacbaddcc', 'd': 'ccb'}, 'daacccbcbbbddbddd': {'a': 'acbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daacccbcbbbddbdddd'}, 'acbbbb': {'a': 'daacccbcbcba', 'b': 'acbbbb', 'c': 'ddaaacabbbc', 'd': 'acbbbbd'}, 'dcaccccbccbddadaaadaaac': {'a': 'dcaccccbccbddadaaadaaaca', 'b': 'daacccbcbdddacc', 'c': 'daadaaaaac', 'd': 'dcaccccbccbddadaaadaaacd'}, 'daaccbbddaacaaada': {'a': 'acbbbdacbadaa', 'b': 'daaccbcddadc', 'c': 'daaccbbddaacaaadac', 'd': 'acbbbdacbadacdaad'}, 'dcac': {'a': 'ccb', 'b': 'ccb', 'c': 'dcacc', 'd': 'ccb'}, 'dddda': {'a': 'acbbbdaa', 'b': 'ddddab', 'c': 'daaccbcddadac', 'd': 'ddddad'}, 'daacbac': {'a': 'daacbbadadadacca', 'b': 'daacbacb', 'c': 'daacbacc', 'd': 'daacbacd'}, 'daaccbbddaabd': {'a': 'daaccbbddaabda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daaccbcddd'}, 'daaccbbddabbd': {'a': 'acbbbdacbadaa', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daaccbbddabbdd'}, 'daacccbcbbb': {'a': 'daacccbcbbba', 'b': 'daacccbcbbbb', 'c': 'daacbbc', 'd': 'daacccbcbbbd'}, 'dcaccccbccbddadaaacd': {'a': 'daacbbadadadaaa', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'dcaccccbccbddadaaacdd'}, 'daacbbd': {'a': 'daacbbda', 'b': 'daacbbdb', 'c': 'daaccba', 'd': 'daacbbdd'}, 'dd': {'a': 'dda', 'b': 'ccb', 'c': 'cc', 'd': 'ddd'}, 'dda': {'a': 'ddaa', 'b': 'daadaaccd', 'c': 'ddac', 'd': 'dddaadd'}, 'acbbbdacbadaccbbbbbbc': {'a': 'daaccbbdacbbbbbbbca', 'b': 'acbbbdacbadaccbbbbbbcb', 'c': 'ddaaacabbbcc', 'd': 'daccbcbbddadb'}, 'acbbbdacbadaccbbbbbbbcb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbbcb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbbcbd'}, 'dcaccccbccbddadaaadacbbbbbbcd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'dcaccccbccbddadaaadacbbbbbbcdd'}, 'dddaaddac': {'a': 'dddaaddaca', 'b': 'dddaaddacb', 'c': 'dddaaddacc', 'd': 'acbbbdacbadadaadd'}, 'aaba': {'a': 'dca', 'b': 'ccb', 'c': 'dcacc', 'd': 'ccb'}, 'acbbbbdbddcac': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daacbadcc', 'd': 'ccb'}, 'acbbbdac': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdacb', 'c': 'daacbcdaacc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdddbddd': {'a': 'acbbbbdbdda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'daacccbcbbbddddbddddd'}, 'daaccbbddaacbbbdbbbbd': {'a': 'daaccbbddaacbbbdbbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'daaccbbdacbbbbbbdbddd'}, 'daaccbbddaacbbbdbbb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbddaacbbbdbbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbddaacbbbdbbbd'}, 'daaccbbddaacaaadacb': {'a': 'daaccbbddaacaaadacba', 'b': 'daaccbbddaacaaadacbb', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbcd'}, 'acbbbbdbddad': {'a': 'acbbbbdbddada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbbdbddad'}, 'dcaccccbccbddadaaadacbbb': {'a': 'acbbbdacbadacaaa', 'b': 'dcaccccbccbddadaaadacbbbb', 'c': 'ccb', 'd': 'daaccbcdaccbd'}, 'daaccbbddaacbbcbd': {'a': 'aaacbbda', 'b': 'daaccbbdacbcbdb', 'c': 'acbbbbdab', 'd': 'daacccbdd'}, 'daacccbddacc': {'a': 'dddaacca', 'b': 'dddaaccb', 'c': 'daacbbadadadaaaaccc', 'd': 'daacccbddaccd'}, 'daaccbbdacbbbbbd': {'a': 'daaccbbdacbbbbbda', 'b': 'daaccbbdacbbbbbdb', 'c': 'daaccbbdacbbbbbbdc', 'd': 'acbbbdacbadaccbbbbbbddd'}, 'dddaaccbb': {'a': 'daaccbbdacbba', 'b': 'daaccbb', 'c': 'dddaaccbbc', 'd': 'daacccbbd'}, 'acbbbdacbadaccbaa': {'a': 'dacba', 'b': 'acbbbdacbadab', 'c': 'acbbbdacbadacaac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadacdaad': {'a': 'acbbbdacbadacdaada', 'b': 'ccb', 'c': 'c', 'd': 'dacbad'}, 'daacccbcb': {'a': 'daaccbcdaccbba', 'b': 'daacccbcbb', 'c': 'daacccbcbc', 'd': 'daacccbcbd'}, 'daacccbcbcbdd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daccbcbbdd'}, 'daacbbadadaad': {'a': 'daacbbbabdddda', 'b': 'ccb', 'c': 'aaba', 'd': 'daacbbadadad'}, 'acbbbdacbadaccbbbbbbdbbbddd': {'a': 'acbbbdacbadaccbbbbbbdbbbddda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'daaccbbdacbcbbbbaa': {'a': 'acbbbdacbadacdaa', 'b': 'acbbbbdbddab', 'c': 'acbbbdc', 'd': 'daaccbbdacbcbbbbaad'}, 'daaccbacb': {'a': 'acbbbdacbadaccba', 'b': 'daaccbacbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'daccbcbbddd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddb', 'c': 'acbbbbdab', 'd': 'acbbbdacbadaccbbbdd'}, 'daacbbadadadaaacbd': {'a': 'aaacbbda', 'b': 'acbbbdb', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'acbbbdacbaddacbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'ddaaabbbbb', 'c': 'daaccbbdacbcbbbbc', 'd': 'acbbbd'}, 'daaccbbdacbbbbbbddcb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbddcbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbddcbd'}, 'daacbbadadadaaacd': {'a': 'ddaaba', 'b': 'ccb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'ddaaabbbbbdac': {'a': 'daacbaa', 'b': 'acbbbdacb', 'c': 'daacbcdaacc', 'd': 'daacbbbad'}, 'c': {'a': 'ccb', 'b': 'ccb', 'c': 'cc', 'd': 'ccb'}, 'acbbbdacbadaccbbbbbbdbbbddacda': {'a': 'daacbcdaa', 'b': 'acbbbbdbddab', 'c': 'acbbbdacbadaccbbbbbbdbbbddacdac', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdad'}, 'daacbbadadadaa': {'a': 'daacbbadadadaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daacbbadadadaac', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbbbbbb': {'a': 'daacccbcbbbbbba', 'b': 'acbbbdacbadaccbbbbbbb', 'c': 'acbbbdacbadaccbbbbbbc', 'd': 'daaccbbdacbbbbbbd'}, 'dcaccccbccbddadaaadaacbbaaa': {'a': 'acbbbdacbadaa', 'b': 'daacbbc', 'c': 'daaccbbdacac', 'd': 'dcaccccbccbddadaaadaaccd'}, 'acbbbdacbadaccbbbbbbddcd': {'a': 'daaccbbddaacbbbbbaad', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbddcdd'}, 'acbbbdacbadaccbbbbbbad': {'a': 'acbbbdacbadaccbbbbbbada', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbbdbdd'}, 'daaccbcddada': {'a': 'daccbcbbddada', 'b': 'daaccbbddaacbdadacbcba', 'c': 'daaccbcddadac', 'd': 'daaccbcdad'}, 'ddacbac': {'a': 'daacccbcbbbdddcaca', 'b': 'ddacbacb', 'c': 'daccbccc', 'd': 'acbbbdacbadadaadd'}, 'ddaaacaca': {'a': 'daacbbbaaca', 'b': 'acbbbdc', 'c': 'ddaaacacac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbddaacbbbbbd': {'a': 'daaccbbdacbbbbbda', 'b': 'daaccbbdacbbbbdb', 'c': 'daaccbbddaacbbbbbdc', 'd': 'daaccbbddaacbbbbbdd'}, 'acbbbdacbadaccbbbbbd': {'a': 'acbbbbda', 'b': 'daaccbbdacbbbbbbdb', 'c': 'daacbbc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daaccbbddaaccbbdcbbc': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacabbbcb', 'c': 'daaccbbddaaccbbdcbbcc', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaaaacccbbd': {'a': 'daaccbbdda', 'b': 'daaccbbddaaccbbdb', 'c': 'daacbbadadadaaaacccbbdc', 'd': 'daacccbbd'}, 'acbbbdacbadaccbbbbbbdbbbddabdaa': {'a': 'acbbbdacbadaa', 'b': 'acbbbdc', 'c': 'acbbbdacbadaccbbbbbbdbbbddabdaac', 'd': 'acbbbdacbadaccbbbbbbbbada'}, 'acbbbd': {'a': 'acbbbda', 'b': 'acbbbdb', 'c': 'acbbbdc', 'd': 'acbbbdd'}, 'daacccbc': {'a': 'daaccca', 'b': 'daacccbcb', 'c': 'daaccbc', 'd': 'daacccbcd'}, 'daacbbadadadacb': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdcb', 'c': 'dcac', 'd': 'daaccbcdad'}, 'acbbbdacbaddaccb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbb', 'c': 'daacbbc', 'd': 'daccbccbd'}, 'daacbbdbdad': {'a': 'daacbbada', 'b': 'ccb', 'c': 'daacbbdbdadc', 'd': 'daacbbdbdadd'}, 'da': {'a': 'daa', 'b': 'daadaaccd', 'c': 'dac', 'd': 'dacbad'}, 'acbbbdacbadacdaab': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadab', 'c': 'dcaccc', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaaaaccba': {'a': 'daacbaa', 'b': 'daacbbc', 'c': 'daacbac', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'daaccbbddaacbdab': {'a': 'daacbaa', 'b': 'daaccbbddabb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbbad'}, 'daaccbbdacbbbbbbbdbb': {'a': 'daaccbbdacbbbbbbdbbba', 'b': 'daaccbbdacbbbbbbdbbb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbbdbbd'}, 'dcaccccbccbddad': {'a': 'dcaccccbccbddada', 'b': 'ccb', 'c': 'c', 'd': 'daacbbadadad'}, 'acbbbbdbdddc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'daaccbbddaaccbbdcbbcc', 'd': 'acbbbdacbadadaadd'}, 'daacccbddad': {'a': 'daccbcbbddada', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'acbbbbdad'}, 'acbbbdacbaaac': {'a': 'daaccbbdacaca', 'b': 'ddacb', 'c': 'dacc', 'd': 'dacba'}, 'daacbbbabddddacdaaa': {'a': 'acbbbdacbadaaa', 'b': 'acbbbbdab', 'c': 'ddac', 'd': 'dddaadd'}, 'dacccd': {'a': 'acbbbdacbadacaaa', 'b': 'ccb', 'c': 'dcacc', 'd': 'daacbdcd'}, 'acbbbdacbadaccba': {'a': 'acbbbdacbadaccbaa', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabcc', 'd': 'ddaaacacbdaabaad'}, 'daacccbcbbddb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdacbadab', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbcbdbd'}, 'daaccbbddaacbb': {'a': 'daaccbbddaacbba', 'b': 'daaccbbddaacbbb', 'c': 'daaccbbddaacbbc', 'd': 'daaccbbddaaccbbd'}, 'acbbbbdbddadadd': {'a': 'acbbbbdbddadadda', 'b': 'ccb', 'c': 'c', 'd': 'dacbad'}, 'acbbbdacbadaccbbbbbbdbbbddabd': {'a': 'acbbbdacbadaccbbbbbbdbbbddabda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbddcdd'}, 'dcaccccbccbddadaaadaacbbbba': {'a': 'daaccbbddaacbbbbbaa', 'b': 'dcaccccbccbddadaaadaacbbbbab', 'c': 'acbbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddaaacacbdaaa': {'a': 'ddaaa', 'b': 'ddaaacacbdaaab', 'c': 'ddaaacacbdaac', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadaccbbbbbbdbbbddabc': {'a': 'ddaaacabbbca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daaccbbddaaccbbdcbbcc', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadadaaaacccbcbbdb': {'a': 'dacba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'daaccbbddaacbbbdbc', 'd': 'daaccbcdd'}, 'daacbbadadadaaaacccbbc': {'a': 'daaccca', 'b': 'aaacb', 'c': 'daaccbbdacbbbbbbbdbddacc', 'd': 'daacbbadadacbd'}, 'daacbbadadadaaacbad': {'a': 'ddaaba', 'b': 'ccb', 'c': 'cc', 'd': 'dacbad'}, 'daaccbbddaacbbbbbdcb': {'a': 'daccbcba', 'b': 'ddaaacabbbb', 'c': 'acbbbbdbdc', 'd': 'aaacbd'}, 'daacbbad': {'a': 'daacbbada', 'b': 'ccb', 'c': 'daaccbcddadc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddaa': {'a': 'ddaaa', 'b': 'ddaab', 'c': 'ddaaacacbdaac', 'd': 'ddaad'}, 'ddd': {'a': 'ddda', 'b': 'ccb', 'c': 'cc', 'd': 'dddd'}, 'daacbbadadaac': {'a': 'ddaaacacbdaabaa', 'b': 'daacbbadadaacb', 'c': 'daacbbadadadaacc', 'd': 'daaccd'}, 'daaccbac': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbacb', 'c': 'daaccbacc', 'd': 'daadaaaaacacd'}, 'daaccbbddaacbbbbdab': {'a': 'ddaaacacbdaaba', 'b': 'daaccbbdddccb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaaccbbbdabd'}, 'dcaccccbbb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbb', 'c': 'acbbbc', 'd': 'acbbbd'}, 'daaccbbaadd': {'a': 'daaccbbaadda', 'b': 'ccb', 'c': 'daacbbdbdaddc', 'd': 'acbbbdacbadad'}, 'daaccbbdacbbbbbbbcba': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadadaadd'}, 'dacbb': {'a': 'daaccbbdacbcbbba', 'b': 'aaacbbb', 'c': 'acbbbdc', 'd': 'daacbd'}, 'daaccbbddaacbbbbbaaa': {'a': 'daacbcdaa', 'b': 'daacbbc', 'c': 'acbbbdacbaaac', 'd': 'daacbcdaad'}, 'acbbbdacbadacdaac': {'a': 'daacbbadadadacca', 'b': 'ddaaabb', 'c': 'acbbbbdbdaacc', 'd': 'daadaaaaacacd'}, 'acbbbdacbadaccc': {'a': 'daacbbadadadacca', 'b': 'acbbbdacbadacccb', 'c': 'aac', 'd': 'daaccbbdccba'}, 'daccbccca': {'a': 'dcac', 'b': 'ccb', 'c': 'dcaccccbcc', 'd': 'ccb'}, 'dddaaccbbc': {'a': 'daaccca', 'b': 'daaccbbdacbcb', 'c': 'daacccbbcc', 'd': 'daacbbadadacbd'}, 'acbbbdacbadaccbbbbdddcddd': {'a': 'acbbbdacbadda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdd'}, 'daaccbbddaacaad': {'a': 'daaccbbddaacaada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaacaadd'}, 'acbbbbdbdaacc': {'a': 'daaccbca', 'b': 'aaacb', 'c': 'daacbaac', 'd': 'daaccbcdaccbbacd'}, 'dcaccccbccbddadaaadaaacaa': {'a': 'dcaccccbccbddadaaadaaacaaa', 'b': 'daab', 'c': 'ddaaabbbbbdac', 'd': 'dacbad'}, 'daaccbbdacbbbbbbbcbbbba': {'a': 'daacccbcbbbdddcaca', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbbcbbbdabdc', 'd': 'acbbbdacbadaccbbbbbbbbad'}, 'daccccbdcdd': {'a': 'acbbbdacbadadaa', 'b': 'ccb', 'c': 'daacbbdbdadc', 'd': 'daccccbdcdd'}, 'daaccd': {'a': 'daacccbcbbbdddca', 'b': 'ccb', 'c': 'dcaccccbccbddadaaadaaacabbc', 'd': 'daaccdd'}, 'daaccbbddaacaadac': {'a': 'daaba', 'b': 'daaccbbddaacaadacb', 'c': 'acbbbbdbdaacc', 'd': 'daaccbcdaccbbacd'}, 'dddaaddaccc': {'a': 'daacbbadadadacca', 'b': 'daadaaccb', 'c': 'dacc', 'd': 'daadaaccd'}, 'daccccbdb': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdb', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbdddcd'}, 'acbbbddb': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacabbbcc', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'daaccbcddd': {'a': 'acbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daaccbcdddd'}, 'aabb': {'a': 'ccb', 'b': 'daaccbbdccbabb', 'c': 'ccb', 'd': 'daacbdcd'}, 'daaccbbaaddacd': {'a': 'dddaba', 'b': 'ccb', 'c': 'cc', 'd': 'dacbad'}, 'daaccbbddaaccbbbdb': {'a': 'ddacba', 'b': 'daaccbbdacbbbbbbddcb', 'c': 'dcaccc', 'd': 'acbd'}, 'daacbaac': {'a': 'daacbbadadadacca', 'b': 'daacbaacb', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadacd'}, 'daacccbcbdddacbb': {'a': 'daacccbcbdddacbba', 'b': 'daaccbbdacbbb', 'c': 'daaccbbdacbbbbbbdcdaccb', 'd': 'daacccbbd'}, 'daccbcbbddb': {'a': 'daccbcba', 'b': 'daaccbbdccbab', 'c': 'ddaaacabbbcc', 'd': 'daccbcbbddbd'}, 'acbbbdacbadaccbbbdd': {'a': 'acbbbddda', 'b': 'acbbbdacbadaccbbbddb', 'c': 'acbbbbdab', 'd': 'daaccbbdacbbbbdd'}, 'daaccbcdaccbbacbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbdacbaddacbbb', 'c': 'acbbbdc', 'd': 'daacbbadadacbbbd'}, 'dcaccccbccbddadaaadacb': {'a': 'dddaaddaca', 'b': 'dcaccccbccbddadaaadacbb', 'c': 'aaba', 'd': 'dddaaddacbd'}, 'dddaaddacacbbb': {'a': 'dacba', 'b': 'dddaaddacacbbbb', 'c': 'ddaaacabbbcc', 'd': 'aaacbbd'}, 'daaccbbdacbbbbbbbcbbbbdbbbbd': {'a': 'daaccbbdacbbbbbbbcbbbbdbbbbda', 'b': 'ccbd', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcbbbbdbbbbdd'}, 'daaccbbddaaccac': {'a': 'daaccca', 'b': 'daccccb', 'c': 'daaccc', 'd': 'daaccd'}, 'aaab': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbcb', 'c': 'dcacc', 'd': 'dacbad'}, 'acb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbb', 'c': 'dcaccccbccbddadaaadaaacabbc', 'd': 'acbd'}, 'acbbbdacbaddda': {'a': 'daacbbadadaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadddac', 'd': 'daacbbadadad'}, 'daacccc': {'a': 'daaccbca', 'b': 'daacccb', 'c': 'daacccc', 'd': 'daaccd'}, 'daaccbbdacbbbbdbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'ccbd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbd'}, 'daaccbbdacbbbbbb': {'a': 'daaccbbddaacbbbbbba', 'b': 'daaccbbdacbbbbbbb', 'c': 'daaccbbdacbbbbbbc', 'd': 'daaccbbdacbbbbbbd'}, 'daaccbbddaaccbbbdab': {'a': 'ddaaacacbdaabaa', 'b': 'daaccbbddaaccbbbdabb', 'c': 'acbbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'daacbbdbdadc': {'a': 'daaccbcdaddc', 'b': 'ccb', 'c': 'daacbadcc', 'd': 'ccb'}, 'daacbbadadad': {'a': 'daacbbadadada', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbbcbbbdabd': {'a': 'acbbbdacbadaccbbbbbbada', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbbcbbbdabdc', 'd': 'acbbbdacbadaccbbbbdddcdd'}, 'dddaaddacacbb': {'a': 'dddaaddaca', 'b': 'dddaaddacacbbb', 'c': 'cc', 'd': 'daaccbcdaccbd'}, 'daaccbbd': {'a': 'daaccbbda', 'b': 'daaccbbdb', 'c': 'daaccbbdc', 'd': 'daaccbbdd'}, 'daacbbadadadaccbd': {'a': 'daaccbcdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daacbbadadadaccbdd'}, 'daaccbbddaacbbbdbbbbda': {'a': 'daacbbadadaa', 'b': 'daaccbbdacbbbbbbbcbbdab', 'c': 'daacbbdbdac', 'd': 'daaccbbddaaccbbbdabd'}, 'daacbbba': {'a': 'daacbbbaa', 'b': 'daacbbbab', 'c': 'daacbdaabc', 'd': 'daacbbbad'}, 'daaccbbddaaccbbdcbbcc': {'a': 'ccb', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'acbbbbdbddcac', 'd': 'ccb'}, 'acbbbbdbd': {'a': 'acbbbbdbda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'acbbbbdbdd'}, 'daaccbbdacbbbbbbbcbbda': {'a': 'daacbbadadaa', 'b': 'daaccbbdacbbbbbbbcbbdab', 'c': 'acbbbdacbadaccbbbbbbdbbbddac', 'd': 'daaccbbddaacbbbdbd'}, 'daacccbdda': {'a': 'daaccbbddaa', 'b': 'daacbbadadadaaaab', 'c': 'daacccbddac', 'd': 'daacccbddad'}, 'acbbbdacbadacdaa': {'a': 'acbbbbdbdaa', 'b': 'acbbbdacbadacdaab', 'c': 'acbbbdacbadacdaac', 'd': 'acbbbdacbadacdaad'}, 'daacbbadadadaaaacccbcbbd': {'a': 'dddaa', 'b': 'daacbbadadadaaaacccbcbbdb', 'c': 'daaccbbdc', 'd': 'daacccbcbbdd'}, 'acbbbdacbadac': {'a': 'acbbbdacbadaca', 'b': 'daacbdaabb', 'c': 'acbbbdacbadacc', 'd': 'acbbbdacbadacd'}, 'daacbbadadadaaaaccc': {'a': 'daacbbadadadaaaaccca', 'b': 'daacbbadadadaaaacccb', 'c': 'daacbbadadadaaaaccc', 'd': 'daaccd'}, 'ddaaacabbbcbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'ccb', 'c': 'daacbbbabddddacab', 'd': 'daaccbbddaaccbbbdabd'}, 'daacbbbabd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'acbbbbdbdc', 'd': 'daacbbbabdd'}, 'ddddad': {'a': 'daacbbadadadaaa', 'b': 'ccb', 'c': 'c', 'd': 'ddddad'}, 'daccbcccd': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'daccbcccdc', 'd': 'ddaaacacbdaabaad'}, 'daacccbcbbbaa': {'a': 'daaccbbaaaa', 'b': 'acbbbdc', 'c': 'daacbbbaac', 'd': 'daaccbbddaacbbbbbaad'}, 'daacccbd': {'a': 'daacbda', 'b': 'daacccbdb', 'c': 'daaccba', 'd': 'daacccbdd'}, 'acbbbdacbadddacd': {'a': 'daada', 'b': 'ccb', 'c': 'dca', 'd': 'dacbad'}, 'daacbbadadadaaacb': {'a': 'daacbbadadadaaacba', 'b': 'daaccbcdaccbb', 'c': 'daacbc', 'd': 'daacbbadadadaaacbd'}, 'daaccbbddaacbbbdbbda': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'daaccbbddaacbbbbac', 'd': 'daacbbad'}, 'daacbbbabddddacdaa': {'a': 'daacbbbabddddacdaaa', 'b': 'ccbda', 'c': 'acbbbdacbaaac', 'd': 'acbbbdacbadadaadd'}, 'daccbcbbdcdac': {'a': 'acbbbdacbadaca', 'b': 'ddaaabb', 'c': 'acbbbdacbadacc', 'd': 'acbbbdacbadddacd'}, 'daacccbcbb': {'a': 'daaccbbddaacbbbbbaa', 'b': 'daacccbcbbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'daaccbbddaac': {'a': 'daaccbbddaaca', 'b': 'daaccbbddaacb', 'c': 'daaccbbddaacc', 'd': 'daaccbbddaacd'}, 'daacccbcbbbddbdad': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbbca', 'd': 'daacccbcbbbddbdadd'}, 'daacbbbaac': {'a': 'daacbbbaaca', 'b': 'aaacb', 'c': 'acbbbbdbdaacc', 'd': 'daaccd'}, 'dcaccccbb': {'a': 'daacccbcbbbdddcaca', 'b': 'dcaccccbbb', 'c': 'dcaccccbbc', 'd': 'daacbbadadacbbbd'}, 'dcaccccbccbddadaaadac': {'a': 'dcaccccbccbddadaaadaca', 'b': 'dcaccccbccbddadaaadacb', 'c': 'dcaccccbccbddadaaadacc', 'd': 'acbbbdacbadadaadd'}, 'dcaccccbccbddadaaadaacc': {'a': 'dcaccccbccbddadaaadaacca', 'b': 'dcaccccbccbddadaaadaaccb', 'c': 'daacbbadadadaaaacc', 'd': 'dcaccccbccbddadaaadaaccd'}, 'daacbbadadadaaaacccbcbd': {'a': 'aaacbbda', 'b': 'daacbbadadadaaaacccbcbbdb', 'c': 'daaccba', 'd': 'daacbbadadadaaaacccbcbdd'}, 'daaccbbddaaccbda': {'a': 'daaccbbddaa', 'b': 'ddaab', 'c': 'acbbbdaac', 'd': 'daaccbbddaacbdad'}, 'acbbbdacbadacdaada': {'a': 'acbbbbdbdaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbdd': {'a': 'acbbbdacbadaccbbbbbbdbbbdda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbdbbbddd'}, 'daccccbd': {'a': 'daacbda', 'b': 'daccccbdb', 'c': 'daccccbdc', 'd': 'daacccbdd'}, 'daaccbbdacbbbbbbbcbddb': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'ccb', 'd': 'daccbcbbddadb'}, 'daaccbbddaacbbbbddb': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacabb', 'c': 'acbbbbdbdc', 'd': 'daaccbbddaacbbbbddbd'}, 'daccccdd': {'a': 'daccccdda', 'b': 'ccb', 'c': 'daccbcccdc', 'd': 'daccccddd'}, 'dcaccccbccbddadaaaccb': {'a': 'ddaaacba', 'b': 'daaccbbddaaccb', 'c': 'daaccbbddaacbc', 'd': 'daacccbd'}, 'daacccbcbcba': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacabb', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'daaccbbdacbcbbba': {'a': 'ddaaacacbdaaba', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdacbad'}, 'acbbbdacbadaccbbbbbbdbbbddacb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacbb', 'c': 'acbbbdc', 'd': 'dacbd'}, 'daaccbbdacbbbbbbbdbdda': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'daaccbbdacbbbbbbbdbddac', 'd': 'daacbbad'}, 'daaccbbddaacbdadacbcb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'daaccbbddaacbdadacbcbb', 'c': 'acbbbdc', 'd': 'daccbccbd'}, 'dddab': {'a': 'dddaba', 'b': 'ccb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'daacbc': {'a': 'daacbbadadadacca', 'b': 'daacbcb', 'c': 'daacbcc', 'd': 'daacbcd'}, 'daacccbcbbbdac': {'a': 'daaccbbaaa', 'b': 'daacccbcbbbdacb', 'c': 'daac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaaccbbab': {'a': 'acbbbdacbadaca', 'b': 'daccccbdb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbbad'}, 'daaccbbdacbbbbbbbdbbd': {'a': 'daaccbcdaccbbacd', 'b': 'ccb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbdbbdd'}, 'daacbbadad': {'a': 'daacbbadada', 'b': 'ccb', 'c': 'daacbbadadc', 'd': 'acbbbdacbadad'}, 'daacccbcbbba': {'a': 'daacccbcbbbaa', 'b': 'daacccbcbbbab', 'c': 'acbbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'acbbbdacbadaccbbbbdddcdd': {'a': 'acbbbbdbdda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbdbddc', 'd': 'acbbbdacbadaccbbbbdddcddd'}, 'daacbbbabddddac': {'a': 'daacbbbabddddaca', 'b': 'ddaaabb', 'c': 'daacbbbaac', 'd': 'daacbbbabddddacd'}, 'daaccbcddaccb': {'a': 'daaccbcdaccbba', 'b': 'daaccbb', 'c': 'daacbc', 'd': 'daacccbcbbd'}, 'daacbbadadadaaaacbd': {'a': 'aaacbbda', 'b': 'acbbbdb', 'c': 'daccccbdc', 'd': 'daacbdd'}, 'daaccbbdaca': {'a': 'daaccbbdacaa', 'b': 'ddaaacab', 'c': 'daaccbbdacac', 'd': 'daaccbbaad'}, 'daaccbbdacbbbbbbbcbbbb': {'a': 'daaccbbdacbbbbbbbcbbbba', 'b': 'daaccbbdacbbbbbbbcbbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbdacbbbbbbbcbbbbd'}, 'ddddab': {'a': 'acbbbdacbadacaaa', 'b': 'ccb', 'c': 'dca', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadacaaab': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ddaaacabbbca', 'd': 'daccbcbbddadb'}, 'daaccbbdacbbbbdcb': {'a': 'daccbcba', 'b': 'ddaaacabbb', 'c': 'acbbbbdbdc', 'd': 'ddaaacabbd'}, 'acbbbdacbadacda': {'a': 'acbbbdacbadacdaa', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'dacbad'}, 'daacbcbbb': {'a': 'daaccbbdacbcbbba', 'b': 'daaccbbddaacbdadacbcbbbb', 'c': 'daaccbbdacbcbbbbc', 'd': 'aaacbbd'}, 'daaccbbddaaccbbbdad': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'daaccbbddaadc', 'd': 'daaccbcdaccbdd'}, 'acbbbdacbadaccbbbbbbbb': {'a': 'acbbbdacbadaccbbbbbbbba', 'b': 'acbbbdacbadaccbbbbbbbb', 'c': 'acbbbdacbadaccbbbbbbbbc', 'd': 'acbbbdacbadaccbbbbbbbd'}, 'daaccbbdacbbbbbbbcbbd': {'a': 'daaccbbdacbbbbbbbcbbda', 'b': 'acbbbddb', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbbd'}, 'daaccbcda': {'a': 'daacbbadadaa', 'b': 'acbbbdc', 'c': 'daaccbcdac', 'd': 'daaccbcdad'}, 'dcaccccb': {'a': 'daccbccca', 'b': 'dcaccccbb', 'c': 'dcaccccbc', 'd': 'daacbbbad'}, 'acbbbdacbadaccbbbbbbbbadaacc': {'a': 'daaccbca', 'b': 'acbbbdacbadaccbbbbbbbbadaaccb', 'c': 'acbbbdacbadaccc', 'd': 'daccbcba'}, 'daacbbadadaacb': {'a': 'daaccbbddaacbbca', 'b': 'daaccbcddadacbb', 'c': 'daacbbc', 'd': 'acbbbbdbdaacbd'}, 'daaccbbddaacbbbbacd': {'a': 'daaccbbddaacbbbbacda', 'b': 'ccb', 'c': 'dcaccc', 'd': 'daaccbbddaacbbbbacdd'}, 'ddacaa': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdc', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadab': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacabb', 'c': 'ccb', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadadaa': {'a': 'acbbbdacbadaaa', 'b': 'acbbbdacbadaccbbbbbbdbbbdddab', 'c': 'ddac', 'd': 'acbbbdacbadadaad'}, 'daacbbadadacbbbd': {'a': 'acbbbda', 'b': 'acbbbdb', 'c': 'daacbbc', 'd': 'dacbdd'}, 'daacbbadadadaaaacccbcba': {'a': 'daacbaa', 'b': 'daacbbc', 'c': 'daaccbac', 'd': 'acbbbdacbad'}, 'ddaaabbbbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daacbdd'}, 'daaccbbdad': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daaccbbdadd'}, 'daaccbb': {'a': 'daaccbba', 'b': 'daaccbb', 'c': 'daccbcb', 'd': 'daaccbbd'}, 'daaccbbdacbbbbbbbda': {'a': 'daaccbbdacbbbbbbbdaa', 'b': 'acbbbbdab', 'c': 'daaccbbdacbbbbbbbdac', 'd': 'daaccbbdacbbbbbbbdad'}, 'daaccbbdacbcbbbbcddd': {'a': 'acbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbbbbdbb': {'a': 'daaccbbdacbbbbbbbcba', 'b': 'acbbbdacbadaccbbbbbbbcb', 'c': 'ccb', 'd': 'daaccbbdacbbbbbbdbbd'}, 'daaccbbdddccbbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'dacbdd'}, 'dcaccccbccbdd': {'a': 'dcaccccbccbdda', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'daaccbbddaacbdad'}, 'daaccbbddaacbbca': {'a': 'daaccbbdacaca', 'b': 'daaccbbddaacbbbbbab', 'c': 'ddacbac', 'd': 'ddaaacacbdaabaad'}, 'acbbbdacbadaccbbbbd': {'a': 'acbbbbda', 'b': 'acbbbdacbadaccbbbbdb', 'c': 'daacbbc', 'd': 'acbbbdacbadaccbbbbdd'}, 'daacbbadadadaaaabb': {'a': 'daaccbbdacbcbdba', 'b': 'acbbbdacbadadaaddaacbb', 'c': 'dca', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaabc': {'a': 'daaccbbdacaca', 'b': 'daaccbbddaabcb', 'c': 'daacbac', 'd': 'daaccd'}, 'ddaaacacacb': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacacacbb', 'c': 'acbbbdc', 'd': 'aaacbd'}, 'daacbbdb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daacbbdbd'}, 'daaccbbddaacbbbbbbad': {'a': 'daaccbbddaacbbbbbbada', 'b': 'ccbd', 'c': 'acbbbbdbdddc', 'd': 'daaccbbddaacbbbdbd'}, 'acbbbdacbadaccbbbbdddb': {'a': 'daccbcba', 'b': 'daaccbbdccbab', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbddddbd'}, 'acbbbdaaac': {'a': 'dddaaca', 'b': 'daaccbbddaaccb', 'c': 'daac', 'd': 'daaccbbddaaccbbbdabd'}, 'ddddd': {'a': 'dcaccccbccbdda', 'b': 'ccbd', 'c': 'daaccbcdaddc', 'd': 'ddddd'}, 'acbbbdb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'ccb', 'd': 'daaccbbdacbcbdbd'}, 'daaccbbddaaccbbba': {'a': 'daacbbadadaa', 'b': 'daacbbc', 'c': 'daacbbadadadaaaacbc', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbbdacbbbbbbdbd': {'a': 'daaccbbdacbbbbbbdcda', 'b': 'ccbd', 'c': 'acbbbbdbdc', 'd': 'daaccbbdacbbbbbbdbdd'}, 'daacccbcbbbddbd': {'a': 'daacccbcbbbddbda', 'b': 'ccbd', 'c': 'acbbbbdbdc', 'd': 'daacccbcbbbddbdd'}, 'daacccbcbcb': {'a': 'daacccbcbcba', 'b': 'daacbbadadacb', 'c': 'acbbbdc', 'd': 'daacccbcbcbd'}, 'daacbbadadadaaaacccbcbbbb': {'a': 'daaccbbdacbbbba', 'b': 'acbbbdacbadaccbbbb', 'c': 'daaccbbddaaccbbdcbbc', 'd': 'daacbbadadadaaaacccbcbbbbd'}, 'daacbbadadacbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'daacbbadadacbbb', 'c': 'acbbbdc', 'd': 'daaccbbdddccbbd'}, 'acbbb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbb', 'c': 'acbbbc', 'd': 'acbbbd'}, 'daaccbbddaacbbbbbbada': {'a': 'acbbbdacbadaa', 'b': 'acbbbbdbddab', 'c': 'acbbbdacbadaccbbbbbbdbbbddac', 'd': 'daacbbad'}, 'daacbaa': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdc', 'c': 'daacbaac', 'd': 'ddaaacacbdaabaad'}, 'daaccbbddaacbca': {'a': 'daaccbbddaacbbca', 'b': 'daacbbc', 'c': 'daaccbbddaacbcac', 'd': 'daacccbcbbbdddcacd'}, 'daaccbbddaacd': {'a': 'aaacbbda', 'b': 'daccbcbbddadb', 'c': 'daacbdaabc', 'd': 'daaccbcddd'}, 'acbb': {'a': 'daaccbcdaccbbacd', 'b': 'acbbb', 'c': 'acbbc', 'd': 'ddaaabbbbd'}, 'daacbbdbdaddc': {'a': 'daacbbadadca', 'b': 'ccb', 'c': 'cc', 'd': 'ccb'}, 'daccd': {'a': 'daaba', 'b': 'ccb', 'c': 'dcacc', 'd': 'daccdd'}, 'daaccbbdacbbbbbbb': {'a': 'daaccbbdacbbbbbbba', 'b': 'acbbbdacbadaccbbbbbbb', 'c': 'daaccbbdacbbbbbbbc', 'd': 'daaccbbdacbbbbbbbd'}, 'daacccbcbbd': {'a': 'daccbcbbdda', 'b': 'daacccbcbbdb', 'c': 'daaccba', 'd': 'daacccbcbbdd'}, 'daaccbbdacbbbbbbdbbbbd': {'a': 'daaccbbdacbbbbbbdbbbbda', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbbbbbbbcbdd'}, 'acbbbdacbadaccbbbbbbbbadaaccb': {'a': 'daacccbcbcba', 'b': 'daacbacb', 'c': 'daacbbc', 'd': 'ddaaacabbd'}, 'daacbbbabddddacd': {'a': 'daacbbbabddddacda', 'b': 'ccb', 'c': 'dca', 'd': 'dacbad'}, 'daacccbcbbbddbda': {'a': 'acbbbbdbdaa', 'b': 'daacbbbaacab', 'c': 'daaccbbdddcc', 'd': 'daacccbcbbbddbdad'}, 'daccbcbbb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbb', 'c': 'acbbbc', 'd': 'daccbcbbbd'}, 'daaccbbddaacc': {'a': 'daaccbbddaacca', 'b': 'daaccbbddaaccb', 'c': 'daac', 'd': 'daaccbbddaacbbbdbd'}, 'daaccbcdacc': {'a': 'daacbbadadadacca', 'b': 'daaccbcdaccb', 'c': 'daccc', 'd': 'daaccd'}, 'daacbbadadadaacac': {'a': 'daacbbbaaca', 'b': 'aaacb', 'c': 'daccc', 'd': 'daadaaccd'}, 'acbbbdacbadaccbbbbbbcbbbdd': {'a': 'acbbbbda', 'b': 'acbbbddb', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daacbbadadadaaaacccbb': {'a': 'daacccbba', 'b': 'daaccbbdacbb', 'c': 'daacbbadadadaaaacccbbc', 'd': 'daacbbadadadaaaacccbbd'}, 'dcaccccbccbddadaaadaaacd': {'a': 'dcaccccbccbddadaaadaaacda', 'b': 'ccb', 'c': 'cc', 'd': 'acbbbdacbadadaadd'}, 'daacbbadadadaaaacccbcbbbbd': {'a': 'daacbbda', 'b': 'daacbbadadadaaaacccbcbbbbdb', 'c': 'daccbcbbdc', 'd': 'daaccbbdacbbbbdd'}, 'daaccbbdacbcbdba': {'a': 'daaccbcdaccbbacd', 'b': 'acbbbdacbadadaadd', 'c': 'ddaaacacbdaabc', 'd': 'daccbcbbddadb'}, 'acbbbdacbadaccbbbbbbbbadaac': {'a': 'acbbbdacbadaca', 'b': 'daacbbadadacb', 'c': 'acbbbdacbadaccbbbbbbbbadaacc', 'd': 'daaccbcdaccbbacd'}, 'daaccbbddaacbbbbbad': {'a': 'daaccbcda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daaccbbddaacbbbdbd'}, 'daacccbcbbbbdb': {'a': 'daaccbbdacbcbdba', 'b': 'daacccbcbbbbdbb', 'c': 'ddaaacabbbcc', 'd': 'daacccbcbbbbdbd'}, 'acbbbdacbadaccbbbbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbbabd'}, 'acbbbbdbddada': {'a': 'daacbbadadaa', 'b': 'acbbbbdbddadab', 'c': 'acbbbbdbddadac', 'd': 'acbbbbdbddadad'}, 'daaccbbddaaccbd': {'a': 'daaccbbddaaccbda', 'b': 'daaccbbddaacbdb', 'c': 'daacbbadadadaaaacccbbdc', 'd': 'daaccbbddaacbdd'}, 'daccbcbbdc': {'a': 'daaccbcdaccbbacd', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacacbdaabc', 'd': 'daccbcbbdcd'}, 'ddaaabb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'ddaaabbb', 'c': 'acbbbdc', 'd': 'daaccbbddaacbbcd'}, 'daacccbcbbbdddd': {'a': 'acbbbddda', 'b': 'daacccbcbbbddddb', 'c': 'daacccbcbbbddddc', 'd': 'daaccbbdacbbbbdd'}, 'daacbbadadadaaaacccb': {'a': 'daacbbadadadaaaacccba', 'b': 'daacbbadadadaaaacccbb', 'c': 'daacbbadadadaaaacccbc', 'd': 'daacccbd'}, 'acbbbdacbadaccbbbbbbddcdd': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbddcddd'}, 'dcaccccbccbddadaaabc': {'a': 'daacbbadadadacca', 'b': 'acbbbdacbadadaaddaacb', 'c': 'daccbcc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdcb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdacbbbbbbbdcb', 'c': 'ddaaacabbbcc', 'd': 'ddaaacabbd'}, 'acbbbdacbadaccbbbbbbddd': {'a': 'acbbbddda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'acbbbdacbadaccbbbbbbdddc', 'd': 'acbbbdacbadaccbbbbbbddd'}, 'daacccbcbbbdddcaca': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbbaacab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadadaadd'}, 'daacbdd': {'a': 'daacbda', 'b': 'acbbbddb', 'c': 'acbbbdc', 'd': 'daacbdd'}, 'ddaaabbbbbdaa': {'a': 'dddaa', 'b': 'ddaab', 'c': 'acbbbdaac', 'd': 'daaccbcddad'}, 'dcaccccbccbddadaaadaacbb': {'a': 'dcaccccbccbddadaaadaacbba', 'b': 'dcaccccbccbddadaaadaacbbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'daacbbadadadaaaacd': {'a': 'daacbbadadadaaaacda', 'b': 'ccb', 'c': 'daccbccca', 'd': 'daacbbadadadaaaacdd'}, 'acbbbdacbadaaad': {'a': 'daacbbada', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaaadd'}, 'acbbbbda': {'a': 'acbbbdaa', 'b': 'acbbbbdab', 'c': 'ddaaabbbbbdac', 'd': 'acbbbbdad'}, 'daaccbbddaacbbbbdd': {'a': 'daaccbbdda', 'b': 'daaccbbddaacbbbbddb', 'c': 'daaccbbdddc', 'd': 'daacccbcbbbddd'}, 'daaccbbdacbbbbbbbcbdda': {'a': 'daccbcbbddada', 'b': 'daccbcbbdc', 'c': 'daaccbcddac', 'd': 'daaccbcddd'}, 'daacccbcbbddd': {'a': 'daaccbbda', 'b': 'daaccbbddaacbbbbddb', 'c': 'daab', 'd': 'daaccbbddd'}, 'acbbbdacbadaccbbbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbdacbadaccbbbbbb', 'c': 'ddaaacabbbc', 'd': 'acbbbdacbadaccbbbbbd'}, 'daadaaca': {'a': 'daaba', 'b': 'ccb', 'c': 'acbbbdacbadaccc', 'd': 'ccbd'}, 'daaccbbdacbbbbbbbcbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'daaccbbdacbbbbbbbcbdd'}, 'daccccbdca': {'a': 'dddaba', 'b': 'daacbbbaacab', 'c': 'acbbbdacbadacaac', 'd': 'acbbbdacbadadaadd'}, 'daacccbcbdddacd': {'a': 'acbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdc', 'd': 'daaccbcddd'}, 'daacbbadadadaaaa': {'a': 'acbbbdaaa', 'b': 'daacbbadadadaaaab', 'c': 'daacbbadadadaaaac', 'd': 'dacbad'}, 'dddaaddacacbbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbbb', 'c': 'acbbbc', 'd': 'daaccbbdacbcbbbbd'}, 'dcaccccbccbddadaaadaacbbb': {'a': 'daaccbbddaacbbbbbaa', 'b': 'dcaccccbccbddadaaadaacbbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daacccbcbbbddd': {'a': 'daaccbbda', 'b': 'daacccbcbbbdddb', 'c': 'daacccbcbbbdddc', 'd': 'daacccbcbbbdddd'}, 'daacccbcbbbdddc': {'a': 'daacccbcbbbdddca', 'b': 'daacccbcbbbdddcb', 'c': 'acbbbdc', 'd': 'daacccbcbbbdddcd'}, 'acbbbdaaa': {'a': 'ddaaa', 'b': 'acbbbdaaab', 'c': 'acbbbdaaac', 'd': 'daaccbcddad'}, 'daacccbcbbbdddcdd': {'a': 'acbbbbdbdda', 'b': 'ccbd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daacbbad'}, 'daaccbbddaacaaa': {'a': 'acbbbdacbadaaa', 'b': 'daaccbbddaacaab', 'c': 'daac', 'd': 'daaccbbddaacaaad'}, 'daaccbbdacbbbbbbddcbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'daaccbcdaccbd': {'a': 'aaacbbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daacbbc', 'd': 'daaccbcdaccbdd'}, 'acbbbdacbadaccbbbbbbbbadaa': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadacdaab', 'c': 'acbbbdacbadaccbbbbbbbbadaac', 'd': 'acbbbdacbadaccbbbbbbbbada'}, 'daacbbbabddddacdac': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaabb', 'c': 'acbbbdacbadacc', 'd': 'acbbbdacbadadaadd'}, 'dddad': {'a': 'daadaaa', 'b': 'ccb', 'c': 'ccb', 'd': 'ddaad'}, 'daacbcc': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacacacb', 'c': 'daccbccc', 'd': 'daadaaaaacacd'}, 'daaccbcdaccbb': {'a': 'daaccbcdaccbba', 'b': 'dacbb', 'c': 'daacbbc', 'd': 'daacccbcbbd'}, 'dcaccccbccbddadaaadaca': {'a': 'daacbbadadadaaca', 'b': 'ccb', 'c': 'dcaccccbccbddadaaadacac', 'd': 'ccbd'}, 'daaccbbdacbb': {'a': 'daaccbbdacbba', 'b': 'daaccbbdacbbb', 'c': 'daacbbc', 'd': 'daacccbbd'}, 'daaccbbdacbbbbbbbcbbbd': {'a': 'daaccbbdacbbbbbbbcbbbda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'daaccbbdacbbbbbbbcbbbdab', 'd': 'acbbbbd'}, 'daaccbbdacbbbbbbddcbbdd': {'a': 'acbbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbcddadc', 'd': 'daacbdd'}, 'daacbdaabc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbbc', 'c': 'ac', 'd': 'daacccbcbbbdddcacd'}, 'daaccbbddaacbda': {'a': 'daaccbbddaa', 'b': 'daaccbbddaacbdab', 'c': 'ddaaac', 'd': 'daaccbbddaacbdad'}, 'daacbbadadadaccbbb': {'a': 'daaccbbdacbcbbba', 'b': 'daacbbadadadaccbbbb', 'c': 'daacbbadadadaccbbbc', 'd': 'aaacbbd'}, 'acbbbbdbdaad': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'daaccbbaadd'}, 'daacccbcbdddacb': {'a': 'acbbbdacbadaa', 'b': 'daacccbcbdddacbb', 'c': 'daacccbcbdddacbc', 'd': 'daacccbd'}, 'daacbbadadadaaaacb': {'a': 'daacbbadadadaaaacba', 'b': 'daaccbb', 'c': 'daacbbadadadaaaacbc', 'd': 'daacbbadadadaaaacbd'}, 'daaccbbdacbbbbbbbdada': {'a': 'acbbbdaa', 'b': 'daab', 'c': 'acbbbdaac', 'd': 'daaccbcddad'}, 'acbbbdacbadaccbbbbdddcb': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbdcb', 'c': 'acbbbbdbdc', 'd': 'daaccbbddaacbbbbbad'}, 'daaccbbdacbbbbda': {'a': 'daaccbbddaa', 'b': 'daab', 'c': 'acbbbdaac', 'd': 'daaccbcddadacbd'}, 'daaccbbdacbbbbbbddc': {'a': 'daaccbbdacbcbdba', 'b': 'daaccbbdacbbbbbbddcb', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbbdcd'}, 'daacbbadadadaaaaccca': {'a': 'daaccbca', 'b': 'daacbbc', 'c': 'daacbacc', 'd': 'acbbbdacbadadaadd'}, 'daccbcbbc': {'a': 'dc', 'b': 'ddaaacabbbcb', 'c': 'daacbadcc', 'd': 'ddaaacacbdaabaad'}, 'daacbbadadadaaaacccba': {'a': 'daacbbadadadaaaacccbaa', 'b': 'daacbbc', 'c': 'daacbac', 'd': 'acbbbdacbadaccbbbbbbdbbbddacd'}, 'acbbbdacbaaa': {'a': 'daaccbbaaaa', 'b': 'daacbbc', 'c': 'acbbbdacbaaac', 'd': 'acbbbdacbadacd'}, 'daaccbbdddbdd': {'a': 'daaccbbdddcda', 'b': 'ccbd', 'c': 'ccbd', 'd': 'daaccbbdddbddd'}, 'daaccbbddaaccab': {'a': 'daaccbdca', 'b': 'daaccbbddaaccbbbdabb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaacaabd'}, 'acbbbdacbadaccbbbbbbba': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbbad'}, 'ddacab': {'a': 'daacccbcbbbdddcaca', 'b': 'aabb', 'c': 'dcacc', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbb': {'a': 'daaccbbdacbbbba', 'b': 'daaccbbdacbbbbb', 'c': 'daacbbc', 'd': 'daaccbbdacbbbbd'}, 'ddaaacacbd': {'a': 'ddaaacacbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daacbdaabc', 'd': 'daacbdd'}, 'daaccbbdacbc': {'a': 'daaccca', 'b': 'daaccbbdacbcb', 'c': 'daaccbac', 'd': 'daacbbbad'}, 'ccbda': {'a': 'daacccbcbbbdddcaca', 'b': 'ccb', 'c': 'dca', 'd': 'ccbd'}, 'dcaccccbccbddadaaadaacca': {'a': 'dcaccccbccbddadaaadaaccaa', 'b': 'daacbbc', 'c': 'dcaccccbccbddadaaadaaccac', 'd': 'ccbd'}, 'daaccbbddaacaaadacbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'daaccbbddaacaaadacbbb', 'c': 'acbbbdc', 'd': 'ddaaabbbbd'}, 'daccbcbbddadac': {'a': 'acbbbdacbadaaa', 'b': 'daccbcbbddadacb', 'c': 'daadaaaaac', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbdacbbb': {'a': 'daaccbba', 'b': 'daaccbbdacbbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daacccbcbbbbdbd': {'a': 'acbbbdacbadaccbbbbbbdbbbddacda', 'b': 'ccbd', 'c': 'daaccbbdacbbbbbbbcbbbdabdc', 'd': 'acbbbbdbddd'}, 'daccbccbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbcddadacbd'}, 'daadaaaca': {'a': 'ddaca', 'b': 'ddacab', 'c': 'daacbbadadadaacac', 'd': 'ccbd'}, 'daccbcbbbd': {'a': 'acbbbda', 'b': 'acbbbdb', 'c': 'daacbbc', 'd': 'daaccbcdaccbdd'}, 'daaccbbddaacbbbdbbbbb': {'a': 'daaccbbdacbcbbbbcba', 'b': 'acbbbdacbadaccbbbbbbcbbb', 'c': 'ddaaacabbbcc', 'd': 'daaccbbddaacbbbdbbbbbd'}, 'daacccbcbbbda': {'a': 'daaccbbddaa', 'b': 'daab', 'c': 'daacccbcbbbdac', 'd': 'daaccbbddaacd'}, 'daccbcbbdda': {'a': 'daaccbbddaa', 'b': 'acbbbdddab', 'c': 'daacccbddac', 'd': 'daccbcbbddad'}, 'daaccbbdddcdc': {'a': 'cc', 'b': 'ccb', 'c': 'acbbbbdbddcac', 'd': 'ccb'}, 'acbbbdacbadaccbbbbbbcbbbbd': {'a': 'daaccbbdacbbbbbbbcbbda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'acbbbdacbadaccbbbbbbcbbbbdd'}, 'acbbbdacbadaccbbbbbbdbbbdad': {'a': 'acbbbdacbadaccbbbbbbdbbbdada', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daacbbad'}, 'daacccbcbdddb': {'a': 'daaccbcdaccbbacd', 'b': 'daacbbbaacab', 'c': 'acbbbbdbdc', 'd': 'acbbbdacbadaccbbbbbbddcd'}, 'daaccbbddaacbbbbac': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdacbadaccbbbbbbdbbbddacb', 'c': 'daccbccc', 'd': 'daaccbbddaacbbbbacd'}, 'daaccbbddaacaadad': {'a': 'daaccbbddaacaadada', 'b': 'ccb', 'c': 'cc', 'd': 'dacbad'}, 'daaccba': {'a': 'daacbbadadadaaaacccbaa', 'b': 'daacbbc', 'c': 'daaccbac', 'd': 'daaccbbaad'}, 'acbbbdacba': {'a': 'acbbbdacbaa', 'b': 'acbbbdc', 'c': 'daaccbac', 'd': 'acbbbdacbad'}, 'dddaaddacbb': {'a': 'daacccbcbbbdddcaca', 'b': 'dddaaddacbbb', 'c': 'ccb', 'd': 'daacbcbd'}, 'daacbbadadadaac': {'a': 'daacbbadadadaaca', 'b': 'daacbbadadadaacb', 'c': 'daacbbadadadaacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdd': {'a': 'daaccbbdacbbbbda', 'b': 'acbbbdacbadaccbbbbbbddb', 'c': 'acbbbdacbadaccbbbbbbddc', 'd': 'acbbbdacbadaccbbbbbbddd'}, 'acbbbdacbadaccbbb': {'a': 'daaccbbdacbcbbba', 'b': 'acbbbdacbadaccbbbb', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbd'}, 'daaccbbddaacaada': {'a': 'acbbbdacbadaa', 'b': 'daaccbcddadc', 'c': 'daaccbbddaacaadac', 'd': 'daaccbbddaacaadad'}, 'aaacbbbd': {'a': 'daacbbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daacbbc', 'd': 'acbbbdacbadaccbbbdd'}, 'daaccbbddaaccbbdb': {'a': 'ddacba', 'b': 'daaccbbdacbcbbbbcb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbddaacbbbdbd'}, 'acbbbdacbadaccbbbbbbdbbbddabdaac': {'a': 'acbbbdacbadaccbbbbbbdbbbddabdaaca', 'b': 'daacbbadadadaaaacccbbdcb', 'c': 'acbbbbdbdaacc', 'd': 'daaccbcdaccbbacd'}, 'daacbbadadadaaaacba': {'a': 'ddaaacaa', 'b': 'daacbbc', 'c': 'acbbbbdbdaacc', 'd': 'daccd'}, 'daaccbbdacbbbbbbdc': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacabbbb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbbbbbbdcd'}, 'daacbadcc': {'a': 'ccb', 'b': 'daaccbbdccbabb', 'c': 'dcacc', 'd': 'ccb'}, 'ddaaabbbbb': {'a': 'daacccbcbcba', 'b': 'acbbbb', 'c': 'ddaaacabbbc', 'd': 'ddaaabbbbbd'}, 'daaccbbddaacbbbbbdc': {'a': 'dacba', 'b': 'daaccbbddaacbbbbbdcb', 'c': 'ddaaacacbdaabc', 'd': 'daacbbcd'}, 'acbbbdacbadaaddaa': {'a': 'acbbbdacbadaaa', 'b': 'daccbcbbdc', 'c': 'ddac', 'd': 'acbbbdacbadadaad'}, 'daaccbbddaacbc': {'a': 'daaccbbddaacbca', 'b': 'acbbbdacb', 'c': 'dacc', 'd': 'daaccbbddabbd'}, 'dddaacb': {'a': 'daaccbbaa', 'b': 'daaccbbdacbb', 'c': 'daaccbbdacbc', 'd': 'daacccbcbbd'}, 'acbbbdacbadaccbbbbbbcbbbbdd': {'a': 'acbbbdacbadaccbbbbbbcbbbbdda', 'b': 'acbbbdacbadaccbbbbbbcbbbbddb', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbbbbdd'}, 'daaccbbddaacbbbbbaad': {'a': 'acbbbdacbada', 'b': 'ccbd', 'c': 'daaccbcddadc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdad'}, 'daabd': {'a': 'daabda', 'b': 'ccb', 'c': 'dca', 'd': 'daabdd'}, 'daaccbbddaacbbcd': {'a': 'acbbbdacbadaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daaccbbddabbddd'}, 'acbbbdacbadaccbbbbbbdddcdd': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'acbbbdacbadaccbbbbbbddcddd'}, 'acbbbdacbadaccbbbbbbdbbbddacbbb': {'a': 'daaccbbddaacbdadacbcba', 'b': 'acbbbdacbadaccbbbbb', 'c': 'acbbbdacbadaccbbbbc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacbbbd'}, 'daaccbbaaddac': {'a': 'acbbbdacbadaca', 'b': 'daccbcbbdc', 'c': 'daacccbbcc', 'd': 'daaccbbaaddacd'}, 'acbbbdacbadaccbbbbbbdbbbddacdac': {'a': 'daacccbcbbbdddcaca', 'b': 'daacbdaabb', 'c': 'daacbcc', 'd': 'daaccbcdaccbbacd'}, 'daccbcbbddadacb': {'a': 'daaccbbaaaa', 'b': 'dcaccccbccbddadaaadaacbbb', 'c': 'daacccbcbbbdacbc', 'd': 'daacccbcbbd'}, 'acbbbdacbadaccbbbbbbada': {'a': 'daaccbbddaba', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdad'}, 'daaccbbddaaccbbbdc': {'a': 'ddaaacacbdaaba', 'b': 'daaccbbddaaccbbbdabb', 'c': 'daacbcc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaccbbddaacbbbbbdd': {'a': 'daaccbbddaacbbbbbdda', 'b': 'daacccbcbbbbdb', 'c': 'acbbbdacbadaccbbbbdddc', 'd': 'daaccbbddaacbbbbbddd'}, 'daccbcbdd': {'a': 'daccbcbbdda', 'b': 'daccbcbbddadb', 'c': 'acbbbdacbadaccbbbbbbdbbbdddab', 'd': 'daccbcbbdd'}, 'daacbbadadadaaccd': {'a': 'a', 'b': 'ccb', 'c': 'dcac', 'd': 'acbbbdacbadadaadd'}, 'daccbccd': {'a': 'daaccbbdacbcbdba', 'b': 'ccb', 'c': 'cc', 'd': 'acbbbdacbadacdaad'}, 'daaccbbddaacbdd': {'a': 'daacccbdda', 'b': 'acbbbddb', 'c': 'daaccbbddaacbddc', 'd': 'acbbbdacbadaccbbbdd'}, 'acbbbdacbaddac': {'a': 'acbbbdacbadacaaa', 'b': 'acbbbdacbaddacb', 'c': 'acbbbdacbaddacc', 'd': 'acbbbdacbadacd'}, 'daacbbab': {'a': 'daacccbcbbbdddcaca', 'b': 'acbbbdcb', 'c': 'daaccbbdacbcbbbbcbac', 'd': 'daacbdcd'}, 'acbbbbdbda': {'a': 'acbbbbdbdaa', 'b': 'acbbbdacbadab', 'c': 'acbbbdc', 'd': 'daacccbcbbbddbdadd'}, 'daccbcbbddadad': {'a': 'daccbcbbddada', 'b': 'acbbbdacbadadaadd', 'c': 'daacccbcbcba', 'd': 'daaccbbddaacbdad'}, 'acbbbdacbadaccbbbbbbdbbbdddab': {'a': 'daaccbcdaccbbacd', 'b': 'daccccbdb', 'c': 'daaccbcddadc', 'd': 'daaccbcdaccbbacd'}, 'daccbcbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'daacbbc', 'd': 'daccbcbdd'}, 'acbbbdacbadaccbbd': {'a': 'aaacbbda', 'b': 'daaccbbdacbcbdb', 'c': 'daccbcbbdc', 'd': 'daccbcbbddd'}, 'daacbdcddaccd': {'a': 'dddaba', 'b': 'ccb', 'c': 'dca', 'd': 'dacbad'}, 'dcaccccbccbddadaaadacbbbbbb': {'a': 'daaccbbdacbcbbbba', 'b': 'dcaccccbccbddadaaadacbbbbbbb', 'c': 'dcaccccbccbddadaaadacbbbbbbc', 'd': 'acbbbdacbadaccbbbbbd'}, 'daaccbbdacbbbbbbdcda': {'a': 'daaccbbddaba', 'b': 'acbbbdacbadab', 'c': 'daaccbbdacbbbbbbdcdac', 'd': 'acbbbdacbadaccbbbbbbdbbbddacdad'}, 'daaccbbdc': {'a': 'daaccbbddaacbbca', 'b': 'acbbbbdab', 'c': 'daaccbbdcc', 'd': 'daaccbbddaaccbbbdabd'}, 'daaca': {'a': 'aaaa', 'b': 'acbbbdc', 'c': 'aac', 'd': 'dacbad'}, 'acbbbdcd': {'a': 'daacbbbabda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbabdd'}, 'daaccbba': {'a': 'daaccbbaa', 'b': 'daacbbc', 'c': 'daaccbac', 'd': 'daaccbbddaaccbbbdabd'}, 'daccbcbb': {'a': 'dacba', 'b': 'daccbcbbb', 'c': 'daccbcbbc', 'd': 'daccbcbbd'}, 'daaccbbdd': {'a': 'daaccbbdda', 'b': 'daaccbbddb', 'c': 'daaccba', 'd': 'daaccbbddd'}, 'dcaccccbccbddadaacbc': {'a': 'daaccbbdacaca', 'b': 'acbbbdacbaddaccb', 'c': 'daacbbadadadaaaacbcc', 'd': 'daaccbbddaaccbbbdabd'}, 'daccbcbbdcd': {'a': 'daccbcbbdcda', 'b': 'ccb', 'c': 'daacbadc', 'd': 'daccccdddd'}, 'daaccbbdddcc': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdddccb', 'c': 'ddaaacacbdaabc', 'd': 'ddaaacacbdaabaad'}, 'daacccbcbcbd': {'a': 'acbbbda', 'b': 'acbbbdacbadab', 'c': 'daacbbc', 'd': 'daacccbcbcbdd'}, 'dacbad': {'a': 'dddaba', 'b': 'ccb', 'c': 'ccb', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbcbbbda': {'a': 'daacbbadadaa', 'b': 'daaccbbdacbbbbbbbcbbdab', 'c': 'acbbbdacbadaccbbbbbbdbbbddac', 'd': 'daaccbbddaacbbbdbd'}, 'daabda': {'a': 'dcaccccbccbddadaaadaacbbaaa', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbbac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbdbbbddabda': {'a': 'acbbbdacbadaccbbbbbbdbbbddabdaa', 'b': 'daacbbbaacab', 'c': 'acbbbdc', 'd': 'ddaaacacbdaabaad'}, 'daacbcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbcbb', 'c': 'acbbbdc', 'd': 'daacbcbd'}, 'daaccbbdacbcbbbbcdd': {'a': 'daacccbcbbbddbdada', 'b': 'ccbd', 'c': 'acbbbbdbddc', 'd': 'daaccbbdacbcbbbbcddd'}, 'aaacbbd': {'a': 'aaacbbda', 'b': 'acbbbdacbadaccbbbdb', 'c': 'daacbbc', 'd': 'daacccbdd'}, 'dddaaddacbdd': {'a': 'dcaccccbccbdda', 'b': 'ccb', 'c': 'daacccbcbbbdddcaca', 'd': 'acbbbbdad'}, 'daaccbbddaacbbbdbbbd': {'a': 'daaccbbddaacbbbdbbda', 'b': 'acbbbdacbadadaadd', 'c': 'daaccbbddaacbbbdbbdc', 'd': 'acbbbdacbadaccbbbbbbcbdd'}, 'daacbbadadadaaaacda': {'a': 'acbbbdacbadaaddaa', 'b': 'acbbbdacbadadaadd', 'c': 'dac', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadacccb': {'a': 'daaccbaccba', 'b': 'acbbbdacbadacccbb', 'c': 'daccbc', 'd': 'daacbbadadacbbbd'}, 'daaccbbddaacbdadac': {'a': 'daaccbbddaacbdadaca', 'b': 'daaccbbddaacbdadacb', 'c': 'daacbbadadadaaaacc', 'd': 'daaccbbddaaccbbbdabd'}, 'ddaabda': {'a': 'daacbbadadaa', 'b': 'daadaaccd', 'c': 'acbbbbdbdaac', 'd': 'daad'}, 'dcaccccbccbddadaaadaaaabbb': {'a': 'acbbbdacbadacaaa', 'b': 'dcaccccbccbddadaaadaaaabbbb', 'c': 'c', 'd': 'daacbbadadacbbbd'}, 'daaccbbddaaccbbc': {'a': 'daaccbbddaacbbca', 'b': 'daaccbbddaaccbbcb', 'c': 'daacbbadadadaaaacbcc', 'd': 'daaccbbddaacbbcd'}, 'acbbbdacbadaccbbbbbbbd': {'a': 'acbbbdacbadaccbbbbbbda', 'b': 'acbbbdacbadaccbbbbbbdb', 'c': 'acbbbdacbadaccbbbbbbbdc', 'd': 'daaccbbdacbbbbbbdd'}, 'daaccbbddaacbdadaca': {'a': 'acbbbdacbaaa', 'b': 'daacbbc', 'c': 'daaccbbdacac', 'd': 'daaccbbaad'}, 'daacccbcbc': {'a': 'daacccbcbbbdddcaca', 'b': 'daacccbcbcb', 'c': 'ddaaacacbdaabcc', 'd': 'daacbcd'}, 'daacccbcbbbbbba': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'acbbbdacbadab', 'c': 'ddaaacacbdaabc', 'd': 'acbbbdacbadaccbbbbbbad'}, 'acbbbdacbadaccbbbbbbddb': {'a': 'daacccbcbbbdddcaca', 'b': 'daaccbbdccbab', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbddbd'}, 'daaccbbdacbbbbbbdbddac': {'a': 'acbbbdacbadacaaa', 'b': 'ddaaabbb', 'c': 'daaccbac', 'd': 'dacba'}, 'daacccbcbd': {'a': 'aaacbbda', 'b': 'daacccbcbbdb', 'c': 'daaccba', 'd': 'daacccbcbdd'}, 'daaccbcdaccbbacb': {'a': 'daccbcba', 'b': 'daaccbcdaccbbacbb', 'c': 'acbbbdc', 'd': 'acbbbbdbdaacbd'}, 'ddaaacabb': {'a': 'daacccbcbbbdddcaca', 'b': 'ddaaacabbb', 'c': 'dcaccccbcc', 'd': 'ddaaacabbd'}, 'daacbbadadadaccbb': {'a': 'dacba', 'b': 'daacbbadadadaccbbb', 'c': 'acbbbdc', 'd': 'ddaaacacbcbd'}, 'aaaa': {'a': 'aaaa', 'b': 'acbbbdc', 'c': 'acbbbbdbdaacc', 'd': 'acbbbdacbadadaadd'}, 'acbbbdacbadaccbbbbbbcbbd': {'a': 'daaccbbdacbbbbbbdbdda', 'b': 'acbbbdacbadadaadd', 'c': 'acbbbdacbadaccbbbbbbdbbbddc', 'd': 'daaccbbdacbbbbbbddcbbdd'}, 'daaccbcddac': {'a': 'ddaaacacbdaabaa', 'b': 'acbbbdacb', 'c': 'daaccbcddacc', 'd': 'daacbbbad'}, 'dcaccccbccbddadaaadaacbbbbdbdc': {'a': 'daacbbdbdadc', 'b': 'daaccbbdacbbbbbbdbddcb', 'c': 'daacccbcbbbdddcdcc', 'd': 'acbbbdacbadadaadd'}, 'dddaaccb': {'a': 'daacbbadadadaaaacba', 'b': 'dddaaccbb', 'c': 'acbbbdacbaaac', 'd': 'daacccbd'}, 'daacbbadadadaaaacccbbdcb': {'a': 'acbbbdacbadaccbbbbbbdbbbddaca', 'b': 'daacbbadadadaaaacccbbdcbb', 'c': 'ddaaacacbdaabc', 'd': 'daccbccbd'}, 'daacbbbabddddacda': {'a': 'daacbbbabddddacdaa', 'b': 'ccb', 'c': 'daacbbbabddddacdac', 'd': 'acbbbdacbadadaadd'}, 'daaccbbdacbbbbbbdcdaccb': {'a': 'acbbbdacbadacdaab', 'b': 'daaccbbdacbbbbbbdcdaccbb', 'c': 'acbbbdc', 'd': 'ddaaacabbd'}, 'dcaccccbccb': {'a': 'cc', 'b': 'ddaaacabbbcb', 'c': 'cc', 'd': 'dcaccccbccbd'}, 'dddaab': {'a': 'dddaaba', 'b': 'daacbbadadacb', 'c': 'ddaaacacbdaabc', 'd': 'daaccbbdacbbbbbbdbddad'}, 'daaccbbdacbbbbbbbcbbbbdbb': {'a': 'daaccbbdacbbbbbbbca', 'b': 'daaccbbdacbbbbbbbcbbbbdbbb', 'c': 'ccb', 'd': 'acbbbdacbadaccbbbbbbddb'}, 'dacbdd': {'a': 'aaacbbda', 'b': 'daccbcbbddadb', 'c': 'acbbbdc', 'd': 'daacbdd'}, 'daaccbbdacbbbbdd': {'a': 'acbbbddda', 'b': 'daaccbbdacbbbbddb', 'c': 'daaccbbddaacbdb', 'd': 'acbbbdacbadaccbbbbddd'}}
Explanation matches RNN: 85.51
RNN matches ground truth: 100.0
Explanation matches ground truth: 85.51
Lstar matches RNN: 99.97
Lstar matches ground truth: 99.97
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ (b | (G (b | (F (a | c))))))  False          100.0      100.0              85.51                              85.51        401.04027   5.236761e+26         2.643388  [a, , aaccbd, c, b, ba, dc, bd, da, ab, adc, a...          0         0         6         1277                    99.97                                    99.97             555.679232        False      0.1   0.01
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12025213241577148  s
No positive counterexample found
EQ test took  0.020833492279052734  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11780977249145508  s
EQ test took  0.0015931129455566406  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1727581024169922  s
No positive counterexample found
EQ test took  0.09808588027954102  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.34662914276123047  s
EQ test took  0.0701899528503418  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((x0 | x2) -> (X x2))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X c))
Learning took:  0.7412524223327637  s
EQ test took  0.12297964096069336  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (! (x1 | (x2 | (G x0))))
Learning formula with depth 4
learned LTL formula: (~ (b | (c | (G a))))
Learning took:  3.1129424571990967  s
No positive counterexample found
EQ test took  0.23113203048706055  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b', 'ac']



5  iteration complete



start formula depth: 7
Before normalization: (! (x1 | (G (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (b | (G (a | c))))
Learning took:  1.968472957611084  s
No positive counterexample found
EQ test took  0.13712596893310547  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((x0 | ((F x1) | x2)) -> (x0 & ((F x1) | x2)))
Learning formula with depth 4
learned LTL formula: ((a | (c | (F b))) -> (a & (c | (F b))))
Learning took:  10.741770505905151  s
No positive counterexample found
EQ test took  0.2819817066192627  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab']



7  iteration complete



start formula depth: 8
Before normalization: (F (! (x0 | (F (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (F (~ (a | (F (b | c)))))
Learning took:  4.707169055938721  s
No positive counterexample found
EQ test took  0.07838726043701172  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd']



8  iteration complete



start formula depth: 8
Before normalization: ((F x1) U (! ((x2 | (F x1)) | x0)))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (a | (c | (F b)))))
Learning took:  9.108734607696533  s
No positive counterexample found
EQ test took  0.16789007186889648  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd', 'dc']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((F (x0 | (x1 | x2))) -> (X (X x1)))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X b)))
Learning took:  123.0790696144104  s
EQ test took  0.11390280723571777  s
new counterexample: daccbbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'daccbbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd', 'dc']



10  iteration complete



start formula depth: 9
Before normalization: ((F ((x2 | x1) | x0)) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X (b | c))))
Learning took:  11.263497829437256  s
EQ test took  0.2666659355163574  s
new counterexample: cdb  should be rejected by implementation


positive traces---> 
['', 'acbd', 'daccbbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd', 'dc', 'cdb']



11  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! ((F (x2 | x1)) | x0)))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (a | (F (b | c)))))
Learning took:  39.157007694244385  s
No positive counterexample found
EQ test took  0.22647857666015625  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd', 'daccbbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd', 'dc', 'cdb', 'da']



12  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! (x1 | (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (b | (a | c)))))
Learning took:  80.00241923332214  s
No positive counterexample found
EQ test took  0.2563481330871582  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'daccbbd']


negative traces---> 
['a', 'c', 'b', 'ac', 'db', 'ab', 'cd', 'dc', 'cdb', 'da', 'bd']



13  iteration complete





epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((F b) U (G (~ (b | (a | c)))))
incomplete formula
Number of samples: 241
Number of counterexamples returned: 232
4142929874420988.0 4.301418302730723

Time taken to extract ltl: 401.1159701347351
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.10045146942138672
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 95.27
RNN matches ground truth: 100.0
Explanation matches ground truth: 95.27
Lstar matches RNN: 57.97
Lstar matches ground truth: 57.97
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F b) U (G (~ (b | (a | c)))))  False          100.0      100.0              95.27                              95.27        401.11597   4.142930e+15         4.301418  [a, , c, acbd, b, ac, db, ab, cd, dc, daccbbd,...          0         0         5            2                    57.97                                    57.97               0.100451         True     0.05    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12587571144104004  s
No positive counterexample found
EQ test took  0.016025304794311523  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11120915412902832  s
EQ test took  0.0015854835510253906  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18829059600830078  s
No positive counterexample found
EQ test took  0.11218929290771484  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.347217321395874  s
No positive counterexample found
EQ test took  0.1846294403076172  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0528128147125244  s
No positive counterexample found
EQ test took  0.30257630348205566  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x1 | (F x2)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.8908591270446777  s
EQ test took  0.10611772537231445  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((((F x2) | x0) | x1) -> (x0 & (F x2)))
Learning formula with depth 4
learned LTL formula: ((b | (a | (F c))) -> (a & (F c)))
Learning took:  9.360015869140625  s
EQ test took  0.3256683349609375  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da']



6  iteration complete



start formula depth: 8
Before normalization: (G ((x2 | (x1 | x0)) U (! (x2 | (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: (G ((c | (a | b)) U (~ (c | (a | b)))))
Learning took:  7.035732984542847  s
No positive counterexample found
EQ test took  0.07840371131896973  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd']



7  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((F ((x2 | x1) | x0)) -> ((F ((x2 | x1) | x0)) U (X x1)))
Learning formula with depth 5
learned LTL formula: ((F (a | (b | c))) -> ((F (a | (b | c))) U (X b)))
Learning took:  87.5386381149292  s
No positive counterexample found
EQ test took  0.08482503890991211  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db']



8  iteration complete



start formula depth: 9
Before normalization: (G ((F x1) U (! ((x0 | (F x1)) | x2))))
Learning formula with depth 6
learned LTL formula: (G ((F b) U (~ (c | (a | (F b))))))
Learning took:  7.572917938232422  s
No positive counterexample found
EQ test took  0.23846125602722168  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd']



9  iteration complete



start formula depth: 9
Before normalization: (((F (x0 | x1)) -> (F x2)) & ((F x2) -> (x0 | x1)))
Learning formula with depth 4
learned LTL formula: (((F c) -> (a | b)) & ((F (a | b)) -> (F c)))
Learning took:  13.538691520690918  s
No positive counterexample found
EQ test took  0.35041189193725586  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd', 'ac']



10  iteration complete



start formula depth: 9
Before normalization: ((F ((x1 | x0) | x2)) -> (X (X x1)))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (X (X b)))
Learning took:  17.617485523223877  s
EQ test took  0.3288559913635254  s
new counterexample: aacccccbcbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacccccbcbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd', 'ac']



11  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | ((F x1) | x2))) -> (x0 & (F x1)))
Learning formula with depth 5
learned LTL formula: ((F (a | (c | (F b)))) -> (a & (F b)))
Learning took:  39.38657832145691  s
EQ test took  0.09378504753112793  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacccccbcbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd', 'ac', 'ab']



12  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x0 | x2))) -> (X (X (x1 | (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: ((F (b | (a | c))) -> (X (X (b | (a | c)))))
Learning took:  112.94893312454224  s
No positive counterexample found
EQ test took  0.24030232429504395  s
new counterexample: bda  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacccccbcbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd', 'ac', 'ab', 'bda']



13  iteration complete



start formula depth: 9
Before normalization: ((F ((x2 | x1) | x0)) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X (b | c))))
Learning took:  62.204405069351196  s
EQ test took  0.363253116607666  s
new counterexample: daacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacccccbcbd', 'daacbd']


negative traces---> 
['c', 'a', 'b', 'dc', 'da', 'cd', 'db', 'bd', 'ac', 'ab', 'bda']



14  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((F (a | (b | c))) -> (X (X (b | c))))
incomplete formula
Number of samples: 268
Number of counterexamples returned: 135
2.9663275349501855e+76 1.396462586530642

Time taken to extract ltl: 401.05040764808655
overall guided extraction time took: 0.75
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbd', 0.22000000000002728)
('dcccbd', 0.19000000000005457)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.7562036514282227
number of states of the dfa: 11
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'dcccbd', 'c': 'dcccbd', 'd': ''}, 'dcccbd': {'a': 'dcccbd', 'b': 'dcccbd', 'c': 'dcccbd', 'd': 'dcccbd'}, 'a': {'a': 'a', 'b': 'dcccbd', 'c': 'ac', 'd': 'dcccbd'}, 'ac': {'a': 'dcccbd', 'b': 'acb', 'c': 'ac', 'd': 'dcccbd'}, 'dc': {'a': 'dcccbd', 'b': 'dcccbd', 'c': 'dcccbd', 'd': 'dcccbd'}, 'acb': {'a': 'dcccbd', 'b': 'acb', 'c': 'dcccbd', 'd': ''}, 'dccc': {'a': 'dcccbd', 'b': 'dcccbd', 'c': 'dcccbd', 'd': 'dcccbd'}, 'dcccb': {'a': 'dcccbd', 'b': 'dcccbd', 'c': 'dcccbd', 'd': 'dcccbd'}, 'd': {'a': 'a', 'b': 'dcccbd', 'c': 'dcccbd', 'd': ''}, 'acbd': {'a': 'a', 'b': 'dcccbd', 'c': 'dcccbd', 'd': ''}, 'dcc': {'a': 'dcccbd', 'b': 'dcccbd', 'c': 'dcccbd', 'd': 'dcccbd'}}
Explanation matches RNN: 33.09
RNN matches ground truth: 100.0
Explanation matches ground truth: 33.09
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query                             explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (a | (b | c))) -> (X (X (b | c))))  False          100.0      100.0              33.09                              33.09       401.050408   2.966328e+76         1.396463  [c, , a, b, dc, acbd, da, cd, db, bd, ac, aacc...          0         0         4           11                    100.0                                    100.0               0.756204         True     0.05   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1294722557067871  s
No positive counterexample found
EQ test took  0.027338504791259766  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1225132942199707  s
EQ test took  0.0015704631805419922  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1857776641845703  s
No positive counterexample found
EQ test took  0.1095273494720459  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3592863082885742  s
No positive counterexample found
EQ test took  0.2194521427154541  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.104912281036377  s
EQ test took  0.05173969268798828  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((x2 | (x0 | x1)) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((c | (a | b)) -> (X c))
Learning took:  2.5602424144744873  s
EQ test took  0.11479473114013672  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac']



5  iteration complete



start formula depth: 7
Before normalization: (! (G (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (G (c | (a | b))))
Learning took:  1.8458244800567627  s
No positive counterexample found
EQ test took  0.07750940322875977  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (x2 | (G ((x0 | x1) | x2))))
Learning formula with depth 5
learned LTL formula: (~ (c | (G (c | (a | b)))))
Learning took:  11.500616788864136  s
No positive counterexample found
EQ test took  0.2186894416809082  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc']



7  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((x1 | (F (x2 | x0))) -> (F (X x1)))
Learning formula with depth 4
learned LTL formula: ((b | (F (a | c))) -> (F (X b)))
Learning took:  116.17152762413025  s
No positive counterexample found
EQ test took  0.09789776802062988  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb']



8  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! ((x0 | x1) | (F x2))))
Learning formula with depth 4
learned LTL formula: ((F b) U (~ ((a | b) | (F c))))
Learning took:  6.986249685287476  s
No positive counterexample found
EQ test took  0.14609026908874512  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db']



9  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! ((x0 | x2) | x1))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (b | (a | c)))))
Learning took:  5.556406497955322  s
No positive counterexample found
EQ test took  0.2719564437866211  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd']



10  iteration complete



start formula depth: 9
Before normalization: (((F (x1 | x2)) | x0) -> (X (X x1)))
Learning formula with depth 4
learned LTL formula: ((a | (F (b | c))) -> (X (X b)))
Learning took:  8.399957180023193  s
EQ test took  0.09744787216186523  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd']



11  iteration complete



start formula depth: 9
Before normalization: ((F ((x1 | x0) | x2)) -> ((F x1) & x0))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (a & (F b)))
Learning took:  20.21918821334839  s
EQ test took  0.14671587944030762  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd', 'ab']



12  iteration complete



start formula depth: 9
Before normalization: ((x0 | (F (x1 | x2))) -> (X (X (x1 | x2))))
Learning formula with depth 4
learned LTL formula: ((a | (F (b | c))) -> (X (X (b | c))))
Learning took:  13.016338348388672  s
No positive counterexample found
EQ test took  0.4417455196380615  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd', 'ab', 'da']



13  iteration complete



start formula depth: 9
Before normalization: ((F ((x2 | x1) | x0)) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X (b | c))))
Learning took:  22.281867742538452  s
No positive counterexample found
EQ test took  0.49065494537353516  s
new counterexample: abb  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd', 'ab', 'da', 'abb']



14  iteration complete



start formula depth: 9
Before normalization: (! ((F (G (x0 | (x1 | x2)))) | (x1 | x2)))
Learning formula with depth 6
learned LTL formula: (~ ((b | c) | (F (G (a | (b | c))))))
Learning took:  144.53812265396118  s
EQ test took  0.5187149047851562  s
new counterexample: ddaaaacbbddb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddaaaacbbddb']


negative traces---> 
['b', 'c', 'a', 'ac', 'cd', 'dc', 'cb', 'db', 'bd', 'ab', 'da', 'abb']



15  iteration complete





epsilon= 0.05 delta= 0.01 max_trace_length= 50
query: true
final ltl:  (~ ((b | c) | (F (G (a | (b | c))))))
incomplete formula
Number of samples: 314
Number of counterexamples returned: 154
4.757447456574762e+89 1.3693434671140627

Time taken to extract ltl: 401.0561647415161
overall guided extraction time took: 272.19000000000005
generated counterexamples were: (format: (counterexample, counterexample generation time))
('accbd', 1.550000000000182)
('ccbd', 1.240000000000009)
('daacbda', 2.0)
('accbddddb', 2.2100000000000364)
('aacbbdb', 1.900000000000091)
('acccbbda', 2.6800000000000637)
('dacbddda', 2.7100000000000364)
('aabbdd', 0.9800000000000182)
('acbbbdda', 2.5499999999999545)
('dddddb', 3.759999999999991)

Time taken to extract lstar-dfa: 272.14632296562195
number of states of the dfa: 947
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'ccb', 'c': 'ccb', 'd': 'd'}, 'dddddadaaabc': {'a': 'daacbdaaabca', 'b': 'daacbbc', 'c': 'daaccbbdabcc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbd': {'a': 'daacbbbbbbda', 'b': 'daacbbbbbbdb', 'c': 'daacbbbbbbdc', 'd': 'daacbbbbbbdd'}, 'dacccbcbbbbd': {'a': 'dacccbcbbbbda', 'b': 'aacbbdb', 'c': 'acccbbc', 'd': 'daacbbbbbdd'}, 'accbdddadadacbda': {'a': 'daaccbcdaccbdaa', 'b': 'daab', 'c': 'daaccbbcbdac', 'd': 'accbdddadadacbdad'}, 'daaccbbdacccbcbddaacda': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daab', 'c': 'daac', 'd': 'daacbbbbbbddcbdadd'}, 'dacccbdda': {'a': 'daaccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbbdac', 'd': 'dacccbddad'}, 'daacbbbbbbdcdaada': {'a': 'daacbbbbbbdcdaadaa', 'b': 'ccb', 'c': 'daacbbbbbbdcdaadac', 'd': 'daacbbbbbbaad'}, 'accbdaa': {'a': 'daaccbbdaada', 'b': 'daccbbdc', 'c': 'daaccbbcbdac', 'd': 'daacbbbbbbddcbdadd'}, 'daacbdaaacccbcd': {'a': 'daacbdaaacccbcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbdaaacccbcdd'}, 'daaccbbd': {'a': 'daaccbbda', 'b': 'daaccbbdb', 'c': 'daaccbbdc', 'd': 'daaccbbdd'}, 'dacccbcdd': {'a': 'dacccbcdda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcdaccbdad'}, 'dacccbbbbba': {'a': 'a', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacccbbbbbad'}, 'daacccbb': {'a': 'daaccbcddaacbba', 'b': 'daacccbbb', 'c': 'daacccbbc', 'd': 'daaccbbd'}, 'daaccbbdaccc': {'a': 'daaccbbdaccca', 'b': 'daaccbbdacccb', 'c': 'daaccbbdacccc', 'd': 'daaccbbdacccd'}, 'daaccbcddaaca': {'a': 'daaccbcddaacaa', 'b': 'daaccbcddaacab', 'c': 'daacc', 'd': 'daacbad'}, 'daaccbcdd': {'a': 'daaccbcdda', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daaccbcddd'}, 'daacbbbbbbdd': {'a': 'acbbbdda', 'b': 'daacbbbbbbddb', 'c': 'daacbbbbbbddc', 'd': 'daacbbbbbbddd'}, 'dacccb': {'a': 'daaccbcddaacbca', 'b': 'dacccbb', 'c': 'dacccbc', 'd': 'dacccbd'}, 'daacbbba': {'a': 'daaca', 'b': 'daaccbcdab', 'c': 'daaccbbdabcc', 'd': 'daacbbbad'}, 'daacbbbbbbddcbbdd': {'a': 'daacbbbbbbddcbbdda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbddcbbddd'}, 'dacbdddaabd': {'a': 'dacbdddaabda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbddd'}, 'daacccd': {'a': 'daacbbbbbbdbbddadaca', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daaccd'}, 'daaccbcbbbb': {'a': 'dacccbcbbba', 'b': 'daaccbcbbbbb', 'c': 'daaccbcdab', 'd': 'daaccbcbbbbd'}, 'daacbbbddb': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbddbd'}, 'daaccbbdacccbbbbbaa': {'a': 'daaccbcddaacba', 'b': 'daaccbcdab', 'c': 'daaccbbdacccbbbbbaac', 'd': 'daacbad'}, 'daacbbbbbbbda': {'a': 'daacbbbbbbbdaa', 'b': 'daaccbbcbbdc', 'c': 'daacbbbbbbdac', 'd': 'daacbbbbbbddcbbddd'}, 'daaccbcbbd': {'a': 'daaccbcbbda', 'b': 'daaccbcbbdb', 'c': 'daccbbdc', 'd': 'daaccbcbbdd'}, 'daaccbbdaaabc': {'a': 'daadaacca', 'b': 'aacb', 'c': 'accc', 'd': 'daaccd'}, 'daaccbcbbdb': {'a': 'daaccbcbbdba', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'daaccbcbbdbd'}, 'daacbbbbbbdbbbdda': {'a': 'daacbbbbbbdbbbddaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbcdac', 'd': 'daacbbbbbbdbbbddad'}, 'daacbbbbbbdbbddac': {'a': 'daacbbbbbbdbbddaca', 'b': 'acbbb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdacbdb': {'a': 'daaccbcbbdba', 'b': 'aacbbdbbb', 'c': 'ccb', 'd': 'daacbbbbbbdabd'}, 'daacaaaccbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacaaaccbcb', 'c': 'acc', 'd': 'daaccbbdacccbccd'}, 'daacbbbbbbdacc': {'a': 'daaccbcddaacbca', 'b': 'daacbbbbbbdaccb', 'c': 'daaccc', 'd': 'daaccbbdacccd'}, 'daacbbbbbbdbbbddda': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'daacbbbbbbdbbbdddab', 'c': 'daacbbbbbbdbbbdddac', 'd': 'daacbbbbbbdbbbdddad'}, 'daaccbbdacccbcbddaacbdb': {'a': 'dacccda', 'b': 'daabb', 'c': 'ccb', 'd': 'daaccbcbbdbd'}, 'daacbbbbbbddd': {'a': 'daaccbbda', 'b': 'daacbbbbbbddb', 'c': 'daacbbbbbbddc', 'd': 'daacbbbbbddd'}, 'daacbb': {'a': 'daacbba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daacbbbbbdd': {'a': 'daaccbbda', 'b': 'daacbbbbbbddb', 'c': 'daacbbbbbddc', 'd': 'daacbbbbbddd'}, 'dacccbcbbdadd': {'a': 'dacccbcbbdadda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'acccbbdadd'}, 'accbdd': {'a': 'accbdda', 'b': 'ccb', 'c': 'accbddc', 'd': 'accbddd'}, 'daacbbbbbbdbbddadadaccd': {'a': 'daacbbbbbbaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdbbddadadacb': {'a': 'daaccbcba', 'b': 'daacbbbbbbdbbddadadacbb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbddadadacbd'}, 'daaccbbdaaad': {'a': 'daaccbbdaaada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daacbdaad'}, 'daacaaac': {'a': 'daacbaca', 'b': 'daacaaacb', 'c': 'daacaaacc', 'd': 'ccb'}, 'daaccbbdacccbdc': {'a': 'daaba', 'b': 'daaccbbdacccbdcb', 'c': 'acc', 'd': 'daacbbbbbbdabd'}, 'dacccbbd': {'a': 'acbbbdda', 'b': 'daaccbbdb', 'c': 'dacccbbdc', 'd': 'daaccbbdd'}, 'dacccbbbbb': {'a': 'dacccbbbbba', 'b': 'dacccbbbbbb', 'c': 'daaccbcddcb', 'd': 'dacccbbbbbd'}, 'accbdddad': {'a': 'accbdddada', 'b': 'ccb', 'c': 'daacbbbbbbdca', 'd': 'daacbbbbbbdad'}, 'daaccbab': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daabb', 'c': 'ccb', 'd': 'daacbdcd'}, 'daacbbbbbbdcdaadaaa': {'a': 'daacbbbbbbdbbddadadaa', 'b': 'accbddab', 'c': 'daac', 'd': 'daaccbcdad'}, 'daacbbbad': {'a': 'daacbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddad'}, 'dacccbcbbb': {'a': 'dacccbcbbba', 'b': 'dacccbcbbbb', 'c': 'daaccbcddcb', 'd': 'dacccbcbbbd'}, 'daacbdaad': {'a': 'daacbdaada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdacccbbbbb': {'a': 'daaccbbdacccbbbbba', 'b': 'daaccbbdacccbbbbbb', 'c': 'acccbbc', 'd': 'daaccbbdacccbbbbbd'}, 'daaccbcddaaaaaccac': {'a': 'daaccbbdacccca', 'b': 'daaccbcddaaaaaccacb', 'c': 'daccc', 'd': 'daacbbbbbbdbbbddab'}, 'daccbba': {'a': 'daaccbaa', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daaccd'}, 'dacccbcbbdb': {'a': 'daaccbcbbdba', 'b': 'aacbbdbb', 'c': 'ccb', 'd': 'daaccbcbbdbd'}, 'daacbbbbbdddc': {'a': 'daaccbbdba', 'b': 'daacbbbbbbddcb', 'c': 'accbddc', 'd': 'daacbbbbbbddcd'}, 'dacccbcbbbdb': {'a': 'daaccbcbbdba', 'b': 'aacbbdbbb', 'c': 'ccb', 'd': 'aacbbdbd'}, 'daacbbbbbbdbbddadac': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daacbbbbbbdbbddadacb', 'c': 'daacbbbbbbdbbddadacc', 'd': 'daacbad'}, 'dacccda': {'a': 'daacbbbbbbdbbddadaca', 'b': 'ccb', 'c': 'daaccbbdabc', 'd': 'ccb'}, 'daaccbbcbdaccba': {'a': 'daaca', 'b': 'daaccbcbbdbb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccd'}, 'daaccbbdaccbbbbddd': {'a': 'daaccbbda', 'b': 'daacbbbddb', 'c': 'daaccbbdaccbbbbdddc', 'd': 'daaccbbdaccbbbbddd'}, 'daaccbbdacccbcbddaabac': {'a': 'daacaaa', 'b': 'daaccbbdacccbcbddaabacb', 'c': 'daaccbbdacccbcbddaabacc', 'd': 'daaccd'}, 'daaccbbdaba': {'a': 'daaca', 'b': 'daaccbbdabab', 'c': 'aac', 'd': 'daacbbbbbbaad'}, 'daacbdaaabc': {'a': 'daacbdaaabca', 'b': 'daacbbc', 'c': 'acc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbdbbbddddadda': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbdddadab', 'c': 'dacbdac', 'd': 'daacbdaad'}, 'daaccbbdacccbcbddaacb': {'a': 'daaccbbdacccbcbddaacba', 'b': 'daaccbbdacccbcbddaacbb', 'c': 'daaccbbdacccbcbddaacbc', 'd': 'daaccbbdacccbcbddaacbd'}, 'daacbbbbbbdcdaa': {'a': 'daacbbbbbbdcdaaa', 'b': 'daacbbbbbbdcdaab', 'c': 'daaccbcdac', 'd': 'daacbbbbbbdcdaad'}, 'daaccbbdacccbccbb': {'a': 'daaccbbdacccbccbba', 'b': 'daaccbcddaacbbb', 'c': 'daacbbc', 'd': 'daaccbbdacccbccbbd'}, 'aacbbd': {'a': 'aacbbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacab', 'd': 'aacbbdd'}, 'acccbbda': {'a': 'acccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'acccbbdad'}, 'daacbbbada': {'a': 'daacbbbbbbdcdaadaa', 'b': 'ccb', 'c': 'daaccbcdac', 'd': 'daaccbcdad'}, 'daaccbbdacccbcbddaad': {'a': 'daaccbbdacccbcbddaada', 'b': 'ccb', 'c': 'daaccbbdacccbcbddaadc', 'd': 'daaccbbdaad'}, 'daaccbbdacccbbbbbdb': {'a': 'daaccbcbbdba', 'b': 'daaccbbdacccbbbbbdbb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'daacbbbbbbdcda': {'a': 'daacbbbbbbdcdaa', 'b': 'ccb', 'c': 'daaccbbddcc', 'd': 'daacbbbbbbaad'}, 'accc': {'a': 'aca', 'b': 'acccb', 'c': 'daacbacc', 'd': 'ccb'}, 'daacbbbbdb': {'a': 'daacbbbbbbdca', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'daaccbbdacccbcbddaacbacbda': {'a': 'daacbdaa', 'b': 'daccbbdc', 'c': 'daaccbbcbdac', 'd': 'daaccbbdaad'}, 'dac': {'a': 'daaba', 'b': 'dacb', 'c': 'dacc', 'd': 'daaccbbdadcd'}, 'daaccbbdacccbcbddaab': {'a': 'daaccbbdacccbcbddaaba', 'b': 'daaccbbdacccbcbddaabb', 'c': 'daaccbbdacccbcbddaabc', 'd': 'daaccbbdacccbcbddaabd'}, 'dacccbcbbbba': {'a': 'daacbada', 'b': 'ccb', 'c': 'accbddc', 'd': 'aacbbdbd'}, 'daacbbbbbbdbbbddad': {'a': 'daacbbbbbbdbbbddada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddad'}, 'daadaaaab': {'a': 'daadaaaaba', 'b': 'aabb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbdbbbdddaccbdd': {'a': 'dacccbcbbda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'dacccbddd'}, 'daaa': {'a': 'daaa', 'b': 'daab', 'c': 'daac', 'd': 'daaad'}, 'daacbbbbbbdbbddadad': {'a': 'daacbbbbbbdbbddadada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddadad'}, 'dacccbbbbbdc': {'a': 'daaccbcbbdba', 'b': 'acb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daacbbbbbbdbbd': {'a': 'daacbbbbbbdbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbdd'}, 'daacbbbbddc': {'a': 'dacccda', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbdcd'}, 'daacaaacc': {'a': 'daacbaca', 'b': 'daacaaaccb', 'c': 'aac', 'd': 'ccb'}, 'daacbbbbbbdbbddad': {'a': 'daacbbbbbbdbbddada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddad'}, 'daacbdaaacccbcdd': {'a': 'daacbdaaacccbcdda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbdd'}, 'daacbbbdd': {'a': 'daaccbbda', 'b': 'daacbbbddb', 'c': 'daacbbbddc', 'd': 'daacbbbdd'}, 'dddddad': {'a': 'dddddada', 'b': 'ccb', 'c': 'ccb', 'd': 'dddddadd'}, 'accbdddadadacbdadd': {'a': 'accbdddadadacbdadda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcdaccbdadad'}, 'daacbbbbbbdc': {'a': 'daacbbbbbbdca', 'b': 'acb', 'c': 'accbddc', 'd': 'daacbbbbbbdcd'}, 'dacc': {'a': 'daacbaca', 'b': 'daccb', 'c': 'daccc', 'd': 'daccd'}, 'dacccbcbbbd': {'a': 'accbdda', 'b': 'dacccbcbbbdb', 'c': 'daacbbbbbbdab', 'd': 'dacccbcbbbdd'}, 'dacbdddaada': {'a': 'accbdddada', 'b': 'accbddab', 'c': 'accbdddadadac', 'd': 'accbdddadadd'}, 'daacbbbbbbbc': {'a': 'ccb', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbbbcd'}, 'daaccbbdacccabd': {'a': 'daacbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdabd'}, 'daaccbbdacccbcbddaadada': {'a': 'dacccbcbbdadda', 'b': 'accbddab', 'c': 'accbdddadadac', 'd': 'daaccbbdacccbcbddaadadad'}, 'daabb': {'a': 'daacbbbbbbdca', 'b': 'daabb', 'c': 'ccb', 'd': 'daabbd'}, 'daacbbbbbbbbdbbd': {'a': 'daacbbbbbbbbdbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'daacbbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daaccbcbbdbd'}, 'daacbbbbbbdbbbdddaaddab': {'a': 'daaccbbdadcda', 'b': 'daaccbcdab', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbaad'}, 'daaccbbdacccbcbddada': {'a': 'daaccbbdacccbcbddadaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'dacccbddad'}, 'daacbbbbbbbdbb': {'a': 'ccb', 'b': 'daacbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbdbbd'}, 'dacccbcdda': {'a': 'daacbbbbbbdbbbddaa', 'b': 'daacbbbbbbdcdaab', 'c': 'daacbbbbbbdbbbdddac', 'd': 'daacbdaad'}, 'daaccbbdacccbbbba': {'a': 'daaccbbdaccbbaa', 'b': 'daaccbab', 'c': 'acc', 'd': 'daacbbbbbbdbbddd'}, 'daacbdaabda': {'a': 'daaa', 'b': 'daaccbcdab', 'c': 'daaccbcdac', 'd': 'daaccbcdad'}, 'dacccbbb': {'a': 'daaccbbdacccbcbba', 'b': 'dacccbbbb', 'c': 'daacbbc', 'd': 'daacbbbd'}, 'daaccbbdacccbbcb': {'a': 'daaccbbdba', 'b': 'daaccbbdacccbbcbb', 'c': 'daacbbbbc', 'd': 'dacccbcbbd'}, 'acccbbdaaaabc': {'a': 'daaccbca', 'b': 'acccbbdaaaabcb', 'c': 'ac', 'd': 'daccd'}, 'daacbdaaacccbcdda': {'a': 'dacccbcbbdaa', 'b': 'dacccbcbdc', 'c': 'daaccbbcbdac', 'd': 'daaccbbdaadd'}, 'daaccbbdacccbcbbdb': {'a': 'daaccbbdba', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'daacbbbad'}, 'accbdddadada': {'a': 'accbdddada', 'b': 'daaccd', 'c': 'accbdddadadac', 'd': 'daaad'}, 'daaccbbdacccbcbddadaacb': {'a': 'daaccbbdacccbcbddaacba', 'b': 'daaccbbdacccbcbddadaacbb', 'c': 'daaccbbdacccbcbddadaacbc', 'd': 'daaccbbdacccbd'}, 'daacbbbbbbdbb': {'a': 'ccb', 'b': 'daacbbbbbbdbbb', 'c': 'ccb', 'd': 'daacbbbbbbdbbd'}, 'daacbbbbbbdbbbdddacc': {'a': 'daaccbcddaacbca', 'b': 'daacbbbbbbdbbbdddaccb', 'c': 'dacc', 'd': 'dacccbcbba'}, 'dacbdddaabda': {'a': 'dacbdddaabdaa', 'b': 'daaccbcddaacab', 'c': 'dacbdac', 'd': 'daaccbcdad'}, 'dacccbcbbdaddaa': {'a': 'daaccbbdada', 'b': 'dacccbcbbdaddaab', 'c': 'daaccbbdac', 'd': 'daaccbbdaad'}, 'daacbdaaac': {'a': 'daacbdaaaca', 'b': 'daacbdaaacb', 'c': 'daacbdaaacc', 'd': 'daacbdaaacd'}, 'dacccbddaddc': {'a': 'daaccbcbbdba', 'b': 'daaccbcddcb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daacccbbb': {'a': 'daaccbba', 'b': 'daaccbbdacbbb', 'c': 'daacbbc', 'd': 'daaccbbdaccbbbd'}, 'daaccbbdacccbcbddaacbacb': {'a': 'daaccbcdaacba', 'b': 'dacccbb', 'c': 'daacbc', 'd': 'daaccbbdacccbcbddaacbacbd'}, 'daacbdaadab': {'a': 'daaccbbdadca', 'b': 'daaccbab', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbaad'}, 'dacccbdaba': {'a': 'a', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdacccbbbbbba': {'a': 'a', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbbdacccbbbbbbad'}, 'daaccbbdabcc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbc', 'c': 'acc', 'd': 'ccb'}, 'daaccbbdacccbbbbbb': {'a': 'daaccbbdacccbbbbbba', 'b': 'dacccbbbbbb', 'c': 'daacbbbbbdbb', 'd': 'dacccbbbbbd'}, 'daacbbbbbbdbbddadaca': {'a': 'daaccbaa', 'b': 'daaccbbdabab', 'c': 'ac', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbcbbd': {'a': 'accbdda', 'b': 'aacbbdb', 'c': 'daaccbbcbbdc', 'd': 'daaccbcdaccbdd'}, 'daaccbbdaccca': {'a': 'daacbaca', 'b': 'daaccbbdacccab', 'c': 'accc', 'd': 'ccb'}, 'daaccbbdacccbcbdda': {'a': 'daaccbbdacccbcbddaa', 'b': 'daaccbbdab', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddad'}, 'dacccbcbbdaddaab': {'a': 'daacbbbbbbdcdaaa', 'b': 'dacccbcbbdaddaabb', 'c': 'accbdddadaddaaabc', 'd': 'daaccbbdacccbcbddadaabd'}, 'daaccbcddaaaaaca': {'a': 'daaccbcddaaaaacaa', 'b': 'daaccbcddaaaaacab', 'c': 'daaccbbdacccbcbddaabac', 'd': 'daacbbbbbbdcdaad'}, 'daaccbcdaccbba': {'a': 'daaccbaa', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daacbbbbbbdabd'}, 'daaccbcdad': {'a': 'daaccbcdada', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcdad'}, 'daacbbbbbbdbbddadacc': {'a': 'daacbaca', 'b': 'daacbbbbbbdbbddadaccb', 'c': 'aac', 'd': 'daaccbbdadcd'}, 'daaccbbdacccbbd': {'a': 'daaccbbda', 'b': 'daaccbbdacccbbdb', 'c': 'daaccbbdacccbbdc', 'd': 'daaccbbdaccbbbdd'}, 'daadaacca': {'a': 'daaccbca', 'b': 'ccb', 'c': 'accc', 'd': 'ccb'}, 'daacbbbb': {'a': 'daaccbbdacccd', 'b': 'daacbbbbb', 'c': 'daacbbbbc', 'd': 'daacbbbbd'}, 'daacbbbbbbaadaacb': {'a': 'daaccbcba', 'b': 'daacbbbbbbaadaacbb', 'c': 'accbddc', 'd': 'daacbbbbbbaadaacbd'}, 'daaccbcdaccbdaada': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daaccbbdadc', 'c': 'dacbdac', 'd': 'daacbbbbbbddcbdadd'}, 'dddddadaaa': {'a': 'daaccbcddaaaa', 'b': 'dddddadaaab', 'c': 'daaccbbdac', 'd': 'accbdddadadacbdadad'}, 'daaccbbdadcd': {'a': 'daaccbbdadcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daaccbcddaaaaaccacbb': {'a': 'daccbba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daacbc': {'a': 'daacbaca', 'b': 'daaccbbcb', 'c': 'acc', 'd': 'dacccbcd'}, 'daaccbcdaa': {'a': 'daaa', 'b': 'daaccbcdaab', 'c': 'daaccbcdaac', 'd': 'daaccbcdad'}, 'daacbbbbbbddcd': {'a': 'daacbbbbbbddcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbdcd'}, 'daaccbcbbb': {'a': 'daaccbbdacccd', 'b': 'daaccbcbbbb', 'c': 'daacbbbbc', 'd': 'daaccbcbbbd'}, 'daadaaccbc': {'a': 'daacbaca', 'b': 'daaccbcddaacbcb', 'c': 'daaccbbcbdaccbac', 'd': 'daacbbbad'}, 'aa': {'a': 'daaca', 'b': 'aab', 'c': 'aac', 'd': 'ccb'}, 'acbbbdd': {'a': 'acbbbdda', 'b': 'accbddddb', 'c': 'acbbbddc', 'd': 'aacbbdd'}, 'daacbbbbbbaadaac': {'a': 'daaba', 'b': 'daacbbbbbbaadaacb', 'c': 'aac', 'd': 'daacbbbbbbaad'}, 'aacbbda': {'a': 'daacbdaa', 'b': 'daaccbbdacab', 'c': 'daaccbbcbdac', 'd': 'dacccbddadd'}, 'accbbd': {'a': 'daaccbcdaccbda', 'b': 'aacbbdb', 'c': 'daaccbbcbbdc', 'd': 'aacbbdd'}, 'daaccbbdaccbbbbbdc': {'a': 'daaccbcbbdba', 'b': 'acb', 'c': 'accbddc', 'd': 'daaccbbdacccbbbbbdcd'}, 'aab': {'a': 'ccb', 'b': 'aabb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddab'}, 'daacbdaaacccac': {'a': 'aca', 'b': 'acccb', 'c': 'daacaaacc', 'd': 'ccb'}, 'daacbbbbdd': {'a': 'daaccbbda', 'b': 'daacbbbbbbddb', 'c': 'daacbbbbddc', 'd': 'daacbbbbdd'}, 'daadaa': {'a': 'daadaaa', 'b': 'ccb', 'c': 'daadaac', 'd': 'ccb'}, 'daacbbbbbbbbdac': {'a': 'daaccbaa', 'b': 'daaccbcdaacbb', 'c': 'daaccc', 'd': 'daabbd'}, 'daaccbcdaccbbbbbd': {'a': 'daacbbbbbbda', 'b': 'daacbbbbbbdb', 'c': 'acccbbc', 'd': 'daaccbcdaccbbbbbdd'}, 'daacbbbbbbdbbddadaccb': {'a': 'daaccbcba', 'b': 'daaccbbdacccbbcbb', 'c': 'acccbbc', 'd': 'daaccbcdd'}, 'daaccbcddaaaaacaaba': {'a': 'daacbdaaacabaa', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'accbddda': {'a': 'dacbdddaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'accbdddad'}, 'daaccbbdaccbbbbbaa': {'a': 'daaccbcddaacba', 'b': 'daaccbcdab', 'c': 'daaccbbcbdaccbac', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdbbbddada': {'a': 'daacbbbbbbdbbbddaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'daacbdaadac', 'd': 'daacbbbbbbddcbdadd'}, 'dacccbb': {'a': 'dacccbba', 'b': 'dacccbbb', 'c': 'daacbbc', 'd': 'dacccbbd'}, 'daaccbbdabab': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbcdab', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdacccbcbddadaacbb': {'a': 'daaccbbdaccbba', 'b': 'daacccbbb', 'c': 'daaccbbdacccbcbddadaacbbc', 'd': 'daaccbbd'}, 'daaccbcddcbbbbdac': {'a': 'daacbbbbbbdbbddaca', 'b': 'daaccbcddcbbbbdacb', 'c': 'daaccbbdabcc', 'd': 'daaccd'}, 'daadaaacbc': {'a': 'daacbaca', 'b': 'daaccbbcb', 'c': 'acc', 'd': 'daacbbbbbbdabd'}, 'daacbbbbbbddcbbda': {'a': 'dacbda', 'b': 'daaccbbdabab', 'c': 'daacbbbbbbddcbdac', 'd': 'daacbbbbbbdbbbddad'}, 'daacbbbbbbbbda': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'daaccbbcbbdc', 'c': 'daacbbbbbbbbdac', 'd': 'daacbbbbbbbbdad'}, 'dacccbdd': {'a': 'dacccbdda', 'b': 'ccb', 'c': 'daaccbbdadc', 'd': 'dacccbddd'}, 'daaccbbdacccbcbddaabd': {'a': 'dacccbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbd'}, 'daaccbbcbb': {'a': 'daaccbbdba', 'b': 'acbbb', 'c': 'daaccbcdab', 'd': 'daaccbbcbbd'}, 'daaccbcdaccbbbb': {'a': 'daaccbbdacccd', 'b': 'daaccbcdaccbbbbb', 'c': 'daacbbbbc', 'd': 'daaccbcdaccbbbbd'}, 'daacbbbbbbddcbdadac': {'a': 'aa', 'b': 'aacb', 'c': 'daaccc', 'd': 'daaccd'}, 'daaccbbdacccba': {'a': 'daaccbaa', 'b': 'acccbbc', 'c': 'daacbac', 'd': 'daaccd'}, 'daaccbcddcbbbdac': {'a': 'daacbbbbbbdbbddaca', 'b': 'daacbbbbbbdbbddadacb', 'c': 'daaccbcddcbbbdacc', 'd': 'daaccd'}, 'dacccbcbb': {'a': 'dacccbcbba', 'b': 'dacccbcbbb', 'c': 'daacbbbbc', 'd': 'dacccbcbbd'}, 'daaccbbdaccbbbd': {'a': 'daaccbbda', 'b': 'daaccbbdaccbbbdb', 'c': 'daaccbbdaccbbbdc', 'd': 'daaccbbdaccbbbdd'}, 'daaccbbdabc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbc', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcdab': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbab', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daaccbbdaca': {'a': 'daaccbcddaaca', 'b': 'daaccbbdacab', 'c': 'daacc', 'd': 'daacbbbbbbdcdaad'}, 'daaccbbdacccbd': {'a': 'daccbbda', 'b': 'daaccbbdacccbdb', 'c': 'daaccbbdacccbdc', 'd': 'daaccbbdacccbdd'}, 'daaccbcdaccbda': {'a': 'daaccbcdaccbdaa', 'b': 'daaccbbdacab', 'c': 'daaccbbcbdac', 'd': 'daaccbcdaccbdad'}, 'dacccbcdaca': {'a': 'dacccbcdacaa', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'daaccbcdac': {'a': 'daaba', 'b': 'aacb', 'c': 'daaccbcdacc', 'd': 'daaccd'}, 'daaccbbdacccbcbddadaadda': {'a': 'dacccbcbbdadda', 'b': 'daaccbcdaccbdadab', 'c': 'accbdddadadac', 'd': 'daaccbbdacccbcbddaadadad'}, 'daacbdaaaaaaa': {'a': 'daaa', 'b': 'daacbdaaaaaaab', 'c': 'daac', 'd': 'daaccbcdad'}, 'a': {'a': 'aa', 'b': 'ccb', 'c': 'ac', 'd': 'ccb'}, 'daacbad': {'a': 'daacbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daacbdaaa': {'a': 'daacbdaaaa', 'b': 'daacbdaaab', 'c': 'daacbdaaac', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdab': {'a': 'daaccbbdaba', 'b': 'daaccbbdacccbdcb', 'c': 'daaccbbdabc', 'd': 'daacbbbad'}, 'daacbbbbbbdca': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbdaaaac': {'a': 'daacbdaaaca', 'b': 'daacbdaaacb', 'c': 'daacbdaaacc', 'd': 'daacbdaaaacd'}, 'daadaaacbd': {'a': 'daadaaacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'accbdd'}, 'daacbbbbbbdac': {'a': 'daaca', 'b': 'daacbbbbbbdacb', 'c': 'daacbbbbbbdacc', 'd': 'daabbd'}, 'daacbbbddbdd': {'a': 'daacbbbbbbdcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbddbdd'}, 'daaccbbdacccbcbddaacbdabba': {'a': 'daaccbbdacccbcbddaababa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbdbbddaca': {'a': 'daacbbbbbbdbbddaca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbddcbbddd': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbddcbbdddd'}, 'daaccbbdacccbcbddaacd': {'a': 'daaccbbdacccbcbddaacda', 'b': 'ccb', 'c': 'daaccbbdacccbcbddaacdc', 'd': 'daaccbbdacccbcbddaacdd'}, 'accbdddadaddaaab': {'a': 'daaccbcddaacba', 'b': 'daaccbcddcbbbbdacb', 'c': 'accbdddadaddaaabc', 'd': 'daacbdaaacd'}, 'daaccbbdaccbbbbb': {'a': 'daaccbbdaccbbbbba', 'b': 'daaccbbdacccbbbbbb', 'c': 'acccbbc', 'd': 'daaccbbdaccbbbbbd'}, 'daacbdaaabb': {'a': 'daaba', 'b': 'acbbb', 'c': 'accbddc', 'd': 'dacbd'}, 'daaccbbdaaada': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'dacccbcbdc', 'c': 'dacbdac', 'd': 'daacbbbbbbddcbdadd'}, 'daacbdaaacccbdd': {'a': 'daaccbbda', 'b': 'accbddddb', 'c': 'daaccbbdacccbcbddc', 'd': 'daccbbdd'}, 'daaccbbdacccbcbddaabacbb': {'a': 'daaccbcdaacbba', 'b': 'daaccbbdacccbcbddaabacbbb', 'c': 'daacbbc', 'd': 'daacbbbd'}, 'daaccbcddaaab': {'a': 'daaca', 'b': 'daaccbcddcbbbbdacb', 'c': 'daaccbbdabc', 'd': 'daaccbcd'}, 'daaccbbdacccbcbddadaad': {'a': 'dacccbcbbdadda', 'b': 'ccb', 'c': 'daaccbbdadc', 'd': 'daaccbbdacccbcbddadaadd'}, 'daadaacc': {'a': 'daadaacca', 'b': 'daadaaccb', 'c': 'daaccc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdacccbcbddaacbacbd': {'a': 'daaccbbdacccbcbddaacbacbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacbdc', 'd': 'dacccbddd'}, 'daaccbbdacccbcbddadaab': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbbdacccbcbddadaabb', 'c': 'daaccbcddaacbdc', 'd': 'daaccbbdacccbcbddadaabd'}, 'daacbbbbbbdbbbdddaadda': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daacbbbbbbdbbbdddaaddab', 'c': 'dacbdac', 'd': 'daacbbbbbbddcbdadd'}, 'daadaac': {'a': 'daadaaca', 'b': 'dacb', 'c': 'daadaacc', 'd': 'ccb'}, 'daaccbcddcbbbbd': {'a': 'daaccbcddcbbbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcddcbbbbdd'}, 'ccb': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccb'}, 'daaccbbcbdacbb': {'a': 'daaccbba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'daacbbbbbbdbbbdddd': {'a': 'daacbbbbbbdbbbdddda', 'b': 'accbddddb', 'c': 'daaccbcddc', 'd': 'daacbbbbbbdbbbddddd'}, 'daaccbbdacccbcbddadaacbcc': {'a': 'daccca', 'b': 'daaccbbdacccbccb', 'c': 'daaccbcdacc', 'd': 'daaccbbdacccd'}, 'daaccbbdacccbcbba': {'a': 'daaccbcddaacba', 'b': 'daaccbcdab', 'c': 'daaccbbdacccbcbbac', 'd': 'daacbbbad'}, 'daacbdaa': {'a': 'daacbdaaa', 'b': 'daacbdaab', 'c': 'daaccbcddaac', 'd': 'daacbdaad'}, 'daacbdaaacccbc': {'a': 'daacca', 'b': 'daacbdaaacccbcb', 'c': 'daaccbbdaccccc', 'd': 'daacbdaaacccbcd'}, 'ccbd': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccb'}, 'dacccbcbd': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'dacccbcbbbdb', 'c': 'dacccbcbdc', 'd': 'daaccbbdad'}, 'daacbbbbbbddcbbd': {'a': 'daacbbbbbbddcbbda', 'b': 'ccb', 'c': 'daaccbcdab', 'd': 'daacbbbbbbddcbbdd'}, 'daaccbbddc': {'a': 'a', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'aabbd'}, 'daaccbbdacccbb': {'a': 'daaccbbdaccbba', 'b': 'daaccbbdacccbbb', 'c': 'daaccbbdacccbbc', 'd': 'daaccbbdacccbbd'}, 'daaccbbdacccbbbbbdc': {'a': 'daaccbbdadca', 'b': 'acb', 'c': 'accbddc', 'd': 'daaccbbdacccbbbbbdcd'}, 'daacac': {'a': 'daaccbca', 'b': 'dacb', 'c': 'daccc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbacc': {'a': 'aca', 'b': 'dacb', 'c': 'aac', 'd': 'daacbbbbbbdbbbddab'}, 'dacccbcbbda': {'a': 'dacccbcbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'dacccbcbbdad'}, 'daacbbbbbbdcdaadaa': {'a': 'daacbbbbbbdcdaadaaa', 'b': 'daaccbcdaab', 'c': 'daacbdaadac', 'd': 'daaad'}, 'daaccbcdaccbdaad': {'a': 'daaccbcdaccbdaada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbdaad'}, 'daaccbcda': {'a': 'daaccbcdaa', 'b': 'daaccbcdab', 'c': 'daaccbcdac', 'd': 'daaccbcdad'}, 'accbdddadaddaaabc': {'a': 'daacbaca', 'b': 'daacbbc', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbddadadaccd'}, 'daaccbbdacccbbbbba': {'a': 'daaccbbdacccbbbbbaa', 'b': 'daaccbbdabab', 'c': 'daaccbbdddcc', 'd': 'daaccbbdacccbbbbbad'}, 'daaccbcdaacbbad': {'a': 'daaccbcdaacbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbad'}, 'daaccbbdacccbcbddadaacbbc': {'a': 'daaba', 'b': 'daaccbbdacccbcbddadaacbbcb', 'c': 'daaccbbdabcc', 'd': 'daaccbbdacccbcd'}, 'daaccbbdacccbcbddaabacbbbb': {'a': 'daaccbbdacccd', 'b': 'daaccbbdacccbcbddaabacbbbbb', 'c': 'daacbbbbc', 'd': 'daaccbcdaccbbbbd'}, 'daaccbbdaccbba': {'a': 'daaccbbdaccbbaa', 'b': 'acccbbc', 'c': 'daaccbbdaccbbac', 'd': 'daacbbbad'}, 'daaccbcddaacbc': {'a': 'daaccbcddaacbca', 'b': 'daaccbcddaacbcb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccbbdacccbcbddadaabd'}, 'daacbbbbbbbadda': {'a': 'daacbbbbbbbaddaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddac', 'd': 'daacbbbbbbdbbddadad'}, 'daaccbcddcb': {'a': 'ccb', 'b': 'daaccbcddcbb', 'c': 'ccb', 'd': 'daaccbcddcbd'}, 'daacbdaaacccb': {'a': 'daaccbbdacccba', 'b': 'daaccbbdacccbcbddaacbb', 'c': 'daacbdaaacccbc', 'd': 'daacbdaaacccbd'}, 'daaccbbdacccbcc': {'a': 'daacbaca', 'b': 'daaccbbdacccbccb', 'c': 'daacbacc', 'd': 'daaccbbdacccbccd'}, 'daaccbbdacccbccba': {'a': 'daaba', 'b': 'aab', 'c': 'daaccbbdabcc', 'd': 'daaccbbdadcd'}, 'dacccbbbb': {'a': 'daaccbcd', 'b': 'dacccbbbbb', 'c': 'acccbbc', 'd': 'daccbbbd'}, 'acccbbdaaabc': {'a': 'daaccbca', 'b': 'acccbbdaaabcb', 'c': 'ac', 'd': 'daccd'}, 'daaccbbdacccccd': {'a': 'daaba', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbcbbdbd'}, 'daacc': {'a': 'daacca', 'b': 'daaccb', 'c': 'daaccc', 'd': 'daaccd'}, 'accbdddadadacb': {'a': 'daacba', 'b': 'acccbb', 'c': 'daccbc', 'd': 'accbdddadadacbd'}, 'daaccbcdaacbb': {'a': 'daaccbcdaacbba', 'b': 'daccbbb', 'c': 'daacbbc', 'd': 'daaccbcdaacbbd'}, 'daaccbbdacccbbbbbad': {'a': 'daacbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'daacbbbd': {'a': 'daacbbbda', 'b': 'daacbbbdb', 'c': 'daccbbdc', 'd': 'daacbbbdd'}, 'daacbbbbbbdbbddadadac': {'a': 'a', 'b': 'daacbbbbbbdbbddadadacb', 'c': 'daacbbbbbbdbbddadadacc', 'd': 'daacbbbbbbdcdaad'}, 'dacccbba': {'a': 'daaca', 'b': 'daaccbab', 'c': 'ac', 'd': 'daacbbbad'}, 'daacba': {'a': 'daaca', 'b': 'daaccbcdab', 'c': 'daacbac', 'd': 'daacbad'}, 'dacbdddaab': {'a': 'daacbbbbbbdcdaaa', 'b': 'dacbdddaabb', 'c': 'dacbdddaabc', 'd': 'dacbdddaabd'}, 'daaccbcddaacbaca': {'a': 'daacbaca', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'daaccbbda': {'a': 'daaccbbdaa', 'b': 'daaccbbdab', 'c': 'daaccbbdac', 'd': 'daaccbbdad'}, 'daacaaaccb': {'a': 'daacaaaccba', 'b': 'acccbb', 'c': 'daacaaaccbc', 'd': 'accbd'}, 'daaccbbdaa': {'a': 'daaccbbdaaa', 'b': 'daacb', 'c': 'daaccbbdac', 'd': 'daaccbbdaad'}, 'daaccbcdaacbcbb': {'a': 'daaccbbdba', 'b': 'daacbbbbbbdbbddadadacbb', 'c': 'accbddc', 'd': 'daaccbcdaacbcbbd'}, 'daaccbcdadaa': {'a': 'daacbbbbbbdbbddadadaa', 'b': 'daab', 'c': 'dacbdac', 'd': 'daaad'}, 'daaccbbdacccbcbddadaacbbcb': {'a': 'daaccbbdba', 'b': 'daaccbbdacccbbcbb', 'c': 'daacbbbbc', 'd': 'dacccbcbbbd'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc', 'd': 'ccb'}, 'daaccbbddcc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacaaacb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcdaccbdada': {'a': 'dacccbcbbdadda', 'b': 'daaccbcdaccbdadab', 'c': 'daaccbcddaac', 'd': 'daaccbcdaccbdadad'}, 'daacbbbbbbdbbbddd': {'a': 'daacbbbbbbdbbbddda', 'b': 'accbddddb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbdbbbdddd'}, 'daaccbbdacccbcbddaadad': {'a': 'daaccbbdacccbcbddaadada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddaadadad'}, 'daaccbbdaadacbdc': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'daacbdcd'}, 'daaccbbdad': {'a': 'daaccbbdada', 'b': 'ccb', 'c': 'daaccbbdadc', 'd': 'daaccbbdadd'}, 'daaccbbdaadac': {'a': 'daaccbcddaaca', 'b': 'daaccbbdaadacb', 'c': 'daaccbcdaac', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbb': {'a': 'daaccbba', 'b': 'daaccbb', 'c': 'daaccbbc', 'd': 'daaccbbd'}, 'daacbd': {'a': 'daacbda', 'b': 'aabb', 'c': 'daacbdc', 'd': 'daacbdd'}, 'daaccbca': {'a': 'aca', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'daa': {'a': 'daaa', 'b': 'daab', 'c': 'daac', 'd': 'daad'}, 'daaccbbcbbdc': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daaccbbdacccbcbddaacbdc': {'a': 'daaba', 'b': 'daaccbcddcbbbbdacb', 'c': 'acc', 'd': 'daacbbbbbbdabd'}, 'daacbbbbbbdabda': {'a': 'daacbbbbbbdcdaaa', 'b': 'ccb', 'c': 'daacbbbbbbddcbdac', 'd': 'daacbbbbbbdbbddadad'}, 'daaccbcdaab': {'a': 'dacccda', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccd'}, 'daacbbbbbbdbbddaa': {'a': 'daacbbbbbbdbbddaaa', 'b': 'daaccbcddaacab', 'c': 'daacbdaadac', 'd': 'daaccbcdad'}, 'daaccbbdaadacbbd': {'a': 'daccbbda', 'b': 'daaccbbdacccbdb', 'c': 'daccbbdc', 'd': 'aacbbdd'}, 'daccc': {'a': 'daccca', 'b': 'dacccb', 'c': 'daccc', 'd': 'dacccd'}, 'daacbbbbbbdcd': {'a': 'daacbbbbbbdcda', 'b': 'ccb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'daaccbbdaccbbaa': {'a': 'daaccbbdaccbbaaa', 'b': 'daaccbcddaacab', 'c': 'daacc', 'd': 'daaccbcdad'}, 'daacaaaccbcbddaab': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbbdacccbcbddaabb', 'c': 'daaccbcddaacbdc', 'd': 'daacaaaccbcbddaabd'}, 'daacbbbbbbddcdaa': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbbdabab', 'c': 'daacbbbbbbddcdaac', 'd': 'daacbbbbbbaad'}, 'daacbbbbbb': {'a': 'daacbbbbbba', 'b': 'daacbbbbbbb', 'c': 'daaccbcdab', 'd': 'daacbbbbbbd'}, 'daacbada': {'a': 'daacbadaa', 'b': 'ccb', 'c': 'daacbadac', 'd': 'daacbbbbbbaad'}, 'dacccbdab': {'a': 'dacccbdaba', 'b': 'daabb', 'c': 'accbddc', 'd': 'dacccbdabd'}, 'daaccbcdaacbbada': {'a': 'daaccbcdaa', 'b': 'ccb', 'c': 'daaccbcdac', 'd': 'daaccbcdadad'}, 'daaccbbdaccbbbddbd': {'a': 'daacbbbbbbdcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'daaccbbcbdac': {'a': 'daaccbcddaacaa', 'b': 'daaccbbcbdacb', 'c': 'daaccbbcbdacc', 'd': 'daaccbcd'}, 'accbb': {'a': 'dacccda', 'b': 'dacccbcbbb', 'c': 'accbddc', 'd': 'accbbd'}, 'daaccbcddcbbbda': {'a': 'daacbbbbbbdcdaadaa', 'b': 'ccb', 'c': 'daaccbcddcbbbdac', 'd': 'daaccbcdad'}, 'daac': {'a': 'daaca', 'b': 'daacb', 'c': 'daacc', 'd': 'daaccd'}, 'daaccbbdddc': {'a': 'a', 'b': 'daabb', 'c': 'daaccbbdddcc', 'd': 'daaccd'}, 'daaccbcddaacc': {'a': 'daaccbbdacca', 'b': 'daaccbcddaaccb', 'c': 'daaccbcddaaccc', 'd': 'daaccbcddaaccd'}, 'daaccbcdaac': {'a': 'daacaaa', 'b': 'daaccbcdaacb', 'c': 'daaccc', 'd': 'daaccd'}, 'dacbda': {'a': 'daaccbbdaada', 'b': 'daaccbcdaab', 'c': 'dacbdac', 'd': 'dacbdad'}, 'daacbbbbbbddcbda': {'a': 'daacbbbbbbbaddaa', 'b': 'ccb', 'c': 'daacbbbbbbddcbdac', 'd': 'daacbbbbbbddcbdad'}, 'dacccbd': {'a': 'dacccbda', 'b': 'aacbbdb', 'c': 'dacccbdc', 'd': 'dacccbdd'}, 'accbda': {'a': 'accbdaa', 'b': 'daacbbbbbbdbbbdddab', 'c': 'daaccbcdaac', 'd': 'dacbdad'}, 'daacbdaaacccbcbc': {'a': 'aca', 'b': 'daaccbbcb', 'c': 'acc', 'd': 'daaccbcd'}, 'daaccbcddaaaaacaa': {'a': 'daaccbcddaacaa', 'b': 'daaccbcddaaaaacaab', 'c': 'daacc', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdbbdd': {'a': 'daacbbbbbbdbbdda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'daaccbbdacccb': {'a': 'daaccbbdacccba', 'b': 'daaccbbdacccbb', 'c': 'daaccbbdacccbc', 'd': 'daaccbbdacccbd'}, 'daaccbcdaacb': {'a': 'daaccbcdaacba', 'b': 'daaccbcdaacbb', 'c': 'daaccbcdaacbc', 'd': 'daaccbcdaacbd'}, 'daacbbbbbbbb': {'a': 'daacbbbbbbbba', 'b': 'daacbbbbbbbb', 'c': 'daacbbbbbbbbc', 'd': 'daacbbbbbbbbd'}, 'daaccbcddaaaaaccacbd': {'a': 'daaccbcddaaaaaccacbda', 'b': 'aabb', 'c': 'daaccbbdacccbcbddaacdc', 'd': 'daacbdd'}, 'daaccbbdacccbbdc': {'a': 'daaccbaa', 'b': 'daaccbcddcbbbbdacb', 'c': 'daaccbbdacccbcbbac', 'd': 'daacbbbbbbdbbbddad'}, 'daacbbbbbbdbbddadadacbb': {'a': 'daaccbcbbdba', 'b': 'acbbb', 'c': 'accbddc', 'd': 'daaccbcdd'}, 'daacbbbbbbdb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'dacccbcd': {'a': 'dacccbcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacccbcdd'}, 'daaccbbdada': {'a': 'daaccbbdaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'daaccbbdadad'}, 'daaccbcdaccbdadab': {'a': 'daada', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbdcdaad'}, 'daaccbbdacccbcbddaacbbd': {'a': 'daaccbbda', 'b': 'daaccbbdacccbbdb', 'c': 'daaccbbdaccbbbdc', 'd': 'daaccbbdaccbbbdd'}, 'daacaaa': {'a': 'daaba', 'b': 'daaccbcdab', 'c': 'daacaaac', 'd': 'daacbbbbbbdbbbddab'}, 'daacbdaaab': {'a': 'daaca', 'b': 'daacbdaaabb', 'c': 'daacbdaaabc', 'd': 'daacbdaabd'}, 'daaccbbdacccbcbddaacbac': {'a': 'daaccbcddaacbca', 'b': 'daaccbbdacccbcbddaacbacb', 'c': 'daaccc', 'd': 'daaccd'}, 'ddddd': {'a': 'ddddda', 'b': 'ccb', 'c': 'ccb', 'd': 'ddddd'}, 'dacccbcbbbbbbdb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'dacccbcbbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbad'}, 'daacbdaaabca': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'ccb', 'c': 'daaccbbddcc', 'd': 'ccb'}, 'daacbbbbbbddcbdad': {'a': 'daacbbbbbbddcbdada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdacccbbb': {'a': 'daaccbbdaccbba', 'b': 'daaccbbdacccbbbb', 'c': 'daacbbc', 'd': 'daaccbbdaccbbbd'}, 'daaccbcddaacbbac': {'a': 'daacbaca', 'b': 'aacb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccd'}, 'dacccbddadd': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'dacccbddaddc', 'd': 'daacbbbbbbdad'}, 'daaccbbdacccca': {'a': 'aca', 'b': 'daaccbcddcb', 'c': 'ac', 'd': 'ccb'}, 'daaccbbcbdaccbac': {'a': 'aca', 'b': 'aacb', 'c': 'daacbacc', 'd': 'daaccbbdadcd'}, 'daccbb': {'a': 'daccbba', 'b': 'daccbbb', 'c': 'daacbbc', 'd': 'daccbbd'}, 'daaccbbdacccbcbddad': {'a': 'daaccbbdacccbcbddada', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbbdadc', 'd': 'daaccbbdacccbcbddadd'}, 'daacbdaaacbd': {'a': 'daacbda', 'b': 'daacbdaaacbdb', 'c': 'daaccbcddaacbdc', 'd': 'daacbdd'}, 'acbbbdda': {'a': 'daaccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbbdac', 'd': 'acccbbdadd'}, 'daaccbcbb': {'a': 'daaccbcbba', 'b': 'daaccbcbbb', 'c': 'acccbbc', 'd': 'daaccbcbbd'}, 'daaccbbdacccbcbddaabc': {'a': 'daaccbcddaacbca', 'b': 'daacbbbbbbdbbddadaccb', 'c': 'accc', 'd': 'daaccd'}, 'daacbbbbbbddb': {'a': 'daacbbbbbbdca', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbddb'}, 'daacbbbbbbda': {'a': 'dacccbcbbdaa', 'b': 'daacbbbbbbdab', 'c': 'daacbbbbbbdac', 'd': 'daacbbbbbbdad'}, 'daaccbbdaccbbbdd': {'a': 'daaccbbda', 'b': 'daaccbbdaccbbbddb', 'c': 'daaccbbdaccbbbddc', 'd': 'daaccbbdaccbbbddd'}, 'daaccbcdadad': {'a': 'daaccbcdadada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daacbbb': {'a': 'daacbbba', 'b': 'daacbbbb', 'c': 'daacbbc', 'd': 'daacbbbd'}, 'daaccbbdaad': {'a': 'daaccbbdaada', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'daaccbbdaadd'}, 'acbbb': {'a': 'daaccbcbbdba', 'b': 'acbbb', 'c': 'daaccbcdab', 'd': 'acbbbd'}, 'accb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'accbb', 'c': 'accbddc', 'd': 'accbd'}, 'daaccbcddc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbcddcb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdaaa': {'a': 'daaccbbdaaa', 'b': 'daaccbbdaaab', 'c': 'daaccbbdac', 'd': 'daaccbbdaaad'}, 'daaccbbcb': {'a': 'dacccda', 'b': 'daaccbbcbb', 'c': 'accbddc', 'd': 'daaccbbcbd'}, 'daaccbcdaacbba': {'a': 'daaca', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daaccbcdaacbbad'}, 'daaccbcddaaaaacc': {'a': 'daaccbcddaaaaacca', 'b': 'daacbdaaacb', 'c': 'daaccbcddaacc', 'd': 'daaccbcddaaccd'}, 'daaccbbdacc': {'a': 'daaccbbdacca', 'b': 'daaccbbdaccb', 'c': 'daaccbbdaccc', 'd': 'daaccbcd'}, 'daaccbbdacccbcbddadaabd': {'a': 'daaccbbdacccbcbddadaabda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddad'}, 'ddaaaabb': {'a': 'daaccbcba', 'b': 'acbbb', 'c': 'accbddc', 'd': 'accbd'}, 'daacbdaaaaa': {'a': 'daacbdaaaaaa', 'b': 'daacbdaaaaab', 'c': 'daacbdaaaaac', 'd': 'daaccbcdad'}, 'accbddd': {'a': 'accbddda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'accbdddd'}, 'dacccbcbbbb': {'a': 'dacccbcbbbba', 'b': 'dacccbcbbbbb', 'c': 'daaccbcdab', 'd': 'dacccbcbbbbd'}, 'acbb': {'a': 'daaccbcbbdba', 'b': 'acbbb', 'c': 'aab', 'd': 'dacbd'}, 'daaccbbdacccbcbbac': {'a': 'aca', 'b': 'accbb', 'c': 'acc', 'd': 'daacbbbbbbddcd'}, 'daaccbcdaccbdaa': {'a': 'daaccbcddaaa', 'b': 'daaccbcdaccbdaab', 'c': 'daaccbcddaac', 'd': 'daaccbcdaccbdaad'}, 'daaccbbdacccbcbddaacbbc': {'a': 'daaccbcddaacbca', 'b': 'acccbb', 'c': 'acc', 'd': 'accbd'}, 'daacbbbbbddd': {'a': 'daaccbbda', 'b': 'daacbbbddb', 'c': 'daacbbbbbdddc', 'd': 'daacbbbbdd'}, 'daadaaaabaa': {'a': 'aca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'daaccbbdacccbcbbd': {'a': 'daaccbbdacccbcbdda', 'b': 'daaccbbdacccbcbbdb', 'c': 'daaccbbdacccbcbbdc', 'd': 'daaccbbdd'}, 'daccd': {'a': 'daacbbbbbbdbbddadaca', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbad'}, 'daacbbbbbbbdb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'daaccbbdacb': {'a': 'daaccbcddaacba', 'b': 'daaccbbdacbb', 'c': 'daaccbcddaacbc', 'd': 'daaccbbdacccbd'}, 'ddaaaab': {'a': 'aa', 'b': 'ddaaaabb', 'c': 'daaccbbdaccca', 'd': 'daaccbcd'}, 'daaccbbdacccbcbddaacdaa': {'a': 'daaccbbdacccbcbddaacdaaa', 'b': 'daaccbcddaaab', 'c': 'daaccbcddaac', 'd': 'daacbbbbbbddcbdadd'}, 'dacccbda': {'a': 'daaccbcdaccbdaa', 'b': 'dacccbdab', 'c': 'daaccbbcbdac', 'd': 'dacccbdad'}, 'acccbbdaaaa': {'a': 'daaccbcddaaaaa', 'b': 'acccbbdaaaab', 'c': 'daaccbbdac', 'd': 'acccbbdaaaad'}, 'dacb': {'a': 'daaccbcba', 'b': 'dacbb', 'c': 'daaccbbdacccab', 'd': 'dacbd'}, 'daaccbbdacccbcbddaadc': {'a': 'daaba', 'b': 'daaccbcbbdbb', 'c': 'daaccbbdabc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbdcdaab': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'dacccbddd': {'a': 'dacccbddda', 'b': 'dacccbdddb', 'c': 'daaccbbdadc', 'd': 'aacbbdd'}, 'daadaaaaa': {'a': 'daa', 'b': 'daab', 'c': 'daac', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbdbbbdddac': {'a': 'daaca', 'b': 'daaccbbdacccbcbddaabb', 'c': 'daacbbbbbbdbbbdddacc', 'd': 'daaccbcdaacbbad'}, 'daaccbcdaacbcb': {'a': 'daaccbcbbdba', 'b': 'daaccbcdaacbcbb', 'c': 'accbddc', 'd': 'daaccbcdaacbcbd'}, 'daacbbbbbbddcbbddddad': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcddd'}, 'daaccbbdaccbbbbbd': {'a': 'daacbbbda', 'b': 'daaccbbdaccbbbbbdb', 'c': 'daaccbbdaccbbbbbdc', 'd': 'daacbbbbbddd'}, 'daaccbcddaacbca': {'a': 'daaccbcddaacbcaa', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcd': {'a': 'daaccbcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbcdd'}, 'daacbbbbbbddcdaac': {'a': 'daaba', 'b': 'daacbdaabb', 'c': 'aac', 'd': 'daaccbbdadcd'}, 'daada': {'a': 'daadaa', 'b': 'ccb', 'c': 'daadac', 'd': 'ccb'}, 'daaccbbdacccbc': {'a': 'daaccca', 'b': 'daaccbbdacccbcb', 'c': 'daaccbbdacccbcc', 'd': 'daaccbbdacccbcd'}, 'daaccbcbbbbbb': {'a': 'daaccbcbbbbbba', 'b': 'daacbbbbbbbb', 'c': 'daaccbcdab', 'd': 'dacccbcbbbbbbd'}, 'aabbd': {'a': 'a', 'b': 'ccb', 'c': 'ccb', 'd': 'aabbdd'}, 'daacbbbddc': {'a': 'daacbbbbbbaa', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccd'}, 'daaccbcddaacbdc': {'a': 'daaba', 'b': 'daaccbbdacccbdcb', 'c': 'acc', 'd': 'aabbd'}, 'daaccbbddb': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbdcd'}, 'daaccbbdaccbbbb': {'a': 'daaccbbdaccbbbba', 'b': 'daaccbbdaccbbbbb', 'c': 'daacbbc', 'd': 'daaccbbdaccbbbbd'}, 'daacbbbbbbdbbbdddaccb': {'a': 'daacbbbbbbdbbbdddaccba', 'b': 'acccbb', 'c': 'daaccbcdaacbc', 'd': 'daacbbbbbbdbbbdddaccbd'}, 'daacbdaaaccc': {'a': 'daacbdaaaccca', 'b': 'daacbdaaacccb', 'c': 'daaccbbdaccc', 'd': 'daaccbbdacccd'}, 'daacbdaada': {'a': 'daacbbbbbbdbbddadadaa', 'b': 'daacbdaadab', 'c': 'daacbdaadac', 'd': 'daaad'}, 'daacbbbbbbdbbbdddda': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbddddab', 'c': 'daacbbbbbbdac', 'd': 'daacbbbbbbdbbbddddad'}, 'daaccbcdaccbdaab': {'a': 'daaca', 'b': 'daacbdaabb', 'c': 'daaccbbdabc', 'd': 'daacbdaabd'}, 'acccbbdab': {'a': 'a', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbad'}, 'daacbdaaacccbcb': {'a': 'daccbba', 'b': 'daaccbbdacccbccbb', 'c': 'daacbdaaacccbcbc', 'd': 'daaccbbdacccbcbd'}, 'daaccbbdacccbcbdd': {'a': 'daaccbbdacccbcbdda', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbbdacccbcbddc', 'd': 'daccbbdd'}, 'daaccbcdacc': {'a': 'daacbaca', 'b': 'daaccbcdaccb', 'c': 'daccc', 'd': 'daaccbcdaccd'}, 'daaccbbdacccab': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daabb', 'c': 'daaccbcddc', 'd': 'daaccbbdacccabd'}, 'daacbbbbbbbd': {'a': 'daacbbbbbbbda', 'b': 'daacbbbbbbbdb', 'c': 'daacbbbbbbbdc', 'd': 'daacbbbbbbdd'}, 'daacbbbbbbddcbbddddda': {'a': 'dacccbcbbdadda', 'b': 'accbddab', 'c': 'daaccbcddaac', 'd': 'daacbbbbbbddcbbdddddad'}, 'daaccbcdaacbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbcdaacbcb', 'c': 'daaccbbdabcc', 'd': 'dacccbcd'}, 'dacbdddaabdaaa': {'a': 'dddddadaa', 'b': 'acccbbdab', 'c': 'daac', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdaccccc': {'a': 'daccca', 'b': 'daacccb', 'c': 'dacc', 'd': 'daaccbbdacccccd'}, 'accbdddadadacbdada': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daaccbcdaab', 'c': 'dacbdac', 'd': 'accbdddadadacbdadad'}, 'daacbbbbbbdbbddada': {'a': 'daacbbbbbbbaddaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'daacbbbbbbdbbddadac', 'd': 'daacbbbbbbdbbddadad'}, 'daacbdaaacc': {'a': 'daaccbbdacca', 'b': 'daacbdaaacb', 'c': 'daacbdaaaccc', 'd': 'dacccbcbbba'}, 'dacccbbbbbd': {'a': 'dacccbbbbbda', 'b': 'daacbbbbbdb', 'c': 'dacccbbbbbdc', 'd': 'daacbbbbbdd'}, 'daaccbcbbbbba': {'a': 'daaccbbdba', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbbdacccabd'}, 'dacccbbbbbad': {'a': 'daaccbcbbdbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'accbdddadadacbdadad': {'a': 'dddddadda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaad'}, 'daaccbbdaccbbbddc': {'a': 'a', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'daacbbbbbbdabd'}, 'daacbbbbbbdbbbddddab': {'a': 'daacbbbbbbddcda', 'b': 'daaccbcbbdbb', 'c': 'daaccbcddc', 'd': 'daacbad'}, 'daaccc': {'a': 'daaccca', 'b': 'daacccb', 'c': 'dacc', 'd': 'daacccd'}, 'daaccbbdacccbcbddaaba': {'a': 'daaa', 'b': 'daaccbbdacccbcbddaabab', 'c': 'daaccbbdacccbcbddaabac', 'd': 'daaccbcdad'}, 'dacccbcbbbbbda': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdab', 'c': 'daacbbbbbbdac', 'd': 'daacbbbbbbdad'}, 'daacbbbbbbddcbbdddda': {'a': 'dacccbcbbdadda', 'b': 'accbddab', 'c': 'daaccbcddaac', 'd': 'daacbbbbbbddcbbddddad'}, 'daaccbbdacccbcbddaabacbbbbbda': {'a': 'dacccbcbbdaa', 'b': 'daacbbbbbbdbbddadadacb', 'c': 'daaccbbcbdac', 'd': 'daacbbbbbbdad'}, 'daaccbcdadada': {'a': 'daaccbcdadadaa', 'b': 'ccb', 'c': 'daaccbcdadadac', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbddcbbdddddadd': {'a': 'daacbbbbbbdbbbddddada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbdbbbddddadd'}, 'daacbba': {'a': 'daaca', 'b': 'daaccbab', 'c': 'ac', 'd': 'daaccbcdaacbbad'}, 'daacbdaabd': {'a': 'daacbdaabda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbad'}, 'daaccbcddcbbbbda': {'a': 'daacbbbbbbdcdaadaa', 'b': 'ccb', 'c': 'daaccbcddcbbbbdac', 'd': 'daaccbcdad'}, 'daaccbbdacccbcbddaacbd': {'a': 'daaccbbdacccbcbddaacbda', 'b': 'daaccbbdacccbcbddaacbdb', 'c': 'daaccbbdacccbcbddaacbdc', 'd': 'daaccbbdacccbdd'}, 'dacbddda': {'a': 'dacbdddaa', 'b': 'accbddab', 'c': 'daaccbbdac', 'd': 'dacbdddad'}, 'daaccbbdacccbcbbdc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daaccbbdacccbdcb', 'c': 'daaccbbddcc', 'd': 'daacbbbad'}, 'dacccbdad': {'a': 'dacccbdada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daaccbbdaadd'}, 'daaccbcddcbbbd': {'a': 'daaccbcddcbbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcddcbbbbdd'}, 'daaccbbdacccbcbd': {'a': 'acccbbda', 'b': 'daaccbbdacccbcbdb', 'c': 'dacccbbdc', 'd': 'daaccbbdacccbcbdd'}, 'daacbbbbbbdbbbddddad': {'a': 'daacbbbbbbdbbbddddada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbdbbbddddadd'}, 'daacca': {'a': 'daaccbca', 'b': 'accbddc', 'c': 'accc', 'd': 'ccb'}, 'accbdddadadac': {'a': 'daacbbbbbbdcdaaa', 'b': 'accbdddadadacb', 'c': 'daaccbcdaac', 'd': 'daaccbcdad'}, 'daacbbbbbbddcda': {'a': 'daacbbbbbbddcdaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'daacbdc': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'acc', 'd': 'daacbdcd'}, 'daacb': {'a': 'daacba', 'b': 'daacbb', 'c': 'daacbc', 'd': 'daacbd'}, 'daaccbcddaacbba': {'a': 'daaccbcddaacba', 'b': 'daaccbcbbdbb', 'c': 'daaccbcddaacbbac', 'd': 'daacbbbad'}, 'daacccb': {'a': 'daaccbcddaacbdc', 'b': 'daacccbb', 'c': 'daaccbbdacccbc', 'd': 'daacbdaaacccbd'}, 'daaccbbdacccbcbddaa': {'a': 'daaccbbdaa', 'b': 'daaccbbdacccbcbddaab', 'c': 'daaccbbdacccbcbddaac', 'd': 'daaccbbdacccbcbddaad'}, 'daaccbbdacccbbbbbd': {'a': 'daacbbbda', 'b': 'daaccbbdacccbbbbbdb', 'c': 'daaccbbdacccbbbbbdc', 'd': 'daacbbbbbddd'}, 'daaccbbdaadacbd': {'a': 'daaccbbdacccbcbddaacbacbda', 'b': 'aabb', 'c': 'daaccbbdaadacbdc', 'd': 'dacbddd'}, 'daacbbbbbbb': {'a': 'daacbbbbbbba', 'b': 'daacbbbbbbbb', 'c': 'daacbbbbbbbc', 'd': 'daacbbbbbbbd'}, 'daadaaa': {'a': 'daadaaaa', 'b': 'ccb', 'c': 'daadaaac', 'd': 'ccb'}, 'daacbbbbbbdbbbdddaad': {'a': 'daacbbbbbbdbbbdddaada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daacbbbbbbdbbbdddaadd'}, 'daaccbbdacccbcbddaacbcb': {'a': 'daaccbbcbdaccba', 'b': 'daaccbbdacccbcbddaacbcbb', 'c': 'daaccbbc', 'd': 'daaccbbdacccbcbd'}, 'daaccbcddaaa': {'a': 'daaccbcddaaaa', 'b': 'daaccbcddaaab', 'c': 'daaccbbdac', 'd': 'daacbdaad'}, 'daaccbbdaccbbaaa': {'a': 'daaa', 'b': 'dacccbcbdc', 'c': 'daaccbbdacccbcbddaabac', 'd': 'daacbbbbbbdcdaad'}, 'daacaa': {'a': 'daacaaa', 'b': 'daaccbcdab', 'c': 'daacaaacc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcbbbd': {'a': 'acccbbda', 'b': 'dacccbcbbdb', 'c': 'daaccbcddcbbbbdacb', 'd': 'aacbbdd'}, 'daacbbbbbbbbd': {'a': 'daacbbbbbbbbda', 'b': 'daacbbbbbbbbdb', 'c': 'daacbbbbbbbbdc', 'd': 'daacbbbbbbdd'}, 'daaccbbdacccbcbddadaabda': {'a': 'daaccbbdaada', 'b': 'daaccbcddaacab', 'c': 'dacbdac', 'd': 'daacbbbbbbddcbdadd'}, 'dacccbcbbbbbbd': {'a': 'daacbbbbbbbbda', 'b': 'dacccbcbbbbbbdb', 'c': 'accbddc', 'd': 'daaccbcdaccbbbbbdd'}, 'daaccbbdacccbcbddaabaccba': {'a': 'daacbbbbbbdbbbdddaccba', 'b': 'daaccbcdab', 'c': 'ac', 'd': 'daacbad'}, 'daaccbcddcbd': {'a': 'daacbbbbbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbad'}, 'daacbbbbbbdbbbdddaada': {'a': 'daaccbcddaa', 'b': 'daacbbbbbbdbbbddddab', 'c': 'dacbdac', 'd': 'daaccbbdaadad'}, 'daaccbcdaccbbbbbdd': {'a': 'acbbbdda', 'b': 'daacbbbbbbddb', 'c': 'daacbbbbbddc', 'd': 'daacbbbbbddd'}, 'daaccbbdddccb': {'a': 'daacbbbbbbdca', 'b': 'daaccbbdddccbb', 'c': 'accbddc', 'd': 'accbd'}, 'daacbbbbbbdbbddd': {'a': 'daacbbbbbbdbbbdda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'dacccbbbbbda': {'a': 'acccbbdaa', 'b': 'daccbbdc', 'c': 'daaccbcddaac', 'd': 'daacbbbbbbdad'}, 'daacbdaaaaaaab': {'a': 'daaccbaa', 'b': 'daacbdaabb', 'c': 'daaccbbdabcc', 'd': 'daaccbcddaaccd'}, 'daaccbbdacccbbcbb': {'a': 'dacccbcbba', 'b': 'dacccbcbbb', 'c': 'daacbbbbc', 'd': 'dacccbcbbbd'}, 'daaccbbdaadacb': {'a': 'daacba', 'b': 'daaccbbdaadacbb', 'c': 'daaccbbdaadacbc', 'd': 'daaccbbdaadacbd'}, 'daacbbbbb': {'a': 'dacccbcbbba', 'b': 'daacbbbbbb', 'c': 'daaccbcddcb', 'd': 'daacbbbbbd'}, 'acccbbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'dacbdac': {'a': 'daaca', 'b': 'daaccbcdaacb', 'c': 'daacc', 'd': 'daaccbcdad'}, 'daaccbbdacccbccbba': {'a': 'daaca', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daacbbbad'}, 'daaccbcdaacbcbbd': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'aacbbdb', 'c': 'daaccbbcbbdc', 'd': 'daaccbbdad'}, 'acccbbdaaaabcb': {'a': 'daaccbbdacccbcbddaacbdabba', 'b': 'daacbdaabb', 'c': 'accbddc', 'd': 'accbd'}, 'dacbd': {'a': 'dacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbdd'}, 'daacbbbbbdb': {'a': 'daacbbbbbbdca', 'b': 'daacbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'aacbbdbbb': {'a': 'ccb', 'b': 'daaccbcddcbbbb', 'c': 'ccb', 'd': 'daaccbcddcbd'}, 'daaccbbdadcda': {'a': 'daada', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcddaaccbd': {'a': 'daccbbda', 'b': 'daaccbcbbdb', 'c': 'daaccbbdacccbdc', 'd': 'dacccbddd'}, 'daacbdd': {'a': 'daccbbda', 'b': 'accbddddb', 'c': 'acbbbddc', 'd': 'accbdddd'}, 'daacbbbbbbbcd': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbbcdd'}, 'daaccbbcbdaccbcb': {'a': 'dacccbdaba', 'b': 'daaccbcbb', 'c': 'acccbbc', 'd': 'daaccbbcbdaccbcbd'}, 'daacbbbbbbdbbbddddadd': {'a': 'daacbbbbbbdbbbddddadda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddaacdd'}, 'daaccbbdadc': {'a': 'daaccbbdadca', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbdbbbddab': {'a': 'daaccbcbbdba', 'b': 'aacbbdbbb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daaccbbdaccbbbdc': {'a': 'a', 'b': 'daacbbbbbbdbbddadacb', 'c': 'acc', 'd': 'daacbbbad'}, 'daccbbd': {'a': 'daccbbda', 'b': 'daaccbcbbdb', 'c': 'daccbbdc', 'd': 'daccbbdd'}, 'accbdddadaddaa': {'a': 'accbdddadaddaaa', 'b': 'daaccbbdadab', 'c': 'accbdddadaddaac', 'd': 'daaad'}, 'daacbdaaaaaca': {'a': 'daaccbcddaacaa', 'b': 'daacbdaaaaacab', 'c': 'daacc', 'd': 'daaccbbdadcd'}, 'daaccbcddaacb': {'a': 'daaccbcddaacba', 'b': 'daaccbcddaacbb', 'c': 'daaccbcddaacbc', 'd': 'daaccbcddaacbd'}, 'daacbbbbbbbad': {'a': 'daacbbbbbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'daccb': {'a': 'daaba', 'b': 'daccbb', 'c': 'daccbc', 'd': 'daccbd'}, 'daccbbbdd': {'a': 'daaccbbda', 'b': 'daaccbbdaccbbbddb', 'c': 'dacccbcbdc', 'd': 'daacbbbdd'}, 'daaccbcddcbbbdacc': {'a': 'aca', 'b': 'daaccbbcb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccbbdadcd'}, 'daaccbcbbbbdb': {'a': 'daacbbbbbbdca', 'b': 'aacbbdbbb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'daaccbaa': {'a': 'aa', 'b': 'daaccbcdab', 'c': 'daacbacc', 'd': 'daaccbbdadcd'}, 'daaccb': {'a': 'daaccba', 'b': 'daaccbb', 'c': 'daaccbc', 'd': 'daaccbd'}, 'dacccbdc': {'a': 'daaccbbdadca', 'b': 'daabb', 'c': 'acc', 'd': 'daaccd'}, 'daacbbbbbbdcdaadac': {'a': 'daaccbcba', 'b': 'daacbbbbbbdbbddadacb', 'c': 'aac', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbddcbdadd': {'a': 'daacbbbbbbddcbdada', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcdad'}, 'daaccbcdaccb': {'a': 'daaccbcba', 'b': 'daaccbcdaccbb', 'c': 'daccbc', 'd': 'daaccbcdaccbd'}, 'daacbbbbbbbbdbb': {'a': 'ccb', 'b': 'daacbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbbdbbd'}, 'daacbbbbbbdabd': {'a': 'daacbbbbbbdabda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbad'}, 'acccbb': {'a': 'acccbba', 'b': 'daaccbcbbb', 'c': 'acccbbc', 'd': 'acccbbd'}, 'daacbdcd': {'a': 'daacbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbad'}, 'dacccbddda': {'a': 'daaccbbdacccbcbddaa', 'b': 'daaccbbdab', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddad'}, 'daaccbbddd': {'a': 'daaccbbda', 'b': 'daacbbbddb', 'c': 'daaccbbdddc', 'd': 'daacbbbdd'}, 'daaccbcdaacbcbd': {'a': 'daaccbcdaacbcbda', 'b': 'ccb', 'c': 'daaccbcddaacab', 'd': 'daaccbbdadd'}, 'dacccbbdc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daaccbbdacccbdcb', 'c': 'acc', 'd': 'daacbbbad'}, 'daacbbbbbbdbbddaaa': {'a': 'daaccbbdaada', 'b': 'accbddab', 'c': 'dacbdac', 'd': 'daaccbcdad'}, 'd': {'a': 'da', 'b': 'ccb', 'c': 'ccb', 'd': 'dd'}, 'acbbbddc': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'daaccbcdaacbbd': {'a': 'daacbbbda', 'b': 'daaccbcbbdb', 'c': 'daccbbdc', 'd': 'daccbbdd'}, 'daaccbcddaaaad': {'a': 'daaccbcddaaaada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daaccbcdad'}, 'daadaaca': {'a': 'daaba', 'b': 'ccb', 'c': 'aac', 'd': 'ccb'}, 'daaccbbdaccbbbbd': {'a': 'acbbbdda', 'b': 'daaccbbdacccbbbbbdb', 'c': 'daaccbbdacccbbbbdc', 'd': 'daaccbbdaccbbbbdd'}, 'daacbbbbbbdbbbddddd': {'a': 'daacbbbbbbdbbbddddda', 'b': 'accbddddb', 'c': 'daaccbcddc', 'd': 'daacbbbbbbdbbbddddd'}, 'daaccbbdacccbcbddaababa': {'a': 'daaba', 'b': 'ccb', 'c': 'daaccbbddcc', 'd': 'daacbbbbbbdbbbddab'}, 'aacbbdb': {'a': 'daacbbbbbbdca', 'b': 'aacbbdbb', 'c': 'ccb', 'd': 'aacbbdbd'}, 'daacbbbbbbddcb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbbbbbddcbb', 'c': 'ccb', 'd': 'daacbbbbbbddcbd'}, 'acccbbdad': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'acccbbdadd'}, 'daaccbbdacccbccbd': {'a': 'daaccbcdaccbda', 'b': 'dacccbcbbdb', 'c': 'daaccbbdacccbdc', 'd': 'daaccbcdaccbdd'}, 'dacccbcbba': {'a': 'daaccbaa', 'b': 'ccb', 'c': 'daaccbbdabc', 'd': 'daaccd'}, 'dddda': {'a': 'accbdddadaddaa', 'b': 'daaccbbdadcd', 'c': 'dacbdac', 'd': 'daaccbcdad'}, 'daaccbcddcbbb': {'a': 'ccb', 'b': 'daaccbcddcbbbb', 'c': 'ccb', 'd': 'daaccbcddcbbbd'}, 'daaccbcddaaccd': {'a': 'daacbbbbbbddcdaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbad'}, 'dddddadd': {'a': 'dddddadda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbad'}, 'daadaaaaba': {'a': 'daadaaaabaa', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'daaccbbdacccbcbddaacbc': {'a': 'daaccbbdacccbcbddaacbca', 'b': 'daaccbbdacccbcbddaacbcb', 'c': 'daaccbbdaccccc', 'd': 'daacbdaaacccbcd'}, 'dacbdddaa': {'a': 'daaccbbdada', 'b': 'dacbdddaab', 'c': 'daaccbbdac', 'd': 'dacbdddaad'}, 'daacbac': {'a': 'daacbaca', 'b': 'aacb', 'c': 'daacbacc', 'd': 'daaccbbdadcd'}, 'daaccbcddaacbb': {'a': 'daaccbcddaacbba', 'b': 'daaccbcddaacbbb', 'c': 'daacbbc', 'd': 'daacbbd'}, 'accbdddadadda': {'a': 'accbdddadaddaa', 'b': 'daacbbbbbbaad', 'c': 'dacbdac', 'd': 'daacbbbbbbaad'}, 'acccbbdaaaab': {'a': 'daaccbcddaacba', 'b': 'dacbdddaabb', 'c': 'acccbbdaaaabc', 'd': 'daaccbcd'}, 'daaccbcdaccbdad': {'a': 'daaccbcdaccbdada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daaccbbdaadd'}, 'daaccbbdaaab': {'a': 'daaccbcddaacba', 'b': 'daaccbbdacccbcbddaabb', 'c': 'daaccbbdaaabc', 'd': 'dacbdddaabd'}, 'daaccbbdacccbcbddaabb': {'a': 'daaccbcdaacba', 'b': 'aacbb', 'c': 'acccbbc', 'd': 'daacbbbbbbdbbbdddaccbd'}, 'daacbbbbbbdab': {'a': 'daaccbbdba', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daacbdaaacb': {'a': 'daaccbcddaaca', 'b': 'daacccbb', 'c': 'daaccbbdaccbc', 'd': 'daacbdaaacbd'}, 'daaccbbdacccbbbbbdcd': {'a': 'dacccbcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'daaccbbdacccbcbddaacbda': {'a': 'daaccbbdaaa', 'b': 'daaccbbdacccbcbddaacbdab', 'c': 'daacbdaaac', 'd': 'daaccbbdaad'}, 'daadaaaa': {'a': 'daadaaaaa', 'b': 'daadaaaab', 'c': 'daadaaaac', 'd': 'ccb'}, 'daaccbbdacccbcbddadaac': {'a': 'daacbdaaaaaaa', 'b': 'daaccbbdacccbcbddadaacb', 'c': 'daaccbbdac', 'd': 'daaccbbdaaad'}, 'daacbbbbbbddc': {'a': 'daaccbcbbdba', 'b': 'daacbbbbbbddcb', 'c': 'accbddc', 'd': 'daacbbbbbbddcd'}, 'daacbbbbbbddcbb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbbddcbbd'}, 'daacbdaab': {'a': 'aa', 'b': 'daacbdaabb', 'c': 'daaccbbdabcc', 'd': 'daacbdaabd'}, 'dacccbcbdc': {'a': 'daaccbcba', 'b': 'daaccbcbbdb', 'c': 'daaccbbdabc', 'd': 'daaccd'}, 'dacccbcdacaa': {'a': 'daaccbbdadca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'daacbdaaacd': {'a': 'daacbdaaacda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdadca': {'a': 'daaccbcba', 'b': 'ccb', 'c': 'daaccbbdabc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbd': {'a': 'daacbbbda', 'b': 'daacbbbdb', 'c': 'dacccbbdc', 'd': 'daccbbdd'}, 'daaccbbdaccbbbbdddc': {'a': 'a', 'b': 'daacbbbbbbddcb', 'c': 'accbddc', 'd': 'daaccd'}, 'dd': {'a': 'dda', 'b': 'ccb', 'c': 'ccb', 'd': 'ddd'}, 'dda': {'a': 'ddaa', 'b': 'ccb', 'c': 'daacbdaadac', 'd': 'daad'}, 'daaccbcdaccbbbbb': {'a': 'daaccbcdaccbbbbba', 'b': 'daacbbbbbbb', 'c': 'daaccbcdab', 'd': 'daaccbcdaccbbbbbd'}, 'daaccbcddaacaa': {'a': 'daaccbcddaacaa', 'b': 'daaccbcddaacab', 'c': 'daacc', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbbbdb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daacbbbbbbbbdbb', 'c': 'ccb', 'd': 'daaccbbdaccbbbddbd'}, 'daaccbbdaccbbbbbdb': {'a': 'daacbbbbbbdca', 'b': 'daaccbbdacccbbbbbdbb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'daaccbcddcbbbbddd': {'a': 'daacbbbbbbdbbbddddada', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdad'}, 'daacaaaccbcbd': {'a': 'daacbbbbbbddcbbdda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'daacaaaccbcbdd'}, 'daaccbbdacccbcbddaabacbbbbbd': {'a': 'daaccbbdacccbcbddaabacbbbbbda', 'b': 'daacbbbbbdb', 'c': 'daaccbbdacccbcbddaabacbbbbbdc', 'd': 'daacbbbbbdd'}, 'daacbadaa': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbcdab', 'c': 'dac', 'd': 'daacbbbbbbaad'}, 'daaccbcdada': {'a': 'daaccbcdadaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbcdac', 'd': 'daaccbcdadad'}, 'daaccbbcbd': {'a': 'daaccbbcbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacab', 'd': 'daaccbbdad'}, 'daacbbbbbbbba': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbddbd'}, 'daaccbbdaccbbbddd': {'a': 'daaccbbda', 'b': 'daaccbbdaccbbbddb', 'c': 'daaccbbdaccbbbdddc', 'd': 'daacbbbdd'}, 'daaccbcdaacbdc': {'a': 'daaccbbdadca', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'daaccd'}, 'daadaaacbb': {'a': 'daaccbcdaacba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daaccbcddaacbd'}, 'daacbbbbbbaadaa': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbbdabab', 'c': 'daacbbbbbbaadaac', 'd': 'daacbbbbbbaad'}, 'dacccbcbbbbbbdbb': {'a': 'ccb', 'b': 'daacbbbbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbbbdbbd'}, 'daaccbcbbbbb': {'a': 'daaccbcbbbbba', 'b': 'daaccbcbbbbbb', 'c': 'daaccbcdab', 'd': 'daaccbcdaccbbbbbd'}, 'daacbbbbbda': {'a': 'dacccbcbbdaa', 'b': 'daccbbdc', 'c': 'daaccbbcbdac', 'd': 'daacbbbbbbdad'}, 'daaccbbdaccbbbbdd': {'a': 'daaccbbda', 'b': 'daaccbbdaccbbbddb', 'c': 'daaccbbdaccbbbbddc', 'd': 'daaccbbdaccbbbbddd'}, 'aac': {'a': 'daacbaca', 'b': 'aacb', 'c': 'aac', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcddaacbd': {'a': 'acccbbda', 'b': 'daaccbcddaacbdb', 'c': 'daaccbcddaacbdc', 'd': 'dacccbddd'}, 'dacccbcbbdadda': {'a': 'dacccbcbbdaddaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'daaccbbdadad'}, 'daaccbbdacccbcbddadaadd': {'a': 'daaccbbdacccbcbddadaadda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbdaad'}, 'daaccbcbbbbbba': {'a': 'daaccbbdadcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbddbd'}, 'ddaaaa': {'a': 'daacbdaaaaa', 'b': 'ddaaaab', 'c': 'daacbdaaaac', 'd': 'daaccbcdad'}, 'accbdddadadacbd': {'a': 'accbdddadadacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'accbdd'}, 'daaccbcb': {'a': 'daaccbcba', 'b': 'daaccbcbb', 'c': 'acccbbc', 'd': 'daaccbcbd'}, 'daacbbbbbbdcdaaa': {'a': 'daaa', 'b': 'daaccbcddaacab', 'c': 'daacbdaadac', 'd': 'daaad'}, 'daaccbcdaccbd': {'a': 'daaccbcdaccbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacab', 'd': 'daaccbcdaccbdd'}, 'daaccbcdaccbbd': {'a': 'daaccbcbbda', 'b': 'daaccbcbbdb', 'c': 'daccbbdc', 'd': 'daaccbcdaccbbdd'}, 'daacbbbbbbdaccb': {'a': 'daaccba', 'b': 'daaccbb', 'c': 'daacbc', 'd': 'daaccbcddaaccbd'}, 'daacbdaaacaba': {'a': 'daacbdaaacabaa', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'daaccbbdacccbcbddaabacbbbbbdc': {'a': 'daacbbbbbbdca', 'b': 'daacbbbbbbddcbb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daaccbcddaaaaac': {'a': 'daaccbcddaaaaaca', 'b': 'daacbdaaacb', 'c': 'daaccbcddaaaaacc', 'd': 'daacbbbbbbdbbbda'}, 'daaccbcddaacbac': {'a': 'daaccbcddaacbaca', 'b': 'dacb', 'c': 'aac', 'd': 'daaccd'}, 'daaccbcba': {'a': 'daacbbbbbbdbbddadaca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbaad'}, 'daaccbbdacccbcbddaacdc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'daacbbbbbbdbbbddab'}, 'dacbddd': {'a': 'dacbddda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'accbdddd'}, 'daacbbbbbbbdaa': {'a': 'daaccbcddaa', 'b': 'daacbbbbbbbdaab', 'c': 'daaccbcddaac', 'd': 'daaccbcdaccbdad'}, 'daccca': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'aab', 'c': 'acc', 'd': 'ccb'}, 'daaccbbdaccbbac': {'a': 'daaccbca', 'b': 'aacb', 'c': 'daacbacc', 'd': 'daaccd'}, 'daacbbbbbbddcbbdddddad': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbddcbbdddddadd'}, 'daaccbcdaccbb': {'a': 'daaccbcdaccbba', 'b': 'daaccbcdaccbbb', 'c': 'daacbbc', 'd': 'daaccbcdaccbbd'}, 'daacbbbddbd': {'a': 'daacbbbbbbddcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbddbdd'}, 'acccb': {'a': 'aca', 'b': 'acccbb', 'c': 'daccbc', 'd': 'accbd'}, 'dacbdddaad': {'a': 'dacbdddaada', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'daaccbcdaccbdadad'}, 'daaccbbdacccbcbddaacbb': {'a': 'daaccbbdacccbcbddaacbba', 'b': 'daaccbbdacccbbb', 'c': 'daaccbbdacccbcbddaacbbc', 'd': 'daaccbbdacccbcbddaacbbd'}, 'daaccbbdacbb': {'a': 'daaccbbdaccbba', 'b': 'daaccbbdacbbb', 'c': 'daacbbc', 'd': 'daaccbbd'}, 'dacccbddad': {'a': 'dacccbcbbdadda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'dacccbddadd'}, 'daacbdaaacda': {'a': 'daacbbbbbbdcdaaa', 'b': 'daaccbbdabab', 'c': 'daaccbcdac', 'd': 'daacbbbbbbdcdaad'}, 'daacbbbda': {'a': 'daaccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'dacbdd'}, 'daaccbbdacccbbbb': {'a': 'daaccbbdacccbbbba', 'b': 'daaccbbdacccbbbbb', 'c': 'daacbbc', 'd': 'daaccbbdacccbbbbd'}, 'daaccbcdaccbbbbba': {'a': 'daacbada', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbbadd'}, 'daaccbcbd': {'a': 'accbdda', 'b': 'dacccbcbbbdb', 'c': 'daaccbbdacab', 'd': 'daaccbbdad'}, 'dacbdddaabc': {'a': 'daacbaca', 'b': 'daaccbbdacccbdcb', 'c': 'acc', 'd': 'daacbad'}, 'daacbbbbbbdbbda': {'a': 'daacbada', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'daaccbbcbdaccbc': {'a': 'daaccbca', 'b': 'daaccbbcbdaccbcb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccbbdacccbcbddadaabd'}, 'daaccbbdaccbbbdddc': {'a': 'a', 'b': 'daacbbbbbbddcb', 'c': 'daaccbbdddcc', 'd': 'daaccd'}, 'daadaaacb': {'a': 'a', 'b': 'daadaaacbb', 'c': 'daadaaacbc', 'd': 'daadaaacbd'}, 'daacbbbbbbaadaacbd': {'a': 'daacbbbbbbaadaacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbdd'}, 'daacbdaaaaacab': {'a': 'daacbaca', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'aabbd'}, 'dacccbbbbbb': {'a': 'daacbbbbbba', 'b': 'daacbbbbbbb', 'c': 'daacbbbbbbbc', 'd': 'daacbbbbbbd'}, 'daadaaacbdaa': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daaccbcdaccbdaab', 'c': 'daaccbbcbdac', 'd': 'daaccbcdad'}, 'dacccbcbbbdd': {'a': 'daaccbbda', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbcdaab', 'd': 'daacbbbbdd'}, 'daaccbcddaaaaa': {'a': 'daaccbcddaaaaa', 'b': 'daacbdaaab', 'c': 'daaccbcddaaaaac', 'd': 'daacbbbbbbddcbdadd'}, 'acccbbdadd': {'a': 'dacccbcbbdadda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'daacbbbbbbdad'}, 'daaccbcbba': {'a': 'daaca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daaccbcdaacbbad'}, 'daaccbcbbdbd': {'a': 'daaccbcbbdbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddad'}, 'daacbbbbbbdbbbdd': {'a': 'daacbbbbbbdbbbdda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddd'}, 'daaccbbdacccbccd': {'a': 'daacbbbbbbdbbddadaca', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbad'}, 'daacbbbbbbbbdbbda': {'a': 'daacbbbbbbddcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'ddddda': {'a': 'accbdddadaddaa', 'b': 'daacbbbbbbaad', 'c': 'dacbdac', 'd': 'dddddad'}, 'daaccbbdaccbbca': {'a': 'dacccbcdacaa', 'b': 'ccb', 'c': 'acc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbaadaacbbd': {'a': 'daaccbcdaacbcbda', 'b': 'aacbbdb', 'c': 'acccbbc', 'd': 'daacbbbbbbdbbbdddaccbdd'}, 'daaccbbdacccbcbddadaa': {'a': 'daaccbbdada', 'b': 'daaccbbdacccbcbddadaab', 'c': 'daaccbbdacccbcbddadaac', 'd': 'daaccbbdacccbcbddadaad'}, 'daacbbbbbbddcbbdda': {'a': 'dacccbcbbdadda', 'b': 'daaccbcdaab', 'c': 'daacbbbbbbdac', 'd': 'daaccbbdaadd'}, 'daaccbcdda': {'a': 'daaccbcddaa', 'b': 'daaccbcdaab', 'c': 'daacbbbbbbdac', 'd': 'dacbdad'}, 'dacccbdddb': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbbdadcd'}, 'daaccbcbbdbb': {'a': 'ccb', 'b': 'daabb', 'c': 'ccb', 'd': 'aacbbdbd'}, 'daaccbcddaacbbb': {'a': 'daaccbba', 'b': 'daacbbbb', 'c': 'daacbbc', 'd': 'daacbbbd'}, 'daaccbbdacccbcbddadaacbc': {'a': 'daaccbcddaacbca', 'b': 'daaccbbdacccbcbddaacbcb', 'c': 'daaccbbdacccbcbddadaacbcc', 'd': 'daaccbbdacccbcd'}, 'daaccbcdaccbdd': {'a': 'daaccbbdacccbcbdda', 'b': 'ccb', 'c': 'daaccbbdadc', 'd': 'dacccbddd'}, 'dacccbcbbba': {'a': 'daaccbaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daacbbbbbbbdcd': {'a': 'daacbbbbbbddcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbdd'}, 'daaccbbdacccbcbddaabacbbbaaa': {'a': 'daaccbcddaacba', 'b': 'daaccbbdacccab', 'c': 'daacbbbbbbdbbbdddacc', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdbbbdddadab': {'a': 'daacbbbbbbaada', 'b': 'daaccbcdab', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbaad'}, 'daacbdaaaca': {'a': 'daaccbcddaacaa', 'b': 'daacbdaaacab', 'c': 'daacc', 'd': 'daacbad'}, 'dddddadaa': {'a': 'dddddadaaa', 'b': 'daaccbbdadab', 'c': 'accbdddadaddaac', 'd': 'daaad'}, 'daaccbcdaccbbb': {'a': 'daaccbcddaaccd', 'b': 'daaccbcdaccbbbb', 'c': 'acccbbc', 'd': 'daccbbbd'}, 'daacbbbbbbdbbbdddada': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbdddadab', 'c': 'dacbdac', 'd': 'daaccbcdaccbdadad'}, 'daacbbbbbbdacb': {'a': 'daaccbcdaacba', 'b': 'daaccbcddaacbbb', 'c': 'daaccbcdaacbc', 'd': 'daacbbbbbbdacbd'}, 'daacbbbbbbddcbdda': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdcdaab', 'c': 'daacbbbbbbdbbbdddac', 'd': 'daaccbbdacccbcbddadaadd'}, 'daacbdaaaaaa': {'a': 'daacbdaaaaaaa', 'b': 'daacbdaaaaab', 'c': 'daac', 'd': 'daaccbcdad'}, 'daaccbbdacbbbb': {'a': 'daaccbbdacccd', 'b': 'daaccbbdacbbbbb', 'c': 'acccbbc', 'd': 'daccbbbd'}, 'daaccbbdaccbbbdb': {'a': 'daaccbbdba', 'b': 'daacbbbbbbddcb', 'c': 'ccb', 'd': 'daacbbbbbbdbbddd'}, 'c': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccb'}, 'daaccbbdacccbdb': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'ccb', 'd': 'daaccbcbbdbd'}, 'daacbdaaacbdb': {'a': 'daacbbbbbbdca', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'aabbd'}, 'dddddadaaab': {'a': 'daacbadaa', 'b': 'daaccbcddcbbbbdacb', 'c': 'dddddadaaabc', 'd': 'daaccbcd'}, 'acccbbd': {'a': 'acccbbda', 'b': 'dacccbcbbdb', 'c': 'daccbbdc', 'd': 'daccbbdd'}, 'daaccbbcbdacc': {'a': 'daaccbcddaacbca', 'b': 'daaccbbcbdaccb', 'c': 'daaccbbdacccc', 'd': 'daaccbbdacccd'}, 'daacbdaaaccca': {'a': 'daaccbca', 'b': 'acccbbc', 'c': 'daacbdaaacccac', 'd': 'ccb'}, 'daacbbbbbbdbbb': {'a': 'ccb', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbd'}, 'daacbbbbbbdbbbd': {'a': 'daacbbbbbbdbbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbdd'}, 'daaccbcddcbbbbdacb': {'a': 'daaccbbdba', 'b': 'daacbbbbbbdbbddadadacbb', 'c': 'accbddc', 'd': 'daaccbcdd'}, 'daaccbbdacbbb': {'a': 'daaccbba', 'b': 'daaccbbdacbbbb', 'c': 'daacbbc', 'd': 'daacbbbd'}, 'aacbb': {'a': 'daacccd', 'b': 'daaccbcbbbb', 'c': 'daacbbbbc', 'd': 'aacbbd'}, 'daaccbbdacccbcbddaabacbbba': {'a': 'daaccbbdacccbcbddaabacbbbaa', 'b': 'daaccbcdab', 'c': 'daaccbbdacccbcbddaacdc', 'd': 'daacbbbad'}, 'daaccbcdaacbcbda': {'a': 'daaccbcddaa', 'b': 'dacccbdab', 'c': 'daaccbbcbdac', 'd': 'daaccbbdaad'}, 'daaccbbdacccbbbbbdbb': {'a': 'ccb', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbbbadd'}, 'dddd': {'a': 'dddda', 'b': 'ccb', 'c': 'ccb', 'd': 'ddddd'}, 'daacbbbbbdbbd': {'a': 'daaccbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'daaccbbdacbbbbb': {'a': 'daaccbbdacccbbbbbba', 'b': 'dacccbbbbbb', 'c': 'daaccbcddcb', 'd': 'dacccbbbbbd'}, 'daaccbbdaadada': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'daaccbbdadcd', 'c': 'dacbdac', 'd': 'daaad'}, 'daaccbbdacccbcbbba': {'a': 'daacbbbbbbdcdaa', 'b': 'daaccbcdab', 'c': 'daaccbbdabcc', 'd': 'daacbbbad'}, 'daacbbbbbbdbbddadadaa': {'a': 'daaccbbdacccbcbddaacdaa', 'b': 'accbddab', 'c': 'dacbdac', 'd': 'daaccbcdad'}, 'daaccbbdadadda': {'a': 'accbdddada', 'b': 'daacbbbbbbdbbbddddab', 'c': 'accbdddadadac', 'd': 'accbdddadadd'}, 'dacccbcbbdad': {'a': 'dacccbcbbdadda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'dacccbcbbdadd'}, 'daaccbcddaaaa': {'a': 'daaccbcddaaaaa', 'b': 'daacbdaaaab', 'c': 'daaccbbdac', 'd': 'daaccbcddaaaad'}, 'daaccbda': {'a': 'daacbdaa', 'b': 'daaccbbdacab', 'c': 'daaccbbcbdac', 'd': 'dacccbdad'}, 'daccbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbcdaacbcb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdabd'}, 'daaccbbdacccbcbbb': {'a': 'daaccbbdacccbcbbba', 'b': 'daaccbcdaccbbbb', 'c': 'acccbbc', 'd': 'daaccbbdacccbcbbbd'}, 'daaccbbdacccbbbbdc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'acbbb', 'c': 'accbddc', 'd': 'daacbbbad'}, 'dacccbdabd': {'a': 'daacbbbbbbdabda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbddcbdadd'}, 'daacbbbbbdbb': {'a': 'ccb', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbdbbd'}, 'daaccbd': {'a': 'daaccbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacbdc', 'd': 'daaccbdd'}, 'dacccbcbbbbb': {'a': 'daaccbcbbdba', 'b': 'dacccbcbbbbbb', 'c': 'daaccbcdab', 'd': 'dacccbcbbbbbd'}, 'aacb': {'a': 'daaccbcba', 'b': 'aacbb', 'c': 'accbddc', 'd': 'accbd'}, 'daacbdaabb': {'a': 'dacccda', 'b': 'acbbb', 'c': 'accbddc', 'd': 'dacbd'}, 'dddddb': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccb'}, 'daacbbbbbbddcbdada': {'a': 'daaccbbdaada', 'b': 'daacbbbbbbdbbbddab', 'c': 'daacbbbbbbddcbdadac', 'd': 'daaad'}, 'daaccbbdacccbcbddaac': {'a': 'daacbdaaaaaaa', 'b': 'daaccbbdacccbcbddaacb', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddaacd'}, 'daacbbbbbd': {'a': 'daacbbbbbda', 'b': 'daacbbbbbdb', 'c': 'acccbbc', 'd': 'daacbbbbbdd'}, 'daacbbbbbbbcdd': {'a': 'daacbbbbbbbada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbdd'}, 'daacbbbbbbdad': {'a': 'daacbbbbbbdbbbdddaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdadd'}, 'daacbbbbbbdbbddadacb': {'a': 'dacccda', 'b': 'daacbbbbbbdbbddadadacbb', 'c': 'accbddc', 'd': 'dacbd'}, 'daccbbdc': {'a': 'daaba', 'b': 'daaccbcbbdb', 'c': 'daaccbbdabc', 'd': 'daacbbbad'}, 'daaccbbdacab': {'a': 'daaba', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daaccbbdacccbbc': {'a': 'daaba', 'b': 'daaccbbdacccbbcb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbaadaacbd'}, 'daaccbbdacccbbbbd': {'a': 'daaccbbda', 'b': 'daaccbbdacccbbbbbdb', 'c': 'daaccbbdacccbbbbdc', 'd': 'daaccbbdaccbbbddd'}, 'daaccbbcbdacb': {'a': 'daaccbcddaacba', 'b': 'daaccbbcbdacbb', 'c': 'daacccbbc', 'd': 'daaccbbcbdacbd'}, 'cc': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'ccb'}, 'daaccbbcbdacbd': {'a': 'daccbbda', 'b': 'dacccbcbbbdb', 'c': 'daaccbbdacccbdc', 'd': 'dacccbddd'}, 'daaccbbdacccbcbbbd': {'a': 'daaccbbdacccbcbbbda', 'b': 'daaccbcbbdb', 'c': 'daccbbdc', 'd': 'daaccbbdaccbbbbdd'}, 'daacbbbbbbaa': {'a': 'a', 'b': 'ccb', 'c': 'daaccbbddcc', 'd': 'daacbbbbbbaad'}, 'daaccba': {'a': 'daaccbaa', 'b': 'daaccbab', 'c': 'daaccbbcbdaccbac', 'd': 'daacbad'}, 'acbbbd': {'a': 'daacbbbbbbddcbbdda', 'b': 'aacbbdb', 'c': 'accbddc', 'd': 'acbbbdd'}, 'daaccbbdacccbcbddc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daabb', 'c': 'daaccbbddcc', 'd': 'daaccd'}, 'daaccbbdacccbcbddaacdaaa': {'a': 'daaccbcddaaaa', 'b': 'daaccbbdacccbcbddaacdaaab', 'c': 'daacbdaaaac', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbbdacccbcbb': {'a': 'daaccbbdacccbcbba', 'b': 'daaccbbdacccbcbbb', 'c': 'daacbbc', 'd': 'daaccbbdacccbcbbd'}, 'daaccbbdacccbcbddaacbba': {'a': 'daaccbbdaccbbaaa', 'b': 'daaccbbdacccbdcb', 'c': 'daacbbbbbbdbbbdddacc', 'd': 'daaccbbdacccbcbddadaabd'}, 'daaccbbdacccbcd': {'a': 'daaccbbdacccbcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbd'}, 'dacccbcdac': {'a': 'dacccbcdaca', 'b': 'aacb', 'c': 'daacbacc', 'd': 'daacbbbbbbddcd'}, 'accbddddb': {'a': 'daacbbbbbbdca', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdacccbcbddaabacc': {'a': 'daaccca', 'b': 'daaccbbdacccbcbddaabaccb', 'c': 'daaccc', 'd': 'daacccd'}, 'daaccbbdddccbb': {'a': 'daacbbbbbbdca', 'b': 'acbbb', 'c': 'daaccbcdab', 'd': 'daaccbcdd'}, 'dacccbc': {'a': 'aca', 'b': 'dacccbcb', 'c': 'acc', 'd': 'dacccbcd'}, 'daaccbcdadadac': {'a': 'a', 'b': 'daacbbbbbbdbbddadadacb', 'c': 'aac', 'd': 'daacbbbbbbaad'}, 'da': {'a': 'daa', 'b': 'ccb', 'c': 'dac', 'd': 'daacbbbbbbaad'}, 'daaccbbcbda': {'a': 'dacccbcbbdadda', 'b': 'daccbbdc', 'c': 'daaccbbcbdac', 'd': 'daaccbbdaad'}, 'daaccbbdacccbcbddaacbca': {'a': 'daaccbcddaacbca', 'b': 'daaccbbdacccab', 'c': 'daacbacc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbdbbbddddada': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbddddadab', 'c': 'dacbdac', 'd': 'daaccbcdaccbdadad'}, 'daaccbbdacccbcbddaabaccbd': {'a': 'aacbbda', 'b': 'aacbbdb', 'c': 'daaccbbdacccbdc', 'd': 'dacccbddd'}, 'accbdda': {'a': 'dacccbcbbdaa', 'b': 'accbddab', 'c': 'daaccbcddaac', 'd': 'daaccbbdadad'}, 'daaccbbdacccbcbddaacddd': {'a': 'daaccbcdda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcdaccbdaad'}, 'daacaaacb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'acbbb', 'c': 'accbddc', 'd': 'daacbdaaacccbcd'}, 'daaccbbdacccbcda': {'a': 'daaa', 'b': 'daaccbcdab', 'c': 'daaccbcdac', 'd': 'daacbbbbbbddcbdad'}, 'daaccbbdaccbbbbddc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daabb', 'c': 'accbddc', 'd': 'aabbd'}, 'daaccbcddaacab': {'a': 'daaccbcbbdba', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daaccd'}, 'daaccbbdaadad': {'a': 'daaccbbdaadada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcdad'}, 'acccbbdaaa': {'a': 'acccbbdaaaa', 'b': 'acccbbdaaab', 'c': 'daaccbbdac', 'd': 'daaccbbdaaad'}, 'daaccbbdacccbcbddaabacbbbaa': {'a': 'daaccbbdacccbcbddaabacbbbaaa', 'b': 'daaccbcdab', 'c': 'daaccbbdacccbcbddaabacbbbaac', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbdcdaad': {'a': 'daacbbbbbbdcdaada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daacbbbbbbaadaacbda': {'a': 'daacbbbbbbdbbbddaa', 'b': 'daaccbcddaacab', 'c': 'daacbbbbbbdac', 'd': 'daaccbcdaccbdaad'}, 'daaccbbdacccbcb': {'a': 'daccbba', 'b': 'daaccbbdacccbcbb', 'c': 'daaccbcdaacbc', 'd': 'daaccbbdacccbcbd'}, 'dddddadda': {'a': 'accbdddadaddaa', 'b': 'daaccbbdadcd', 'c': 'dacbdac', 'd': 'daaccbcdadad'}, 'acccbbdaaaad': {'a': 'daaccbcddaaaada', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'daacbbbbbbddcbdadd'}, 'daaccbcddaacba': {'a': 'daaccbcddaacba', 'b': 'acccbbc', 'c': 'daaccbcddaacbac', 'd': 'daaccbcdad'}, 'daaccbbdb': {'a': 'daaccbbdba', 'b': 'daabb', 'c': 'ccb', 'd': 'daaccbbdacccbbbbbad'}, 'acccbba': {'a': 'a', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daaccd'}, 'daacbbbbbbbbdc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'acb', 'c': 'accbddc', 'd': 'daacbbbbbbbad'}, 'daacbbbbbbba': {'a': 'daaccbbdadcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbbad'}, 'daaccbcdaccbdadad': {'a': 'daaccbcdaccbdadada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdaadad'}, 'acc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'accb', 'c': 'accc', 'd': 'ccb'}, 'accbddc': {'a': 'daacbbbbbbdca', 'b': 'daaccbcbbdbb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbbcb', 'c': 'daaccbbdabcc', 'd': 'daaccbbdacccbcbddadaabd'}, 'daaccbbdba': {'a': 'a', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbbdadcd'}, 'daacbbbbbbddcbd': {'a': 'daacbbbbbbddcbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbddcbdd'}, 'daaccbbdacccbbdb': {'a': 'daacbbbbbbaa', 'b': 'daabb', 'c': 'daaccbbdabab', 'd': 'daacbbbbbbdbbddd'}, 'daacbbbbbbdbbddadada': {'a': 'daacbbbbbbdbbddadadaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'daacbbbbbbdbbddadadac', 'd': 'daacbbbbbbdbbddadad'}, 'accbdddadad': {'a': 'accbdddadada', 'b': 'ccb', 'c': 'daacbbbbbbdca', 'd': 'accbdddadadd'}, 'accbdddadadacbdad': {'a': 'accbdddadadacbdada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'accbdddadadacbdadd'}, 'daaccbbdacccbcbddaacdd': {'a': 'daaccbcdda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddaacddd'}, 'daadaaacbda': {'a': 'daadaaacbdaa', 'b': 'daab', 'c': 'daac', 'd': 'accbdddadadacbdadad'}, 'daaccbdd': {'a': 'daccbbda', 'b': 'accbddddb', 'c': 'daaccbbdadc', 'd': 'dacccbddd'}, 'daacaaaccbcbddaabd': {'a': 'dacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbd'}, 'daaad': {'a': 'daadaa', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daaccbbdaccbbbddb': {'a': 'daacbbbbbbbbdbbda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbbdaccbbbddbd'}, 'accbdddadadacbdadda': {'a': 'accbdddada', 'b': 'daacbbbbbbdbbbddddadab', 'c': 'dacbdac', 'd': 'accbdddadadacbdadad'}, 'dacccd': {'a': 'dacccda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbdcd'}, 'daacbbbbbbddcbbddddd': {'a': 'daacbbbbbbddcbbddddda', 'b': 'accbddddb', 'c': 'acbbbddc', 'd': 'daacbbbbbbddcbbddddd'}, 'dacbdddaabb': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daacbdaabb', 'c': 'accbddc', 'd': 'dacbd'}, 'daaccbbdaccbc': {'a': 'daaccbcddaacbca', 'b': 'daaccbbdacccbcb', 'c': 'daaccbcddaacbbac', 'd': 'daaccbbdacccbcd'}, 'accbdddadaddaac': {'a': 'daaa', 'b': 'daacaaaccbcbddaab', 'c': 'daac', 'd': 'daacbdaaaacd'}, 'aca': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'ccb'}, 'daacaaaccbcbdd': {'a': 'daacaaaccbcbdda', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'daaccbbdad'}, 'daacbbbbbbbaddaa': {'a': 'daaccbbdaada', 'b': 'daaccbcdaab', 'c': 'daacbdaadac', 'd': 'daaccbcdad'}, 'daab': {'a': 'daaba', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccd'}, 'daacbbbbbbaadaacbb': {'a': 'dacccda', 'b': 'acbbb', 'c': 'daacbbbbc', 'd': 'daacbbbbbbaadaacbbd'}, 'daaccbbdaccbb': {'a': 'daaccbbdaccbba', 'b': 'daaccbbdaccbbb', 'c': 'daaccbbdaccbbc', 'd': 'daaccbbd'}, 'daacbdaaaa': {'a': 'daacbdaaaaa', 'b': 'daacbdaaaab', 'c': 'daacbdaaaac', 'd': 'daacbbbbbbddcbdadd'}, 'dacccbcbbbbda': {'a': 'dacccbcbbdaa', 'b': 'daacbbbbbbdbbddadadacb', 'c': 'daaccbbcbdac', 'd': 'daacbbbbbbdad'}, 'daaccbbdacccc': {'a': 'daaccbbdacccca', 'b': 'daacccb', 'c': 'daaccbbdaccccc', 'd': 'daaccbbdacccccd'}, 'daaccbbdaada': {'a': 'daaccbcddaa', 'b': 'accbddab', 'c': 'daaccbbdaadac', 'd': 'daaccbbdaadad'}, 'daaccbbdacccbbbbbaac': {'a': 'dacccbcdaca', 'b': 'aacb', 'c': 'aac', 'd': 'daacbdcd'}, 'daaccbbdacccbcbbbda': {'a': 'daaccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'daaccbbdadd'}, 'daccbbdd': {'a': 'daaccbbda', 'b': 'dacccbdddb', 'c': 'daab', 'd': 'daacbbbdd'}, 'daaccbbdacccbcbddaacdaaab': {'a': 'daaca', 'b': 'daacbdaabb', 'c': 'daaccbbdabcc', 'd': 'daaccbcd'}, 'daacbdaaacab': {'a': 'daacbdaaacaba', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daacbbbbbbdabd'}, 'daaccbbdacccbbbbbbad': {'a': 'daacbbbbbbdabda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbbdacccbbbbbad'}, 'daaccbbdadadd': {'a': 'daaccbbdadadda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddaadadad'}, 'daaccbcddcbb': {'a': 'ccb', 'b': 'daaccbcddcbbb', 'c': 'ccb', 'd': 'daaccbcddcbbbd'}, 'daaccbcddaaaaacab': {'a': 'daaba', 'b': 'acbbb', 'c': 'daaccbbdabcc', 'd': 'daaccbbdacccd'}, 'daacbdaaaacd': {'a': 'daacbbbbbbddcdaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbcdad'}, 'daaccbbdaccbbbba': {'a': 'daaccbcddaacba', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daacbbbbbbdbbddd'}, 'dacccbcbbd': {'a': 'dacccbcbbda', 'b': 'dacccbcbbdb', 'c': 'daacbbbbbbdbbddadadacb', 'd': 'daaccbcdaccbdd'}, 'daaccbbdacccbcbddaabaccb': {'a': 'daaccbbdacccbcbddaabaccba', 'b': 'daaccbb', 'c': 'daadaaccbc', 'd': 'daaccbbdacccbcbddaabaccbd'}, 'daacbbbbbbddcbdd': {'a': 'daacbbbbbbddcbdda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbcddd'}, 'acccbbdaaab': {'a': 'daacbbbbbbdcdaa', 'b': 'dacbdddaabb', 'c': 'acccbbdaaabc', 'd': 'daacbdaabd'}, 'daacbdaaacabaa': {'a': 'daacbbbbbbdbbddaca', 'b': 'ccb', 'c': 'daaccbbddcc', 'd': 'ccb'}, 'daaccbbdac': {'a': 'daaccbbdaca', 'b': 'daaccbbdacb', 'c': 'daaccbbdacc', 'd': 'daaccbcd'}, 'dacccbcbbdaddaabb': {'a': 'daacbbbbbbdbbbdddaccba', 'b': 'acbbb', 'c': 'accbddc', 'd': 'daaccbcdd'}, 'daacbbbbbbdbbbddddda': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbddddab', 'c': 'daacbbbbbbdac', 'd': 'daacbbbbbbdbbbddddadd'}, 'daaccbcdadadaa': {'a': 'ddaa', 'b': 'daaccbbdadcd', 'c': 'dacbdac', 'd': 'daacbbbbbbaad'}, 'daacbbbbd': {'a': 'daacbbbda', 'b': 'daacbbbbdb', 'c': 'daaccbbdacccbdcb', 'd': 'daacbbbbdd'}, 'daaccbbdacca': {'a': 'daaccbcddaacbca', 'b': 'daaccbbdacccab', 'c': 'aac', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbcbbda': {'a': 'daaccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'dacccbcbbdadd'}, 'daacbbbbbbdbbbdddaccbd': {'a': 'daaccbcdaccbda', 'b': 'aacbbdb', 'c': 'daaccbcddaacab', 'd': 'daacbbbbbbdbbbdddaccbdd'}, 'daaccbcdaccbbbbd': {'a': 'daacbbbda', 'b': 'daaccbcdaccbbbbdb', 'c': 'daaccbbcbbdc', 'd': 'daacbbbbdd'}, 'daaccbbdadd': {'a': 'daaccbbdacccbcbddaada', 'b': 'ccb', 'c': 'acbbbddc', 'd': 'acccbbdadd'}, 'daacbdaaacccbd': {'a': 'aacbbda', 'b': 'daaccbbdacccbdb', 'c': 'daaccbbdacccbdc', 'd': 'daacbdaaacccbdd'}, 'daaccbbdacccbcbddaacbdab': {'a': 'daaccbbdaba', 'b': 'daaccbbdacccbcbddaacbdabb', 'c': 'daaccbbdabc', 'd': 'daacbbbad'}, 'daabbd': {'a': 'daacbdaabda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbd'}, 'daaccbbdacccbdcb': {'a': 'daaccbcbbdba', 'b': 'daaccbcbbdb', 'c': 'accbddc', 'd': 'daaccbcdd'}, 'daacbbbbbbdbbbddddadab': {'a': 'daacbbbbbbddcda', 'b': 'daaccbab', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbad'}, 'daaccbcddaac': {'a': 'daaccbcddaaca', 'b': 'daaccbcddaacb', 'c': 'daaccbcddaacc', 'd': 'daaccbcd'}, 'accbd': {'a': 'accbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'accbdd'}, 'daacbbbbbbbadd': {'a': 'daacbbbbbbbadda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbdd'}, 'dacccbcbbbbbd': {'a': 'dacccbcbbbbbda', 'b': 'daacbbbbbbddb', 'c': 'accbddc', 'd': 'daaccbcdaccbbbbbdd'}, 'daaccbbdadad': {'a': 'daaccbbdacccbcbddaadada', 'b': 'ccb', 'c': 'daacbbbbbbdca', 'd': 'daaccbbdadadd'}, 'daacbbbbbbbada': {'a': 'daaccbcda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'daaccbbdacccbcbddaabacbbb': {'a': 'daaccbbdacccbcbddaabacbbba', 'b': 'daaccbbdacccbcbddaabacbbbb', 'c': 'acccbbc', 'd': 'daccbbbd'}, 'daaccbcdaccbbbbdb': {'a': 'daacbbbbbbdca', 'b': 'daaccbcddcb', 'c': 'ccb', 'd': 'daaccbbdacccbbbbbbad'}, 'daacaaaccba': {'a': 'daacbdaaabca', 'b': 'ccb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbdbbbdddaadd': {'a': 'daacbbbbbbdbbbdddaadda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbbbbbbddcbdadd'}, 'dacbdddad': {'a': 'dacbdddaada', 'b': 'ccb', 'c': 'daacbbbbbbdca', 'd': 'daaccbbdadad'}, 'daaccbcdaccd': {'a': 'daacbbbbbbaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbdcd'}, 'daaccbcddaaaaaccacb': {'a': 'daaccbcddaacbca', 'b': 'daaccbcddaaaaaccacbb', 'c': 'daacaaaccbc', 'd': 'daaccbcddaaaaaccacbd'}, 'daaccbbdc': {'a': 'daacbbbbbbdbbddadaca', 'b': 'daaccbcddcbbbbdacb', 'c': 'acc', 'd': 'daacbbbad'}, 'daaca': {'a': 'daacaa', 'b': 'accbddc', 'c': 'daacac', 'd': 'daacbbbbbbdbbbddab'}, 'daaccbbdaccbbb': {'a': 'daaccbba', 'b': 'daaccbbdaccbbbb', 'c': 'daacbbc', 'd': 'daaccbbdaccbbbd'}, 'daacbbbdb': {'a': 'daaccbcbbdba', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'dacccbbbbbad'}, 'accbdddada': {'a': 'dacccbcbbdaddaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'accbdddadad'}, 'aacbbdbd': {'a': 'daacbbbbbbdcda', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbad'}, 'daacbbbbbbaada': {'a': 'daacbbbbbbaadaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbaad'}, 'daaccbbdacccbcbddaabab': {'a': 'daaccbbdacccbcbddaababa', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daaccd'}, 'daacbbbbbbbbdad': {'a': 'daacbbbbbbdbbbdddda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbddcbbdddd'}, 'daaccbcddaacbcaa': {'a': 'daacbbbbbbdbbddaca', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'ddaa': {'a': 'ddaaa', 'b': 'accbddab', 'c': 'daac', 'd': 'daaad'}, 'daaccbcdaacbd': {'a': 'daaccbbdacccbcbddaacbacbda', 'b': 'aabb', 'c': 'daaccbcdaacbdc', 'd': 'dacbddd'}, 'daacbbbbbddc': {'a': 'daaccbcbbdba', 'b': 'daabb', 'c': 'accbddc', 'd': 'daacbbbbbbddcd'}, 'ddd': {'a': 'dddda', 'b': 'ccb', 'c': 'ccb', 'd': 'dddd'}, 'daaccbbdacccbcbddaabacbbbbb': {'a': 'daaccbcdaccbbbbba', 'b': 'dacccbbbbbb', 'c': 'daaccbcddcb', 'd': 'daaccbbdacccbcbddaabacbbbbbd'}, 'daaccbcddaaaada': {'a': 'daaccbbdaada', 'b': 'daaccbbdadc', 'c': 'daacbdaadac', 'd': 'daaad'}, 'daaccbcddcbbbb': {'a': 'ccb', 'b': 'daabb', 'c': 'ccb', 'd': 'daaccbcddcbbbbd'}, 'daacbbbbbbddcbbdddd': {'a': 'daacbbbbbbddcbbdddda', 'b': 'accbddddb', 'c': 'accbddc', 'd': 'daacbbbbbbddcbbddddd'}, 'daaccbba': {'a': 'daaccbcddaacba', 'b': 'daaccbcbbdbb', 'c': 'daaccbbcbdaccbac', 'd': 'daacbbbad'}, 'daacbdaaaaab': {'a': 'aa', 'b': 'aacb', 'c': 'daaccbbdaccca', 'd': 'daacbdaabd'}, 'dacccbcbbbbbb': {'a': 'daacbbbbbbdca', 'b': 'daacbbbbbbbb', 'c': 'daaccbcdab', 'd': 'dacccbcbbbbbbd'}, 'daaccbcddcbbbbdd': {'a': 'daacbbbbbbddcbbdda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcddcbbbbddd'}, 'daaccbbdacccbdd': {'a': 'dacccbddda', 'b': 'dacccbdddb', 'c': 'daaccbbdacccbcbddc', 'd': 'daccbbdd'}, 'daadac': {'a': 'aca', 'b': 'daaccbcbbdbb', 'c': 'daacbacc', 'd': 'ccb'}, 'daacbbbbbbbdc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'acb', 'c': 'accbddc', 'd': 'daacbbbbbbbdcd'}, 'daccbbda': {'a': 'acccbbdaa', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'dacccbddadd'}, 'daaccbbdd': {'a': 'daaccbbda', 'b': 'daaccbbddb', 'c': 'daaccbbddc', 'd': 'daaccbbddd'}, 'daaccca': {'a': 'daacbaca', 'b': 'daaccbcdab', 'c': 'ac', 'd': 'ccb'}, 'daacbbbbbbdadd': {'a': 'daacbbbbbbddcbbdddda', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbddcbbdddd'}, 'accbdddd': {'a': 'accbddda', 'b': 'accbddddb', 'c': 'acbbbddc', 'd': 'accbdddd'}, 'dddddada': {'a': 'dddddadaa', 'b': 'daacbbbbbbdbbbddab', 'c': 'dacbdac', 'd': 'daacbbbbbbaad'}, 'daaccbcddaaaaaccacbda': {'a': 'daacbbbbbbdbbbddaa', 'b': 'daaccbcdaab', 'c': 'daacbbbbbbdac', 'd': 'daaccbcdaccbdaad'}, 'daaccbbcbdaccbcbd': {'a': 'accbdda', 'b': 'dacccbcbbdb', 'c': 'daccbbdc', 'd': 'daaccbbdad'}, 'dacbb': {'a': 'acccbba', 'b': 'daaccbcbbbb', 'c': 'daacbbbbc', 'd': 'aacbbd'}, 'daacbdaaaaac': {'a': 'daacbdaaaaaca', 'b': 'daacbdaaacb', 'c': 'daacbdaaacc', 'd': 'daacbdaaaacd'}, 'daaccbcddaaccc': {'a': 'daacbdaaaccca', 'b': 'daaccbbdaccb', 'c': 'daaccbbdaccc', 'd': 'daaccbbdacccd'}, 'daaccbbdddcc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daaccbbdddccb', 'c': 'daaccbbdabc', 'd': 'daacbbbbbbdbbbddab'}, 'daadaaac': {'a': 'daaca', 'b': 'daadaaacb', 'c': 'daacc', 'd': 'ccb'}, 'daaccbcdaccbbdd': {'a': 'daaccbbda', 'b': 'daaccbbddb', 'c': 'daab', 'd': 'daacbbbdd'}, 'aacbbdbb': {'a': 'ccb', 'b': 'aacbbdbbb', 'c': 'ccb', 'd': 'aacbbdbbd'}, 'daaccbcbbdba': {'a': 'daaccbbdba', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbdbbddadadacbd': {'a': 'daacbbbbbbaadaacbda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacccbddadd'}, 'daacbbbbbbdbbbdddaa': {'a': 'dacccbcbbdadda', 'b': 'acccbbdab', 'c': 'daaccbcddaac', 'd': 'daacbbbbbbdbbbdddaad'}, 'daccbbb': {'a': 'daaccbbdacccd', 'b': 'daaccbcdaccbbbb', 'c': 'acccbbc', 'd': 'daccbbbd'}, 'acccbbdaa': {'a': 'acccbbdaaa', 'b': 'dacbdddaab', 'c': 'daaccbbdac', 'd': 'daaccbbdaad'}, 'daaccbcdaacba': {'a': 'aa', 'b': 'daaccbcdab', 'c': 'daaccbbdacccbcbbac', 'd': 'daacbad'}, 'dacbdddaabdaa': {'a': 'dacbdddaabdaaa', 'b': 'acccbbdab', 'c': 'daac', 'd': 'daacbbbbbbddcbdadd'}, 'daacaaaccbcb': {'a': 'daacbbbbbbdca', 'b': 'daaccbcdaacbcbb', 'c': 'accbddc', 'd': 'daacaaaccbcbd'}, 'dacccbdada': {'a': 'daaccbcddaa', 'b': 'daaccbcdaab', 'c': 'daac', 'd': 'daaccbbdacccbcbddaadadad'}, 'daacaaaccbcbddaa': {'a': 'daaccbbdada', 'b': 'daacaaaccbcbddaab', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddadaad'}, 'daacbbbbbba': {'a': 'daacbbbbbbaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbbadd'}, 'dacccbcbbdaa': {'a': 'dacccbcbbdaddaa', 'b': 'dacbdddaab', 'c': 'daaccbbdac', 'd': 'daaccbbdaad'}, 'daaccbbdacccbcbddadd': {'a': 'dacccbcbbdadda', 'b': 'daacbbbbbbdbbbddab', 'c': 'daaccbbdadc', 'd': 'acccbbdadd'}, 'dacccbcda': {'a': 'daaccbbdaccbbaa', 'b': 'ccb', 'c': 'dacccbcdac', 'd': 'daaccbcdad'}, 'daad': {'a': 'daada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbdbbbddab'}, 'daacbaca': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'daaccbbdacccbcbddadaabb': {'a': 'daaccbaa', 'b': 'daacbdaabb', 'c': 'accbddc', 'd': 'dacbd'}, 'dacbdad': {'a': 'dddda', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daacbdaad'}, 'daacbdaaacccbcda': {'a': 'daaa', 'b': 'daaccbbdacccab', 'c': 'daacbbbbbbdbbbdddacc', 'd': 'daacbbbad'}, 'daaccbcbbdd': {'a': 'dacccbddda', 'b': 'daaccbcbbddb', 'c': 'daab', 'd': 'daacbbbdd'}, 'daaccbbdacccbcbddaabacb': {'a': 'daccbba', 'b': 'daaccbbdacccbcbddaabacbb', 'c': 'daaccbbc', 'd': 'daaccbbdaadacbd'}, 'daaccbbdacccbcbddaacbcbb': {'a': 'daaccbba', 'b': 'daacbbb', 'c': 'daacbbc', 'd': 'daccbbd'}, 'daaccd': {'a': 'a', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccd'}, 'daacbdaaaab': {'a': 'daaca', 'b': 'dacbdddaabb', 'c': 'daaccbbdaccca', 'd': 'daaccbcd'}, 'daaccbcddaaaaacca': {'a': 'daacaaa', 'b': 'daacbbc', 'c': 'daaccbcddaaaaaccac', 'd': 'daacbbbbbbdbbbddab'}, 'daacbbbbbbaad': {'a': 'daacbbbbbbaada', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbbbbbbaad'}, 'daccbda': {'a': 'daacbbbbbbdbbbddaa', 'b': 'dacccbcbdc', 'c': 'daaccbbcbdac', 'd': 'accbdddadadacbdad'}, 'daaccbbdacccbccbbd': {'a': 'dacccbddda', 'b': 'daaccbbdacccbcbbdb', 'c': 'dacccbbdc', 'd': 'daaccbbdd'}, 'daacbbbbbbdbbbddaa': {'a': 'daaccbcddaa', 'b': 'acccbbdab', 'c': 'dacbdac', 'd': 'daacbdaad'}, 'ddaaa': {'a': 'ddaaaa', 'b': 'daaccbbdacccbcbddaacdaaab', 'c': 'daacbdaaaac', 'd': 'daaccbcdad'}, 'daacbbbbbbddcbdac': {'a': 'daaccbcba', 'b': 'aacb', 'c': 'daacbacc', 'd': 'daaccd'}, 'daacbbbbbbbbc': {'a': 'ccb', 'b': 'acb', 'c': 'ccb', 'd': 'daacbbbbbbddb'}, 'daacaaaccbcbdda': {'a': 'daacaaaccbcbddaa', 'b': 'daaccbbdab', 'c': 'daaccbbdac', 'd': 'dacccbcbbdad'}, 'daaccbcdaccbdadada': {'a': 'accbdddada', 'b': 'daacbbbbbbdbbbdddadab', 'c': 'dacbdac', 'd': 'accbdddadadacbdadad'}, 'aabbdd': {'a': 'dda', 'b': 'ccb', 'c': 'ccb', 'd': 'accbdddadadacbdadd'}, 'daaccbbdacccd': {'a': 'a', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbad'}, 'daaccbcbbddb': {'a': 'daaccbcbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daacbdcd'}, 'daaccbbdaccba': {'a': 'daaccbcddaacaa', 'b': 'acccbbc', 'c': 'daacbac', 'd': 'daaccd'}, 'daacbdaadac': {'a': 'daaca', 'b': 'daacbbbbbbdbbbdddaccb', 'c': 'daacc', 'd': 'daaccd'}, 'daaccbbdaccb': {'a': 'daaccbbdaccba', 'b': 'daaccbbdaccbb', 'c': 'daaccbbdaccbc', 'd': 'daaccbbdacccbd'}, 'aacbbdbbd': {'a': 'daaccbbdba', 'b': 'ccb', 'c': 'ccb', 'd': 'daaccbcddcbbbd'}, 'daaccbcddaaccbb': {'a': 'daaccbbdaccbba', 'b': 'daaccbb', 'c': 'daaccbbdacccbbc', 'd': 'daaccbbd'}, 'daacbbbbbbdbbbdddab': {'a': 'daacbbbbbbbbdbbda', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'daacbad'}, 'aabb': {'a': 'ccb', 'b': 'ccb', 'c': 'ccb', 'd': 'aabbd'}, 'daaccbcddd': {'a': 'daacbbbbbbdbbbddddada', 'b': 'ccb', 'c': 'accbddc', 'd': 'daacbbbbbbdad'}, 'accbddab': {'a': 'a', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccd'}, 'daaccbbdaadd': {'a': 'daacbbbbbbdbbbdddaada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddadaadd'}, 'daacbbbbbbdacbd': {'a': 'daccbbda', 'b': 'daacbbbbbbdacbdb', 'c': 'daaccbbdacccbcbddc', 'd': 'dacccbddd'}, 'daccbd': {'a': 'daccbda', 'b': 'aabb', 'c': 'accbddc', 'd': 'dacbddd'}, 'daaccbbdaccbbc': {'a': 'daaccbbdaccbbca', 'b': 'daaccbbdacccbbcb', 'c': 'daaccbbdabcc', 'd': 'daaccbbdacccbcd'}, 'dacccbcb': {'a': 'daaccbcba', 'b': 'dacccbcbb', 'c': 'accbddc', 'd': 'dacccbcbd'}, 'daaccbcbbbbd': {'a': 'daacbbbbbda', 'b': 'daaccbcbbbbdb', 'c': 'daaccbbcbbdc', 'd': 'daacbbbbbdd'}, 'daacbbbbc': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'daabb', 'c': 'daaccbcdab', 'd': 'daaccbcddcbd'}, 'daaccbcddaacbdb': {'a': 'daaccbcbbdba', 'b': 'daaccbcbbdbb', 'c': 'ccb', 'd': 'daacbbbbbbdabd'}, 'acccbbdaaabcb': {'a': 'daaccbbdacccbcbddaacbdabba', 'b': 'daacbdaabb', 'c': 'accbddc', 'd': 'daacbbbbbbaadaacbd'}, 'daaccbcddaa': {'a': 'daaccbcddaaa', 'b': 'daaccbbdab', 'c': 'daaccbcddaac', 'd': 'daacbdaad'}, 'daaccbc': {'a': 'daaccbca', 'b': 'daaccbcb', 'c': 'daaccbbcbdaccbac', 'd': 'daaccbcd'}, 'daadaaaac': {'a': 'daaccbcddaacaa', 'b': 'daacb', 'c': 'daaccbbdacccbcbddaabac', 'd': 'daaccbbdadcd'}, 'accbdddadaddaaa': {'a': 'daaccbcddaaaa', 'b': 'accbdddadaddaaab', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddaadadad'}, 'daaccbbdacccbcbddaacba': {'a': 'daaa', 'b': 'daccbbdc', 'c': 'daaccbbdacccbcbddaacbac', 'd': 'daacbbbad'}, 'daaccbcddaaccb': {'a': 'daaccbbdaccba', 'b': 'daaccbcddaaccbb', 'c': 'daaccbbdaccbc', 'd': 'daaccbcddaaccbd'}, 'daacccbbc': {'a': 'daacbaca', 'b': 'daaccbbdacccbbcb', 'c': 'daaccbbdabcc', 'd': 'daaccbbdacccbcbddadaabd'}, 'daacbbbbbbdbbbdddaccba': {'a': 'daaccbaa', 'b': 'daaccbcdab', 'c': 'acc', 'd': 'daacbbbbbbaad'}, 'daaccbbdacccbcbddaadadad': {'a': 'daaccbcdaccbdadada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaad'}, 'daaccbcddaacbcb': {'a': 'daaccbcba', 'b': 'daaccbbdacccbbcbb', 'c': 'acccbbc', 'd': 'dacccbcbbd'}, 'daaccbbcbdaccb': {'a': 'daaccbbcbdaccba', 'b': 'daaccbb', 'c': 'daaccbbcbdaccbc', 'd': 'daaccbcddaacbd'}, 'daaccbbdaadacbc': {'a': 'daacbdaaabca', 'b': 'daaccbcdaacbcb', 'c': 'daaccbbdabcc', 'd': 'dacccbcd'}, 'daadaaccb': {'a': 'daaba', 'b': 'daaccbbdacccbcbddaacbcb', 'c': 'daadaaccbc', 'd': 'daaccbcdaacbd'}, 'daacbbbbbbbdaab': {'a': 'a', 'b': 'daaccbbdacccbdcb', 'c': 'accbddc', 'd': 'daacbdaabd'}, 'accbdddadadd': {'a': 'accbdddadadda', 'b': 'ccb', 'c': 'ccb', 'd': 'daaad'}, 'daaccbcbbdbda': {'a': 'daaccbcdaa', 'b': 'ccb', 'c': 'daacbbbbbbddcbdac', 'd': 'daaccbcdad'}, 'daacbda': {'a': 'daacbdaa', 'b': 'daab', 'c': 'daaccbbcbdac', 'd': 'dacbdad'}, 'daaccbbdaadacbb': {'a': 'daaccbcdaacbba', 'b': 'daccbbb', 'c': 'daacbbc', 'd': 'daaccbbdaadacbbd'}, 'aacbbdd': {'a': 'daaccbbda', 'b': 'accbddddb', 'c': 'daaccbbdadc', 'd': 'aacbbdd'}, 'daaccbbdacccbccb': {'a': 'daaccbbdacccbccba', 'b': 'daaccbbdacccbccbb', 'c': 'daaccbcdaacbc', 'd': 'daaccbbdacccbccbd'}, 'daaccbbdacccbcbddaabacbbbaac': {'a': 'daadaaaabaa', 'b': 'aacb', 'c': 'aac', 'd': 'dacccd'}, 'daaccbbdadab': {'a': 'daadaa', 'b': 'daabb', 'c': 'accbddc', 'd': 'daaccbcdad'}, 'daaccbbdacccbcbddaacbdabb': {'a': 'daaccbbdacccbcbddaacbdabba', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daacbdaaacccbcd'}, 'daaccbbdacccbcbddaada': {'a': 'dacbdddaa', 'b': 'daaccbbdadab', 'c': 'daaccbbdac', 'd': 'daaccbbdacccbcbddaadad'}, 'daaccbbdacccbcbdb': {'a': 'daaccbcbbdba', 'b': 'aacbbdb', 'c': 'ccb', 'd': 'daaccbcbbdbd'}, 'daacbbbbbbdbbdda': {'a': 'daacbbbbbbdbbddaa', 'b': 'ccb', 'c': 'daacbbbbbbdbbddac', 'd': 'daacbbbbbbdbbddad'}, 'daccbbbd': {'a': 'acbbbdda', 'b': 'daacbbbdb', 'c': 'daaccbcddcbbbbdacb', 'd': 'daccbbbdd'}, 'daacbbbbbbdbbddadadacc': {'a': 'daacbaca', 'b': 'daacbbbbbbdbbddadaccb', 'c': 'aac', 'd': 'daacbbbbbbdbbddadadaccd'}, 'daacbbbbbbdbbddadadaccdc': {'a': 'ccb', 'b': 'ccb', 'c': 'daaccbcddc', 'd': 'ccb'}, 'daaccbbdaccbbbbba': {'a': 'daaccbbdaccbbbbbaa', 'b': 'daaccbbdabab', 'c': 'accbddc', 'd': 'daaccbbdacccbbbbbad'}, 'daaccbcddaaaaacaab': {'a': 'daaccbcddaaaaacaaba', 'b': 'daacbbc', 'c': 'accbddc', 'd': 'daaccd'}, 'daaba': {'a': 'daaba', 'b': 'ccb', 'c': 'acc', 'd': 'ccb'}, 'acb': {'a': 'daacbbbbbbdbbddadadaccdc', 'b': 'acbb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbbbbbad'}, 'daacbadac': {'a': 'aca', 'b': 'daaccbbdacccbcbddaacbdabb', 'c': 'daaccbbdabcc', 'd': 'daacbbbbbbdbbbddab'}, 'dacbdd': {'a': 'accbdda', 'b': 'ccb', 'c': 'accbddc', 'd': 'dacbddd'}, 'daacbbbbbbdbbbdddad': {'a': 'daacbbbbbbdbbbdddada', 'b': 'ccb', 'c': 'daacbbbbbbdbbddadadaccdc', 'd': 'daaccbbdacccbcbddaacdd'}, 'daacbbbbbbdbbbda': {'a': 'daacbbbbbbdcdaa', 'b': 'ccb', 'c': 'accbddc', 'd': 'daaccbbdacccabd'}}
Explanation matches RNN: 92.63
RNN matches ground truth: 100.0
Explanation matches ground truth: 92.63
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query                            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ ((b | c) | (F (G (a | (b | c))))))  False          100.0      100.0              92.63                              92.63       401.056165   4.757447e+89         1.369343  [b, , c, a, acbd, ac, cd, dc, cb, db, bd, aacb...          0         0         6          947                    100.0                                    100.0             272.146323         True     0.05   0.01
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11178803443908691  s
No positive counterexample found
EQ test took  0.05538129806518555  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10817074775695801  s
EQ test took  0.001607656478881836  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1863095760345459  s
EQ test took  0.09192943572998047  s
new counterexample: acbbd  should be accepted by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 U (! x0))
Learning formula with depth 2
learned LTL formula: (a U (~ a))
Learning took:  0.28224730491638184  s
EQ test took  0.0925750732421875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (! (x2 | (G x0)))
Learning formula with depth 3
learned LTL formula: (~ (c | (G a)))
Learning took:  0.8871164321899414  s
No positive counterexample found
EQ test took  0.45542097091674805  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a', 'c', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: ((x0 | (x2 | x1)) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((a | (b | c)) -> (X c))
Learning took:  3.2429375648498535  s
No positive counterexample found
EQ test took  1.0775551795959473  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a', 'c', 'b', 'db']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F ((x2 | x1) | x0)) -> (X x2))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X c))
Learning took:  11.511230945587158  s
EQ test took  0.24667716026306152  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'db']



6  iteration complete



start formula depth: 8
Before normalization: ((F ((x2 | x0) | x1)) U (! (F ((x2 | x0) | x1))))
Learning formula with depth 5
learned LTL formula: ((F (b | (a | c))) U (~ (F (b | (a | c)))))
Learning took:  3.6150035858154297  s
EQ test took  0.3218405246734619  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'cd']



7  iteration complete



start formula depth: 8
Before normalization: ((F ((x2 | x0) | x1)) -> (X (x2 | x0)))
Learning formula with depth 4
learned LTL formula: ((F (b | (a | c))) -> (X (a | c)))
Learning took:  4.698289155960083  s
EQ test took  0.7522833347320557  s
new counterexample: dddaaacccccbbd  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd']


negative traces---> 
['a', 'c', 'b', 'db', 'cd']



8  iteration complete



start formula depth: 8
Before normalization: (! ((G ((F x1) | x0)) | x2))
Learning formula with depth 5
learned LTL formula: (~ (c | (G (a | (F b)))))
Learning took:  12.666516304016113  s
EQ test took  0.8522610664367676  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd']


negative traces---> 
['a', 'c', 'b', 'db', 'cd', 'dc']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((x0 | (F (x1 | x2))) -> (F (x0 & (F (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: ((a | (F (b | c))) -> (F (a & (F (b | c)))))
Learning took:  227.31990432739258  s
No positive counterexample found
EQ test took  0.4421675205230713  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd']


negative traces---> 
['a', 'c', 'b', 'db', 'cd', 'dc', 'da']



10  iteration complete



start formula depth: 9
Before normalization: (G ((F x1) U (! (((F x1) | x2) | x0))))
Learning formula with depth 6
learned LTL formula: (G ((F b) U (~ (a | (c | (F b))))))
Learning took:  17.921672105789185  s
EQ test took  0.6223804950714111  s
new counterexample: daccbbbddb  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd', 'daccbbbddb']


negative traces---> 
['a', 'c', 'b', 'db', 'cd', 'dc', 'da']



11  iteration complete



start formula depth: 9
Before normalization: (((F x2) | (F (x1 | x0))) -> ((F x2) & (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (((F c) | (F (a | b))) -> ((F c) & (F (a | b))))
Learning took:  28.368438720703125  s
EQ test took  0.4043083190917969  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd', 'daccbbbddb']


negative traces---> 
['a', 'c', 'b', 'db', 'cd', 'dc', 'da', 'bc']



12  iteration complete



start formula depth: 9
Before normalization: (((F x0) | (F (x1 | x2))) -> ((F (x1 | x2)) & (F x0)))
Learning formula with depth 4
learned LTL formula: (((F a) | (F (b | c))) -> ((F a) & (F (b | c))))
Learning took:  31.020278453826904  s
No positive counterexample found
EQ test took  0.42079687118530273  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dddaaacccccbbd', 'daccbbbddb']


negative traces---> 
['a', 'c', 'b', 'db', 'cd', 'dc', 'da', 'bc', 'ac']



13  iteration complete





epsilon= 0.01 delta= 0.1 max_trace_length= 50
query: true
final ltl:  (((F a) | (F (b | c))) -> ((F a) & (F (b | c))))
incomplete formula
Number of samples: 1201
Number of counterexamples returned: 1201
1.0 None

Time taken to extract ltl: 401.06681847572327
overall guided extraction time took: 0.10000000000013642
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09993720054626465
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 43.95
RNN matches ground truth: 100.0
Explanation matches ground truth: 43.95
Lstar matches RNN: 57.97
Lstar matches ground truth: 57.97
target query                                       explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((F a) | (F (b | c))) -> ((F a) & (F (b | c))))  False          100.0      100.0              43.95                              43.95       401.066818            1.0            None  [a, , acbbd, c, b, db, aacbd, cd, dddaaacccccb...          0         0         4            2                    57.97                                    57.97               0.099937         True     0.01    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10870790481567383  s
No positive counterexample found
EQ test took  0.054730892181396484  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.116180419921875  s
EQ test took  0.0015888214111328125  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18236827850341797  s
EQ test took  0.10147476196289062  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 U (! x0))
Learning formula with depth 2
learned LTL formula: (a U (~ a))
Learning took:  0.2675914764404297  s
EQ test took  0.10519814491271973  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: ((x0 | x2) -> (X x2))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X c))
Learning took:  0.816373348236084  s
EQ test took  0.3145632743835449  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x0 | x2) -> (X (x0 | x2)))
Learning formula with depth 3
learned LTL formula: ((a | c) -> (X (a | c)))
Learning took:  0.765272855758667  s
EQ test took  0.6266293525695801  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b']



5  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X (x2 | x0)))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X (a | c)))
Learning took:  4.552266597747803  s
No positive counterexample found
EQ test took  0.9083101749420166  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'ba']



6  iteration complete



start formula depth: 7
Before normalization: (! ((G x0) | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ ((G a) | (b | c)))
Learning took:  2.7055294513702393  s
No positive counterexample found
EQ test took  1.314002275466919  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad']



7  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F x1) U (! (x1 | (x0 | x2))))
Learning formula with depth 4
learned LTL formula: ((F b) U (~ (b | (a | c))))
Learning took:  13.216564178466797  s
EQ test took  0.4014136791229248  s
new counterexample: aacbbbbbb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad']



8  iteration complete



start formula depth: 8
Before normalization: ((! x1) & ((x0 | x2) -> (F x1)))
Learning formula with depth 3
learned LTL formula: ((~ b) & ((a | c) -> (F b)))
Learning took:  5.43203330039978  s
EQ test took  0.6235148906707764  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad', 'dc']



9  iteration complete



start formula depth: 8
Before normalization: (((F x2) | (x1 | x0)) -> (x0 & (F x2)))
Learning formula with depth 3
learned LTL formula: (((a | b) | (F c)) -> (a & (F c)))
Learning took:  6.95984411239624  s
No positive counterexample found
EQ test took  1.8738903999328613  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad', 'dc', 'ac']



10  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((x1 -> (F x2)) & ((x0 | (F x2)) -> ((F x2) U x1)))
Learning formula with depth 4
learned LTL formula: ((b -> (F c)) & ((a | (F c)) -> ((F c) U b)))
Learning took:  196.22089385986328  s
No positive counterexample found
EQ test took  0.5011184215545654  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad', 'dc', 'ac', 'cb']



11  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x2 | x0))) -> (X (X (x1 | (x2 | x0)))))
Learning formula with depth 5
learned LTL formula: ((F (b | (a | c))) -> (X (X (b | (a | c)))))
Learning took:  29.546648502349854  s
No positive counterexample found
EQ test took  1.068225622177124  s
new counterexample: bdb  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad', 'dc', 'ac', 'cb', 'bdb']



12  iteration complete



start formula depth: 9
Before normalization: ((F ((x0 | x1) | x2)) -> ((F x1) & x0))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (a & (F b)))
Learning took:  26.121179580688477  s
EQ test took  1.1028501987457275  s
new counterexample: daccbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'aacbbbbbb', 'daccbd']


negative traces---> 
['a', 'c', 'b', 'ba', 'ad', 'dc', 'ac', 'cb', 'bdb']



13  iteration complete





epsilon= 0.01 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((F (c | (a | b))) -> (a & (F b)))
incomplete formula
Number of samples: 1270
Number of counterexamples returned: 302
5.7155026288036695e+296 0.7189918409527046

Time taken to extract ltl: 401.1153507232666
overall guided extraction time took: 1.3799999999998818
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ddadacbbbbd', 0.22000000000002728)
('bcaccbd', 0.2400000000000091)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 1.3812742233276367
number of states of the dfa: 32
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'bc', 'c': 'bc', 'd': 'dd'}, 'ddad': {'a': 'ddada', 'b': 'bc', 'c': 'bc', 'd': 'ddad'}, 'ddadaca': {'a': 'ddadacaa', 'b': 'bc', 'c': 'ddadacac', 'd': 'bc'}, 'ddadacbbbbd': {'a': 'ddadacbbbbda', 'b': 'bc', 'c': 'bc', 'd': 'ddadacbbbbd'}, 'bc': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'bcac': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'b': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'a': {'a': 'dda', 'b': 'bc', 'c': 'ac', 'd': 'bc'}, 'ddadac': {'a': 'ddadaca', 'b': 'ddadacb', 'c': 'ddadacc', 'd': 'bc'}, 'ddadacaa': {'a': 'bc', 'b': 'bc', 'c': 'ddadacaac', 'd': 'bc'}, 'dd': {'a': 'dda', 'b': 'bc', 'c': 'bc', 'd': 'dd'}, 'dda': {'a': 'dda', 'b': 'bc', 'c': 'ddac', 'd': 'ddad'}, 'ddadacbbbb': {'a': 'bc', 'b': 'ddadacbbbb', 'c': 'bc', 'd': 'ddadacbbbbd'}, 'ddadacbbd': {'a': 'dda', 'b': 'bc', 'c': 'bc', 'd': 'dd'}, 'bcaccb': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'ac': {'a': 'bc', 'b': 'ddadacbbb', 'c': 'ac', 'd': 'bc'}, 'ddac': {'a': 'dda', 'b': 'ddacb', 'c': 'ddadacc', 'd': 'ddacd'}, 'ddacb': {'a': 'ddacba', 'b': 'ddadacbbb', 'c': 'bc', 'd': 'dd'}, 'bcacc': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'ddacd': {'a': 'a', 'b': 'bc', 'c': 'bc', 'd': 'ddad'}, 'ddadacbbb': {'a': 'bc', 'b': 'ddadacbbbb', 'c': 'bc', 'd': 'dd'}, 'ddadacb': {'a': 'bc', 'b': 'ddadacbb', 'c': 'bc', 'd': 'ddada'}, 'd': {'a': 'dda', 'b': 'bc', 'c': 'bc', 'd': 'dd'}, 'ddadacac': {'a': 'bc', 'b': 'ddadacbb', 'c': 'ddadacc', 'd': 'bc'}, 'ddadacaac': {'a': 'bc', 'b': 'ddadacbbb', 'c': 'ddadacc', 'd': 'bc'}, 'ddadacc': {'a': 'ddadacaa', 'b': 'ddacb', 'c': 'ddadacc', 'd': 'bc'}, 'bca': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'bcaccbd': {'a': 'bc', 'b': 'bc', 'c': 'bc', 'd': 'bc'}, 'ddadacbbbbda': {'a': 'dda', 'b': 'bc', 'c': 'ddac', 'd': 'dd'}, 'ddacba': {'a': 'a', 'b': 'bc', 'c': 'ac', 'd': 'ddad'}, 'ddadacbb': {'a': 'bc', 'b': 'ddadacbbb', 'c': 'bc', 'd': 'ddadacbbd'}, 'ddada': {'a': 'dda', 'b': 'bc', 'c': 'ddadac', 'd': 'bc'}}
Explanation matches RNN: 50.8
RNN matches ground truth: 100.0
Explanation matches ground truth: 50.8
Lstar matches RNN: 99.99
Lstar matches ground truth: 99.99
target query                         explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (c | (a | b))) -> (a & (F b)))  False          100.0      100.0               50.8                               50.8       401.115351  5.715503e+296         0.718992  [a, , acbd, c, aacbd, b, ba, ad, aacbbbbbb, dc...          0         0         4           32                    99.99                                    99.99               1.381274         True     0.01   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11656904220581055  s
No positive counterexample found
EQ test took  0.08706283569335938  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11698365211486816  s
EQ test took  0.0015561580657958984  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18772149085998535  s
EQ test took  0.36491918563842773  s
new counterexample: acbbd  should be accepted by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 U (! x0))
Learning formula with depth 2
learned LTL formula: (a U (~ a))
Learning took:  0.2778651714324951  s
EQ test took  0.12492156028747559  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (! (x2 | (G x0)))
Learning formula with depth 3
learned LTL formula: (~ (c | (G a)))
Learning took:  0.8844084739685059  s
No positive counterexample found
EQ test took  0.739436149597168  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'acbbd']


negative traces---> 
['a', 'c', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: ((x0 | (x2 | x1)) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((a | (b | c)) -> (X c))
Learning took:  3.2716400623321533  s
EQ test took  0.6277847290039062  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd']


negative traces---> 
['a', 'c', 'b']



5  iteration complete



start formula depth: 7
Before normalization: (! ((x2 | (G x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (b | (c | (G a))))
Learning took:  2.2701497077941895  s
EQ test took  1.496028184890747  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'ad']



6  iteration complete



start formula depth: 7
Before normalization: ((x0 | (x2 | x1)) -> (X (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((a | (b | c)) -> (X (a | (b | c))))
Learning took:  2.8222968578338623  s
No positive counterexample found
EQ test took  0.7137553691864014  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'ad', 'da']



7  iteration complete



start formula depth: 7
increasing formula depth to  8
increasing formula depth to  9
Before normalization: ((x2 | (F (x1 | x0))) -> ((x1 | x0) U (X x1)))
Learning formula with depth 4
learned LTL formula: ((c | (F (a | b))) -> ((a | b) U (X b)))
Learning took:  147.27307033538818  s
EQ test took  0.33866405487060547  s
new counterexample: dacbd  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd']


negative traces---> 
['a', 'c', 'b', 'ad', 'da']



8  iteration complete



start formula depth: 9
Before normalization: ((x2 | ((F x0) | x1)) -> (F (X x2)))
Learning formula with depth 4
learned LTL formula: ((c | (b | (F a))) -> (F (X c)))
Learning took:  9.938259601593018  s
EQ test took  0.42404723167419434  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db']



9  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! (x0 | (x2 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (a | (b | c)))))
Learning took:  9.199775457382202  s
EQ test took  0.5585362911224365  s
new counterexample: accbbdda  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db']



10  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x2 | x0))) -> (F (X x2)))
Learning formula with depth 4
learned LTL formula: ((F (b | (a | c))) -> (F (X c)))
Learning took:  17.798466682434082  s
EQ test took  0.47687768936157227  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db', 'bc']



11  iteration complete



start formula depth: 9
Before normalization: (((F (x2 | x1)) | (F x0)) -> ((F x0) & (F (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (((F a) | (F (b | c))) -> ((F a) & (F (b | c))))
Learning took:  23.471869707107544  s
No positive counterexample found
EQ test took  0.4821279048919678  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db', 'bc', 'ac']



12  iteration complete



start formula depth: 9
Before normalization: (((F (x1 | x0)) | x2) -> (F (x2 & (F (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: ((c | (F (a | b))) -> (F (c & (F (a | b)))))
Learning took:  19.461668014526367  s
No positive counterexample found
EQ test took  0.6068196296691895  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db', 'bc', 'ac', 'ca']



13  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | (x2 | x1))) -> (X (X (x0 | (x2 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F (a | (b | c))) -> (X (X (a | (b | c)))))
Learning took:  17.805753707885742  s
EQ test took  1.0867187976837158  s
new counterexample: bddddacccccbd  should be accepted by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda', 'bddddacccccbd']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db', 'bc', 'ac', 'ca']



14  iteration complete



start formula depth: 9
Before normalization: (((F x1) | (x2 | (F x0))) -> ((F x0) & (F x1)))
Learning formula with depth 4
learned LTL formula: (((F b) | (c | (F a))) -> ((F a) & (F b)))
Learning took:  35.23526620864868  s
EQ test took  0.6465318202972412  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbbd', 'aacbd', 'dacbd', 'accbbdda', 'bddddacccccbd']


negative traces---> 
['a', 'c', 'b', 'ad', 'da', 'db', 'bc', 'ac', 'ca', 'ab']



15  iteration complete



