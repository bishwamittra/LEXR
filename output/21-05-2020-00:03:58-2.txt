made train set of size: 11891 , of which positive examples: 32
out of  20453  sequences 8594  are positive. (percent:  0.4201828582604019 )
examples per length: [1, 4, 16, 64, 254, 262, 275, 279, 286, 309, 336, 358, 409, 434, 480, 491, 538, 538, 601, 519, 597, 524, 606, 492, 667, 464, 593, 444, 601, 336, 645, 307, 582, 378, 536, 287, 697, 256, 500, 403, 588, 251, 597, 250, 448, 426, 338, 250, 429, 257, 250]
size of train set: 18407
size of test set: 2046
The dy.parameter(...) call is now DEPRECATED.
        There is no longer need to explicitly add parameters to the computation graph.
        Any used parameter will be added automatically.
classification loss on last batch was: 0.0004183122410427736
testing on train set, i.e. test set is train set
rnn score against target on test set:                              2046 (100.0)
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12322545051574707  s
EQ test took  0.0007138252258300781  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12975001335144043  s
EQ test took  0.025697946548461914  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.28246617317199707
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.0)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.03011155128479004
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.282466          None            None              []          0         0         0            4                    None                                    None               0.030112         True      0.5    0.5
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1289377212524414  s
EQ test took  0.0006625652313232422  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1271195411682129  s
EQ test took  0.03048110008239746  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2907867431640625
overall guided extraction time took: 0.11000000000001364
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.01999999999998181)
('dd', 0.04000000000007731)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.11803770065307617
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.290787          None            None              []          0         0         0            4                    None                                    None               0.118038         True      0.5   0.25
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13366460800170898  s
EQ test took  0.0006227493286132812  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12633776664733887  s
EQ test took  0.03664851188659668  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3009035587310791
overall guided extraction time took: 0.37000000000000455
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.09000000000003183)
('dd', 0.12000000000000455)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3689768314361572
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.300904          None            None              []          0         0         0            4                    None                                    None               0.368977         True      0.5    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11512064933776855  s
EQ test took  0.0006198883056640625  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12565374374389648  s
EQ test took  0.039803266525268555  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2847936153411865
overall guided extraction time took: 0.8299999999999272
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.2099999999999227)
('dd', 0.2900000000000773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8334300518035889
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.284794          None            None              []          0         0         0            4                    None                                    None                0.83343         True      0.5   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12624287605285645  s
EQ test took  0.0006177425384521484  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12763524055480957  s
EQ test took  0.03885960578918457  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.29694247245788574
overall guided extraction time took: 0.05999999999994543
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.009999999999990905)
('dd', 0.009999999999990905)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.05160331726074219
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.296942          None            None              []          0         0         0            4                    None                                    None               0.051603         True     0.25    0.5
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11897134780883789  s
EQ test took  0.0006673336029052734  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.13260459899902344  s
EQ test took  0.042981624603271484  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.298922061920166
overall guided extraction time took: 0.12000000000000455
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.030000000000086402)
('dd', 0.03999999999996362)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.1175386905670166
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.298922          None            None              []          0         0         0            4                    None                                    None               0.117539         True     0.25   0.25
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12238264083862305  s
EQ test took  0.0006666183471679688  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1267869472503662  s
EQ test took  0.05093264579772949  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3045389652252197
overall guided extraction time took: 0.32999999999992724
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.06999999999993634)
('dd', 0.12000000000000455)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.33956146240234375
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.304539          None            None              []          0         0         0            4                    None                                    None               0.339561         True     0.25    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13436579704284668  s
EQ test took  0.0006709098815917969  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1278831958770752  s
EQ test took  0.061139822006225586  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.32785987854003906
overall guided extraction time took: 0.8199999999999363
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.2099999999999227)
('dd', 0.2900000000000773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.815481424331665
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None          0.32786          None            None              []          0         0         0            4                    None                                    None               0.815481         True     0.25   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12387871742248535  s
EQ test took  0.0006451606750488281  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12665414810180664  s
EQ test took  0.06964731216430664  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3246128559112549
overall guided extraction time took: 0.03999999999996362
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.01999999999998181)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.03575563430786133
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.324613          None            None              []          0         0         0            4                    None                                    None               0.035756         True      0.1    0.5
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12832856178283691  s
EQ test took  0.0006482601165771484  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12158870697021484  s
EQ test took  0.09707450866699219  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3513188362121582
overall guided extraction time took: 0.06999999999993634
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.01999999999998181)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.07480883598327637
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.351319          None            None              []          0         0         0            4                    None                                    None               0.074809         True      0.1   0.25
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.125335693359375  s
EQ test took  0.0006196498870849609  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12546205520629883  s
EQ test took  0.12451767921447754  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3796544075012207
overall guided extraction time took: 0.36000000000001364
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.08000000000004093)
('dd', 0.12999999999999545)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.35704588890075684
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.379654          None            None              []          0         0         0            4                    None                                    None               0.357046         True      0.1    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11364412307739258  s
EQ test took  0.0006239414215087891  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12324976921081543  s
EQ test took  0.14513301849365234  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3856770992279053
overall guided extraction time took: 0.849999999999909
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.2199999999999136)
('dd', 0.2900000000000773)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8508431911468506
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.385677          None            None              []          0         0         0            4                    None                                    None               0.850843         True      0.1   0.05
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11328363418579102  s
EQ test took  0.0006213188171386719  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1253352165222168  s
EQ test took  0.1373155117034912  s


epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.380230188369751
overall guided extraction time took: 0.05000000000006821
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.009999999999990905)
('dd', 0.020000000000095497)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.05139470100402832
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None          0.38023          None            None              []          0         0         0            4                    None                                    None               0.051395         True     0.05    0.5
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11398100852966309  s
EQ test took  0.0006330013275146484  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12668848037719727  s
EQ test took  0.17952466011047363  s


epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.4245181083679199
overall guided extraction time took: 0.08000000000004093
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.029999999999972715)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.08044719696044922
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.424518          None            None              []          0         0         0            4                    None                                    None               0.080447         True     0.05   0.25
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11178183555603027  s
EQ test took  0.0006437301635742188  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12473678588867188  s
EQ test took  0.2358534336090088  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.47607946395874023
overall guided extraction time took: 0.35999999999989996
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.08999999999991815)
('dd', 0.12999999999999545)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3564486503601074
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.476079          None            None              []          0         0         0            4                    None                                    None               0.356449         True     0.05    0.1
target: alternating bit protocol
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12705278396606445  s
EQ test took  0.0006475448608398438  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12394475936889648  s
EQ test took  0.27731871604919434  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.5326437950134277
overall guided extraction time took: 0.8299999999999272
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('d', 0.2099999999999227)
('dd', 0.2699999999999818)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.8278717994689941
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  false       false   True          100.0      None              None                              None         0.532644          None            None              []          0         0         0            4                    None                                    None               0.827872         True     0.05   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11825942993164062  s
No positive counterexample found
EQ test took  0.0032758712768554688  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11983203887939453  s
EQ test took  0.0015532970428466797  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17885661125183105  s
No positive counterexample found
EQ test took  0.004275798797607422  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3561708927154541  s
No positive counterexample found
EQ test took  0.016232728958129883  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.158432960510254  s
No positive counterexample found
EQ test took  0.027718067169189453  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (F (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (b | (F (a | c))))
Learning took:  2.511603355407715  s
No positive counterexample found
EQ test took  0.03911018371582031  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  1.749443769454956  s
EQ test took  0.04512143135070801  s
new counterexample: daccbb  should be accepted by implementation


positive traces---> 
['', 'daccbb']


negative traces---> 
['b', 'a', 'c', 'dc', 'db']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F (x2 | (x1 | x0))) -> (X x0))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (X a))
Learning took:  12.537928342819214  s
EQ test took  0.03425788879394531  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'daccbb']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca']



7  iteration complete



start formula depth: 8
Before normalization: (! (x0 | ((x0 -> x2) U (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | ((a -> c) U (b | c))))
Learning took:  9.925979137420654  s
EQ test took  0.047766923904418945  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((((x0 | x2) | x1) | (X ((x0 | x2) | x1))) -> (X (X ((x0 | x2) | x1))))
Learning formula with depth 5
learned LTL formula: (((b | (a | c)) | (X (b | (a | c)))) -> (X (X (b | (a | c)))))
Learning took:  161.22303700447083  s
EQ test took  0.022020816802978516  s
new counterexample: dca  should be rejected by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca', 'dca']



9  iteration complete



start formula depth: 9
Before normalization: ((x0 | (F (x2 | x1))) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((a | (F (b | c))) -> (X (X (b | c))))
Learning took:  9.23740029335022  s
No positive counterexample found
EQ test took  0.03285551071166992  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca', 'dca', 'da']



10  iteration complete



start formula depth: 9
Before normalization: (! (x3 U (x2 | (x1 | (G x0)))))
Learning formula with depth 5
learned LTL formula: (~ (d U (c | (b | (G a)))))
Learning took:  26.158751964569092  s
No positive counterexample found
EQ test took  0.0568547248840332  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca', 'dca', 'da', 'ac']



11  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | (x2 | x1))) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X (b | c))))
Learning took:  14.751148462295532  s
No positive counterexample found
EQ test took  0.051711320877075195  s
new counterexample: aab  should be rejected by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca', 'dca', 'da', 'ac', 'aab']



12  iteration complete



start formula depth: 9
Before normalization: (! ((! x2) U (x1 | (G (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: (~ ((~ c) U (b | (G (a | c)))))
Learning took:  139.7719361782074  s
No positive counterexample found
EQ test took  0.04076528549194336  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'daccbb', 'acbd']


negative traces---> 
['b', 'a', 'c', 'dc', 'db', 'ca', 'dca', 'da', 'ac', 'aab', 'cb']



13  iteration complete





epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: true
final ltl:  (~ ((~ c) U (b | (G (a | c)))))
incomplete formula
Number of samples: 21
Number of counterexamples returned: 11
2376.5817137294302 1.3466565660087453

Time taken to extract ltl: 401.0362584590912
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02023792266845703
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 71.35
RNN matches ground truth: 100.0
Explanation matches ground truth: 71.35
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ ((~ c) U (b | (G (a | c)))))  False          100.0      100.0              71.35                              71.35       401.036258    2376.581714         1.346657  [b, , a, c, dc, db, daccbb, ca, acbd, dca, da,...          0         0         5            2                    58.01                                    58.01               0.020238         True      0.5    0.5
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12017941474914551  s
No positive counterexample found
EQ test took  0.0037872791290283203  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12402105331420898  s
EQ test took  0.0015878677368164062  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18210458755493164  s
No positive counterexample found
EQ test took  0.01360177993774414  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.4111192226409912  s
No positive counterexample found
EQ test took  0.013653755187988281  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x0 | x1) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1751666069030762  s
No positive counterexample found
EQ test took  0.022324562072753906  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (((F x1) | x2) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.356924533843994  s
No positive counterexample found
EQ test took  0.03879237174987793  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x1 | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  1.7599589824676514  s
EQ test took  0.043587446212768555  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: true
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 6.2769224643707275
overall guided extraction time took: 0.030000000000086402
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.031522274017333984
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 58.01
RNN matches ground truth: 100.0
Explanation matches ground truth: 58.01
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (G (~ (b | (a | c))))   True          100.0      100.0              58.01                              58.01         6.276922          None            None  [a, , b, c, db, dc]          0         0         4            2                    58.01                                    58.01               0.031522         True      0.5   0.25
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11843991279602051  s
No positive counterexample found
EQ test took  0.00455927848815918  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12497520446777344  s
EQ test took  0.0015716552734375  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18702054023742676  s
No positive counterexample found
EQ test took  0.009122610092163086  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.42135000228881836  s
No positive counterexample found
EQ test took  0.019709348678588867  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1318140029907227  s
EQ test took  0.04767870903015137  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: true
final ltl:  (~ (a | (b | c)))

Time taken to extract ltl: 2.073251485824585
overall guided extraction time took: 0.35000000000002274
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbd', 0.07999999999992724)
('dcadcbd', 0.09000000000003183)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3520185947418213
number of states of the dfa: 12
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'dcad', 'c': 'dcad', 'd': ''}, 'dcad': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}, 'a': {'a': 'a', 'b': 'dcad', 'c': 'ac', 'd': 'dcad'}, 'dcadcbd': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}, 'acb': {'a': 'dcad', 'b': 'acb', 'c': 'dcad', 'd': ''}, 'dca': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}, 'ac': {'a': 'a', 'b': 'acb', 'c': 'ac', 'd': 'dcad'}, 'acbd': {'a': 'a', 'b': 'dcad', 'c': 'dcad', 'd': ''}, 'dcadcb': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}, 'dcadc': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}, 'd': {'a': 'a', 'b': 'dcad', 'c': 'dcad', 'd': ''}, 'dc': {'a': 'dcad', 'b': 'dcad', 'c': 'dcad', 'd': 'dcad'}}
Explanation matches RNN: 79.03
RNN matches ground truth: 100.0
Explanation matches ground truth: 79.03
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ (a | (b | c)))   True          100.0      100.0              79.03                              79.03         2.073251          None            None     [a, , c, b]          0         0         3           12                    100.0                                    100.0               0.352019         True      0.5    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12276291847229004  s
No positive counterexample found
EQ test took  0.003763914108276367  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1233828067779541  s
EQ test took  0.0015766620635986328  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.2595844268798828  s
No positive counterexample found
EQ test took  0.021177291870117188  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.4262545108795166  s
No positive counterexample found
EQ test took  0.02018427848815918  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.178236722946167  s
No positive counterexample found
EQ test took  0.03657412528991699  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.6063992977142334  s
EQ test took  0.056552886962890625  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: true
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.863908767700195
overall guided extraction time took: 0.6399999999999864
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbd', 0.21000000000003638)
('bdcbd', 0.10000000000002274)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.6407132148742676
number of states of the dfa: 10
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'b', 'd': ''}, 'b': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'a': {'a': 'a', 'b': 'b', 'c': 'ac', 'd': 'b'}, 'acb': {'a': 'b', 'b': 'acb', 'c': 'b', 'd': ''}, 'bdc': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'ac': {'a': 'a', 'b': 'acb', 'c': 'ac', 'd': 'b'}, 'acbd': {'a': 'a', 'b': 'b', 'c': 'b', 'd': ''}, 'bd': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'bdcbd': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'bdcb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}}
Explanation matches RNN: 58.01
RNN matches ground truth: 100.0
Explanation matches ground truth: 58.01
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ (F (a | (b | c))))   True          100.0      100.0              58.01                              58.01         4.863909          None            None  [b, , a, c, da]          0         0         4           10                    100.0                                    100.0               0.640713         True      0.5   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.19150567054748535  s
No positive counterexample found
EQ test took  0.004824638366699219  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1997840404510498  s
EQ test took  0.0016093254089355469  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.24784231185913086  s
No positive counterexample found
EQ test took  0.019782066345214844  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.41959691047668457  s
No positive counterexample found
EQ test took  0.019875526428222656  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x0 | x1) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1894264221191406  s
EQ test took  0.03943157196044922  s
new counterexample: aaaccbb  should be accepted by implementation


positive traces---> 
['', 'aaaccbb']


negative traces---> 
['a', 'b', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((x0 | x2) | x1) -> (X x0))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X a))
Learning took:  3.299098491668701  s
EQ test took  0.05533456802368164  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'aaaccbb']


negative traces---> 
['a', 'b', 'c', 'ca']



5  iteration complete



start formula depth: 7
Before normalization: (! ((x1 | x2) | (G x0)))
Learning formula with depth 3
learned LTL formula: (~ ((G a) | (b | c)))
Learning took:  2.8521149158477783  s
No positive counterexample found
EQ test took  0.044208526611328125  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'aaaccbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac']



6  iteration complete



start formula depth: 7
Before normalization: (! ((G (x2 | x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (b | (G (a | c))))
Learning took:  4.216538429260254  s
No positive counterexample found
EQ test took  0.02230238914489746  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'aaaccbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac', 'da']



7  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (x1 | (G (x2 | (F x0)))))
Learning formula with depth 5
learned LTL formula: (~ (b | (G (c | (F a)))))
Learning took:  19.29680347442627  s
No positive counterexample found
EQ test took  0.034534454345703125  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'aaaccbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac', 'da', 'db']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((x2 | ((F x1) | (F x0))) -> ((F x1) & x0))
Learning formula with depth 4
learned LTL formula: ((c | ((F a) | (F b))) -> (a & (F b)))
Learning took:  136.21175694465637  s
EQ test took  0.04161787033081055  s
new counterexample: dacbbbb  should be accepted by implementation


positive traces---> 
['', 'aaaccbb', 'dacbbbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac', 'da', 'db']



9  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x2 | x0))) -> (X (X (x2 | x0))))
Learning formula with depth 4
learned LTL formula: ((F (b | (a | c))) -> (X (X (a | c))))
Learning took:  10.735363245010376  s
EQ test took  0.02400040626525879  s
new counterexample: bdc  should be rejected by implementation


positive traces---> 
['', 'aaaccbb', 'dacbbbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac', 'da', 'db', 'bdc']



10  iteration complete



start formula depth: 9
Before normalization: (((F x0) | (x2 | (F x1))) -> ((F x1) & (F x0)))
Learning formula with depth 4
learned LTL formula: (((F a) | (c | (F b))) -> ((F a) & (F b)))
Learning took:  59.610522747039795  s
No positive counterexample found
EQ test took  0.027373790740966797  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'aaaccbb', 'dacbbbb']


negative traces---> 
['a', 'b', 'c', 'ca', 'ac', 'da', 'db', 'bdc', 'dc']



11  iteration complete





epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: true
final ltl:  (((F a) | (c | (F b))) -> ((F a) & (F b)))
incomplete formula
Number of samples: 37
Number of counterexamples returned: 37
1.0 None

Time taken to extract ltl: 401.116436958313
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.01791524887084961
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 45.25
RNN matches ground truth: 100.0
Explanation matches ground truth: 45.25
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                                 explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((F a) | (c | (F b))) -> ((F a) & (F b)))  False          100.0      100.0              45.25                              45.25       401.116437            1.0            None  [a, , b, c, aaaccbb, ca, ac, da, db, dacbbbb, ...          0         0         4            2                    58.01                                    58.01               0.017915         True     0.25    0.5
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12735342979431152  s
No positive counterexample found
EQ test took  0.005913496017456055  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.128218412399292  s
EQ test took  0.0016183853149414062  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17157292366027832  s
No positive counterexample found
EQ test took  0.025863170623779297  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3632619380950928  s
No positive counterexample found
EQ test took  0.022922277450561523  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x0 | x1) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1300487518310547  s
No positive counterexample found
EQ test took  0.049048662185668945  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.2803516387939453  s
EQ test took  0.07115364074707031  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: true
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 4.384986400604248
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.027399063110351562
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 58.01
RNN matches ground truth: 100.0
Explanation matches ground truth: 58.01
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (G (~ (a | (b | c))))   True          100.0      100.0              58.01                              58.01         4.384986          None            None  [a, , b, c, da]          0         0         4            2                    58.01                                    58.01               0.027399         True     0.25   0.25
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1240243911743164  s
No positive counterexample found
EQ test took  0.00675654411315918  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11563825607299805  s
EQ test took  0.0016036033630371094  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1824336051940918  s
No positive counterexample found
EQ test took  0.013600826263427734  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35929036140441895  s
No positive counterexample found
EQ test took  0.0341031551361084  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1897895336151123  s
No positive counterexample found
EQ test took  0.0674598217010498  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (x0 | (F x2))))
Learning formula with depth 4
learned LTL formula: (~ (b | (a | (F c))))
Learning took:  2.4221930503845215  s
EQ test took  0.03194737434387207  s
new counterexample: bdaccbbdddd  should be accepted by implementation


positive traces---> 
['', 'bdaccbbdddd']


negative traces---> 
['c', 'b', 'a', 'dc']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((x0 | (x1 | (F x2))) -> ((F x2) & x1))
Learning formula with depth 4
learned LTL formula: ((a | (b | (F c))) -> (b & (F c)))
Learning took:  14.4489266872406  s
EQ test took  0.06309628486633301  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da']



6  iteration complete



start formula depth: 8
Before normalization: (G (((x0 | x1) | x2) U (! ((x0 | x1) | x2))))
Learning formula with depth 5
learned LTL formula: (G ((c | (a | b)) U (~ (c | (a | b)))))
Learning took:  7.273495435714722  s
No positive counterexample found
EQ test took  0.023622989654541016  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad']



7  iteration complete



start formula depth: 8
Before normalization: ((x1 -> (F (x0 | x2))) & ((F (x0 | x2)) -> x1))
Learning formula with depth 4
learned LTL formula: ((b -> (F (a | c))) & ((F (a | c)) -> b))
Learning took:  8.157562732696533  s
No positive counterexample found
EQ test took  0.07983589172363281  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((F (x0 | x2)) | x1) -> ((F x0) & x1))
Learning formula with depth 4
learned LTL formula: ((b | (F (a | c))) -> (b & (F a)))
Learning took:  131.0164351463318  s
No positive counterexample found
EQ test took  0.0834803581237793  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db']



9  iteration complete



start formula depth: 9
Before normalization: (! ((G (x2 | x1)) | (x3 | x0)))
Learning formula with depth 4
learned LTL formula: (~ ((a | d) | (G (b | c))))
Learning took:  9.158109664916992  s
EQ test took  0.015614509582519531  s
new counterexample: d  should be accepted by implementation


positive traces---> 
['', 'bdaccbbdddd', 'd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db']



10  iteration complete



start formula depth: 9
Before normalization: ((F (x2 | (x1 | (F x0)))) -> (x1 & (F x0)))
Learning formula with depth 5
learned LTL formula: ((F (c | (b | (F a)))) -> (b & (F a)))
Learning took:  11.899413824081421  s
EQ test took  0.11756777763366699  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd', 'd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db', 'ba']



11  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x0 | x2))) -> (X (X (x0 | x2))))
Learning formula with depth 4
learned LTL formula: ((F (b | (a | c))) -> (X (X (a | c))))
Learning took:  15.257728099822998  s
No positive counterexample found
EQ test took  0.09226679801940918  s
new counterexample: abc  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd', 'd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db', 'ba', 'abc']



12  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | (x2 | x1))) -> (X (X x0)))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X (X a)))
Learning took:  20.866284370422363  s
EQ test took  0.06249833106994629  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'bdaccbbdddd', 'd', 'aacbd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db', 'ba', 'abc']



13  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! (F (x2 | (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (F (c | (a | b)))))
Learning took:  22.799420833587646  s
EQ test took  0.07213664054870605  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'bdaccbbdddd', 'd', 'aacbd']


negative traces---> 
['c', 'b', 'a', 'dc', 'da', 'ad', 'bc', 'db', 'ba', 'abc', 'bd']



14  iteration complete





epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((F b) U (~ (F (c | (a | b)))))
incomplete formula
Number of samples: 51
Number of counterexamples returned: 44
20118695.68036963 2.9813921667241563

Time taken to extract ltl: 401.1150884628296
overall guided extraction time took: 1.1499999999999773
generated counterexamples were: (format: (counterexample, counterexample generation time))
('daccbb', 0.09000000000003183)
('acbd', 0.10000000000002274)
('bcbbbd', 0.08999999999991815)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 1.1565375328063965
number of states of the dfa: 45
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'b', 'd': 'd'}, 'b': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'daccbd': {'a': 'daccbda', 'b': 'b', 'c': 'b', 'd': 'daccbd'}, 'acbdaa': {'a': 'da', 'b': 'b', 'c': 'daccbdac', 'd': 'b'}, 'daccbdaad': {'a': 'daccbdaada', 'b': 'b', 'c': 'b', 'd': 'b'}, 'daccbdacc': {'a': 'daccbdacca', 'b': 'daccbdaccb', 'c': 'daccc', 'd': 'daccbdaccd'}, 'bc': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'daccbdaada': {'a': 'da', 'b': 'b', 'c': 'daccbdaadac', 'd': 'b'}, 'daccbb': {'a': 'a', 'b': 'daccbb', 'c': 'b', 'd': 'daccbd'}, 'daccba': {'a': 'daccbaa', 'b': 'b', 'c': 'dac', 'd': 'b'}, 'daccbdaccd': {'a': 'da', 'b': 'b', 'c': 'b', 'd': 'daccbdaccd'}, 'dacccbb': {'a': 'daccba', 'b': 'daccbb', 'c': 'b', 'd': 'daccbd'}, 'dacc': {'a': 'a', 'b': 'daccb', 'c': 'daccc', 'd': 'b'}, 'daccb': {'a': 'daccba', 'b': 'daccbb', 'c': 'a', 'd': 'daccbd'}, 'daccbdaabd': {'a': 'daccbda', 'b': 'b', 'c': 'b', 'd': 'daccbdaabdd'}, 'daccbdac': {'a': 'da', 'b': 'daccbdacb', 'c': 'daccbdacc', 'd': 'daccbdaccd'}, 'daccbdaa': {'a': 'daccbda', 'b': 'daccbdaab', 'c': 'daccbdaac', 'd': 'daccbdaad'}, 'daccbdaacbb': {'a': 'da', 'b': 'dacccbb', 'c': 'b', 'd': 'daccbd'}, 'daccbdacca': {'a': 'daccbaa', 'b': 'b', 'c': 'dacc', 'd': 'b'}, 'daccbaa': {'a': 'a', 'b': 'b', 'c': 'dacc', 'd': 'b'}, 'daccbdaacbcd': {'a': 'acbda', 'b': 'b', 'c': 'b', 'd': 'daccbdaabdd'}, 'daccc': {'a': 'daccbaa', 'b': 'dacccb', 'c': 'dacc', 'd': 'b'}, 'daccbdaacb': {'a': 'daccbda', 'b': 'daccbdaacbb', 'c': 'daccbdaacbc', 'd': 'daccbd'}, 'bcb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'ac': {'a': 'a', 'b': 'acb', 'c': 'ac', 'd': 'b'}, 'acbd': {'a': 'acbda', 'b': 'b', 'c': 'b', 'd': 'daccbd'}, 'daccbdaac': {'a': 'daccbda', 'b': 'daccbdaacb', 'c': 'daccbdaac', 'd': 'daccbdaabdd'}, 'dac': {'a': 'a', 'b': 'acb', 'c': 'dacc', 'd': 'b'}, 'daccbdaadac': {'a': 'da', 'b': 'daccbdaab', 'c': 'daccbdaac', 'd': 'b'}, 'bcbbbd': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'daccbdaab': {'a': 'da', 'b': 'acb', 'c': 'a', 'd': 'daccbdaabd'}, 'daccbdaacbc': {'a': 'daccbaa', 'b': 'daccbdaacbcb', 'c': 'dac', 'd': 'daccbdaacbcd'}, 'a': {'a': 'a', 'b': 'b', 'c': 'ac', 'd': 'b'}, 'daccbdaabdd': {'a': 'daccbda', 'b': 'b', 'c': 'b', 'd': 'daccbdaabdd'}, 'acbda': {'a': 'acbdaa', 'b': 'b', 'c': 'dac', 'd': 'b'}, 'daccbdacb': {'a': 'da', 'b': 'dacccbb', 'c': 'a', 'd': 'daccbd'}, 'daccbdaccb': {'a': 'daccba', 'b': 'dacccbb', 'c': 'ac', 'd': 'daccbd'}, 'acb': {'a': 'b', 'b': 'acb', 'c': 'b', 'd': 'acbd'}, 'bcbb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'daccbda': {'a': 'daccbdaa', 'b': 'b', 'c': 'daccbdac', 'd': 'b'}, 'bcbbb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'da': {'a': 'daccbda', 'b': 'b', 'c': 'dac', 'd': 'b'}, 'd': {'a': 'da', 'b': 'b', 'c': 'b', 'd': 'daccbd'}, 'dacccb': {'a': 'a', 'b': 'dacccbb', 'c': 'a', 'd': 'daccbd'}, 'daccbdaacbcb': {'a': 'a', 'b': 'dacccb', 'c': 'b', 'd': 'daccbd'}}
Explanation matches RNN: 95.16
RNN matches ground truth: 100.0
Explanation matches ground truth: 95.16
Lstar matches RNN: 99.99
Lstar matches ground truth: 99.99
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F b) U (~ (F (c | (a | b)))))  False          100.0      100.0              95.16                              95.16       401.115088   2.011870e+07         2.981392  [c, , b, a, dc, bdaccbbdddd, da, ad, bc, db, d...          0         0         5           45                    99.99                                    99.99               1.156538         True     0.25    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11874079704284668  s
No positive counterexample found
EQ test took  0.00658416748046875  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12315678596496582  s
EQ test took  0.0016169548034667969  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18222951889038086  s
No positive counterexample found
EQ test took  0.028205156326293945  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.33542680740356445  s
No positive counterexample found
EQ test took  0.03389716148376465  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0055937767028809  s
No positive counterexample found
EQ test took  0.06573367118835449  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (b | (c | (F a))))
Learning took:  2.207961320877075  s
EQ test took  0.05731058120727539  s
new counterexample: acaccccbd  should be accepted by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((x2 | x1) | (F x0)) -> (X x2))
Learning formula with depth 3
learned LTL formula: (((F a) | (b | c)) -> (X c))
Learning took:  11.242676496505737  s
EQ test took  0.07480597496032715  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc']



6  iteration complete



start formula depth: 8
Before normalization: (((x2 | x0) | x1) U (G (! ((x2 | x0) | x1))))
Learning formula with depth 5
learned LTL formula: ((b | (a | c)) U (G (~ (b | (a | c)))))
Learning took:  5.037452697753906  s
No positive counterexample found
EQ test took  0.04644894599914551  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd']



7  iteration complete



start formula depth: 8
Before normalization: (! ((x1 | x2) | (F (G x0))))
Learning formula with depth 4
learned LTL formula: (~ ((b | c) | (F (G a))))
Learning took:  13.068919658660889  s
No positive counterexample found
EQ test took  0.06706929206848145  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((x0 | (x1 | x2)) U x1) U (G (! (x0 | (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (((a | (b | c)) U b) U (G (~ (a | (b | c)))))
Learning took:  137.0744800567627  s
No positive counterexample found
EQ test took  0.09712600708007812  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd']



9  iteration complete



start formula depth: 9
Before normalization: (((F (x0 | x2)) -> (F x1)) & (x1 -> (x0 | x2)))
Learning formula with depth 4
learned LTL formula: ((b -> (a | c)) & ((F (a | c)) -> (F b)))
Learning took:  9.893882751464844  s
No positive counterexample found
EQ test took  0.06201982498168945  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd', 'ab']



10  iteration complete



start formula depth: 9
Before normalization: (((((X x0) | x0) | x1) | x2) -> (X (X x0)))
Learning formula with depth 5
learned LTL formula: ((c | (b | (a | (X a)))) -> (X (X a)))
Learning took:  11.641832113265991  s
No positive counterexample found
EQ test took  0.10796117782592773  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd', 'ab', 'db']



11  iteration complete



start formula depth: 9
Before normalization: ((x2 | (F (x1 | x0))) -> ((x0 U x2) & (x1 | x0)))
Learning formula with depth 4
learned LTL formula: ((c | (F (a | b))) -> ((a | b) & (a U c)))
Learning took:  14.740835189819336  s
No positive counterexample found
EQ test took  0.13831138610839844  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acaccccbd']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd', 'ab', 'db', 'dc']



12  iteration complete



start formula depth: 9
Before normalization: ((F ((x1 | x2) | x0)) -> (x0 & (X x2)))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (a & (X c)))
Learning took:  51.29232382774353  s
EQ test took  0.0500643253326416  s
new counterexample: dddaccacbb  should be accepted by implementation


positive traces---> 
['', 'acaccccbd', 'dddaccacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd', 'ab', 'db', 'dc']



13  iteration complete



start formula depth: 9
Before normalization: (((x1 | (x0 | x2)) | (X (x1 | (x0 | x2)))) -> (X (X (x1 | (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: (((b | (a | c)) | (X (b | (a | c)))) -> (X (X (b | (a | c)))))
Learning took:  69.06380987167358  s
EQ test took  0.05315685272216797  s
new counterexample: dbc  should be rejected by implementation


positive traces---> 
['', 'acaccccbd', 'dddaccacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'cc', 'cd', 'ad', 'bd', 'ab', 'db', 'dc', 'dbc']



14  iteration complete





epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: true
final ltl:  (((b | (a | c)) | (X (b | (a | c)))) -> (X (X (b | (a | c)))))
incomplete formula
Number of samples: 54
Number of counterexamples returned: 44
1964352557.628367 2.689416081431676

Time taken to extract ltl: 401.08767771720886
overall guided extraction time took: 9.160000000000082
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acacccbd', 0.2299999999999045)
('bcbd', 0.17999999999994998)
('bdaccccacbddd', 0.3000000000000682)
('daccbdd', 0.34000000000003183)

Time taken to extract lstar-dfa: 9.150094747543335
number of states of the dfa: 130
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'bcb', 'd': 'd'}, 'bdacccac': {'a': 'bdacac', 'b': 'b', 'c': 'bdacccacc', 'd': 'bcb'}, 'b': {'a': 'bcb', 'b': 'bcb', 'c': 'bcb', 'd': 'bd'}, 'acacccbdaabd': {'a': 'acacccbda', 'b': 'bcb', 'c': 'bdaca', 'd': 'acacccbdaabd'}, 'daccbddabdaab': {'a': 'a', 'b': 'daccab', 'c': 'daccbddabdaabc', 'd': 'bdaccccacbd'}, 'acacccbd': {'a': 'acacccbda', 'b': 'bd', 'c': 'acacccbdc', 'd': 'daccbdd'}, 'bdaccac': {'a': 'bcb', 'b': 'b', 'c': 'bdaccacc', 'd': 'bcb'}, 'dacc': {'a': 'dacca', 'b': 'daccb', 'c': 'dacc', 'd': 'bdaccccacbd'}, 'daccbccc': {'a': 'bdaccca', 'b': 'bdaccccacbb', 'c': 'daccbccc', 'd': 'bd'}, 'daccbddabac': {'a': 'dacca', 'b': 'daccbddabacb', 'c': 'dacc', 'd': 'acacccbdc'}, 'acaccccbb': {'a': 'acaccccbba', 'b': 'daccbbb', 'c': 'acaccccbbc', 'd': 'daccbdd'}, 'bdaccccacbddd': {'a': 'acacccbda', 'b': 'bcb', 'c': 'acacccbdc', 'd': 'daccbdd'}, 'acacccbdaa': {'a': 'acacccbdaaa', 'b': 'acacccbdaab', 'c': 'acacccbdaac', 'd': 'acacccbdaabd'}, 'bdacccacccacc': {'a': 'bdaccca', 'b': 'bdaccccacbb', 'c': 'bdacccacccaccc', 'd': 'bcb'}, 'dacbccc': {'a': 'bcb', 'b': 'bdacccacccbccbb', 'c': 'bdacccac', 'd': 'bcb'}, 'acaa': {'a': 'acaaa', 'b': 'bcb', 'c': 'acacc', 'd': 'acaad'}, 'bdacccacccacb': {'a': 'bcb', 'b': 'bdacccacccacbb', 'c': 'bcb', 'd': 'bdacccacccacbd'}, 'acaaaacbcccb': {'a': 'bdaca', 'b': 'bdaccccacbb', 'c': 'bcb', 'd': 'd'}, 'daccbddabacb': {'a': 'daccbddabacba', 'b': 'acacb', 'c': 'daccab', 'd': 'acacccbd'}, 'acacccbdaaabb': {'a': 'a', 'b': 'bdaccccacbb', 'c': 'b', 'd': 'bdaccccacbdd'}, 'bda': {'a': 'bdaa', 'b': 'bcb', 'c': 'bdac', 'd': 'acaad'}, 'bdacccacccaccc': {'a': 'bdacccac', 'b': 'bdacccacccb', 'c': 'bdacccacccaccc', 'd': 'b'}, 'acaccccb': {'a': 'acacccba', 'b': 'acaccccbb', 'c': 'acaaaacbc', 'd': 'acacccbd'}, 'dac': {'a': 'da', 'b': 'dacb', 'c': 'dacc', 'd': 'acacccbdc'}, 'bdaccccac': {'a': 'bdacc', 'b': 'bdaccccacb', 'c': 'bdaccccacc', 'd': 'bcb'}, 'acaaaacbc': {'a': 'bdaa', 'b': 'bd', 'c': 'acaaaacbcc', 'd': 'acacccbdc'}, 'dacca': {'a': 'dacca', 'b': 'daccab', 'c': 'acaaaac', 'd': 'acacccbdc'}, 'bdacccacccbcc': {'a': 'bcb', 'b': 'bdacccacccbccb', 'c': 'bdacccacccbccc', 'd': 'bcb'}, 'a': {'a': 'da', 'b': 'bcb', 'c': 'ac', 'd': 'acacccbdc'}, 'dacbc': {'a': 'bdacccca', 'b': 'b', 'c': 'dacbcc', 'd': 'acacccbdc'}, 'bdacccaccca': {'a': 'bdacc', 'b': 'bcb', 'c': 'bdacccacccac', 'd': 'bcb'}, 'bdaccc': {'a': 'bdaccca', 'b': 'bdaccccacb', 'c': 'bdacccc', 'd': 'bcb'}, 'acaccccbba': {'a': 'daccbddabacba', 'b': 'b', 'c': 'acaaaacbc', 'd': 'bdaccccacbd'}, 'da': {'a': 'daa', 'b': 'acacccbdc', 'c': 'dac', 'd': 'acacccbdc'}, 'acacbdacbb': {'a': 'a', 'b': 'bdaccccacbb', 'c': 'b', 'd': 'daccbdd'}, 'bdacccacccb': {'a': 'bdacccca', 'b': 'bdaccccacbb', 'c': 'bdacccacccbc', 'd': 'd'}, 'daccbddabc': {'a': 'bdacccca', 'b': 'bd', 'c': 'acacccbc', 'd': 'acacccbdc'}, 'bdacccacccbc': {'a': 'bdacca', 'b': 'b', 'c': 'bdacccacccbcc', 'd': 'acacccbdc'}, 'bdacccacccac': {'a': 'bdaccca', 'b': 'bdacccacccacb', 'c': 'bdacccacccacc', 'd': 'bcb'}, 'daccbb': {'a': 'daccbddabacba', 'b': 'daccbbb', 'c': 'bd', 'd': 'daccbdd'}, 'daccbddaba': {'a': 'acacccbda', 'b': 'acacccbdc', 'c': 'daccbddabac', 'd': 'acacccbdc'}, 'acacccbdaabbbb': {'a': 'bd', 'b': 'acacccbdaabbbb', 'c': 'bcb', 'd': 'bdaccccacbddd'}, 'daccbddabdaa': {'a': 'acacccbdaaa', 'b': 'daccbddabdaab', 'c': 'acacccbdaac', 'd': 'acacccbdc'}, 'acacccca': {'a': 'bdacccca', 'b': 'b', 'c': 'daccbcc', 'd': 'bdaca'}, 'daccbddabdac': {'a': 'acacccbda', 'b': 'daccbddabdacb', 'c': 'dacc', 'd': 'acacccbdc'}, 'bdacccacccbccbb': {'a': 'bcb', 'b': 'acacccbdaabbbb', 'c': 'bcb', 'd': 'd'}, 'bdaccccacb': {'a': 'bdaccccacba', 'b': 'bdaccccacbb', 'c': 'bcb', 'd': 'bdaccccacbd'}, 'acacccbdac': {'a': 'da', 'b': 'daccbddabdacb', 'c': 'dacc', 'd': 'daccbddabd'}, 'aca': {'a': 'acaa', 'b': 'bcb', 'c': 'acac', 'd': 'bdaca'}, 'daccbbbd': {'a': 'daccbdda', 'b': 'daccbbbdb', 'c': 'daccab', 'd': 'daccbbbd'}, 'bdacccacc': {'a': 'bdaccca', 'b': 'acacb', 'c': 'bdacccaccc', 'd': 'bcb'}, 'acacc': {'a': 'acaa', 'b': 'acacb', 'c': 'acaccc', 'd': 'acacccbdc'}, 'bcb': {'a': 'bcb', 'b': 'bcb', 'c': 'bcb', 'd': 'bcb'}, 'bdacca': {'a': 'bdac', 'b': 'bcb', 'c': 'bdaccac', 'd': 'bcb'}, 'ac': {'a': 'aca', 'b': 'bdaccccacbb', 'c': 'acac', 'd': 'bd'}, 'acaad': {'a': 'bdaca', 'b': 'bcb', 'c': 'bcb', 'd': 'bcb'}, 'daccbddabdacb': {'a': 'acacbda', 'b': 'daccbddabdacbb', 'c': 'daccbddabdacbc', 'd': 'acacccbd'}, 'bdaac': {'a': 'bdacccca', 'b': 'bd', 'c': 'bdaacc', 'd': 'acaad'}, 'bdaccccacc': {'a': 'bdacccca', 'b': 'acacb', 'c': 'acaccc', 'd': 'bcb'}, 'daccbddabda': {'a': 'daccbddabdaa', 'b': 'bd', 'c': 'daccbddabdac', 'd': 'acacccbdc'}, 'acaccc': {'a': 'aca', 'b': 'acacccb', 'c': 'acacccc', 'd': 'acacccbdc'}, 'd': {'a': 'da', 'b': 'bcb', 'c': 'bcb', 'd': 'bdaccccacbddd'}, 'acacb': {'a': 'bdacccca', 'b': 'bdaccccacbb', 'c': 'bcb', 'd': 'acacbd'}, 'daccbddab': {'a': 'daccbddaba', 'b': 'bd', 'c': 'daccbddabc', 'd': 'daccbddabd'}, 'bdaa': {'a': 'bdaa', 'b': 'bcb', 'c': 'bdaac', 'd': 'acaad'}, 'acaaaacbccc': {'a': 'bdacac', 'b': 'acaaaacbcccb', 'c': 'acaaaacbcc', 'd': 'bcb'}, 'bdacccacccacbd': {'a': 'a', 'b': 'bcb', 'c': 'bcb', 'd': 'bdaccccacbdd'}, 'daccbdda': {'a': 'acacccbdaac', 'b': 'daccbddab', 'c': 'acacccbdaac', 'd': 'acacccbdaabd'}, 'acaaaa': {'a': 'dacca', 'b': 'bdaca', 'c': 'acaaaac', 'd': 'bdaca'}, 'daccaba': {'a': 'bdacccaccca', 'b': 'bcb', 'c': 'bdaccccac', 'd': 'acaad'}, 'bcbd': {'a': 'bcb', 'b': 'bcb', 'c': 'bcb', 'd': 'bcb'}, 'acacccbdaabb': {'a': 'bdaccccacbd', 'b': 'acacccbdaabbb', 'c': 'bcb', 'd': 'bdaccccacbdd'}, 'daccbc': {'a': 'aca', 'b': 'bdaccccacb', 'c': 'daccbcc', 'd': 'bdaccccacbd'}, 'bdaccca': {'a': 'bdacac', 'b': 'bcb', 'c': 'bdacccac', 'd': 'bcb'}, 'daccbdd': {'a': 'daccbdda', 'b': 'bd', 'c': 'acacccbdc', 'd': 'daccbdd'}, 'bdacccca': {'a': 'bdacccca', 'b': 'bcb', 'c': 'bdaccccac', 'd': 'bcb'}, 'acacccbdaab': {'a': 'acacbda', 'b': 'acacccbdaabb', 'c': 'acacccbc', 'd': 'acacccbdaabd'}, 'daccab': {'a': 'daccaba', 'b': 'bd', 'c': 'bcb', 'd': 'bdaccccacbd'}, 'bdacc': {'a': 'bdacca', 'b': 'b', 'c': 'bdaccc', 'd': 'bcb'}, 'daccb': {'a': 'daccbddabacba', 'b': 'daccbb', 'c': 'daccbc', 'd': 'acacccbd'}, 'daccbddabdaabc': {'a': 'bdacccca', 'b': 'b', 'c': 'bdaccccac', 'd': 'acacccbdc'}, 'bdaacc': {'a': 'bdacccca', 'b': 'bdaaccb', 'c': 'acacccc', 'd': 'bdaca'}, 'acacccbdaabbb': {'a': 'acacccbdc', 'b': 'acacccbdaabbbb', 'c': 'bcb', 'd': 'bdaccccacbdd'}, 'acac': {'a': 'acaa', 'b': 'acacb', 'c': 'acacc', 'd': 'bdaca'}, 'acacccba': {'a': 'aca', 'b': 'b', 'c': 'acaaaacbc', 'd': 'acacccbdc'}, 'bdaccacc': {'a': 'bdaccac', 'b': 'b', 'c': 'bdacccc', 'd': 'bcb'}, 'acacbda': {'a': 'acacccbda', 'b': 'bd', 'c': 'acacbdac', 'd': 'acacccbdc'}, 'daa': {'a': 'acacccbdaaa', 'b': 'daab', 'c': 'acacccbdaac', 'd': 'acacccbdc'}, 'bd': {'a': 'bda', 'b': 'bcb', 'c': 'bcb', 'd': 'acacccbdc'}, 'acaaaacbcc': {'a': 'bdacac', 'b': 'bdaccccacbb', 'c': 'acaaaacbccc', 'd': 'bcb'}, 'bdacccacccacbb': {'a': 'acacccbdc', 'b': 'acacccbdaabbbb', 'c': 'bcb', 'd': 'bdaccccacbddd'}, 'bdacccacccbccb': {'a': 'bcb', 'b': 'bdacccacccbccbb', 'c': 'bcb', 'd': 'bdaccccacbd'}, 'daab': {'a': 'acaaa', 'b': 'bdaaccb', 'c': 'daccbc', 'd': 'bdaccccacbd'}, 'acacbdac': {'a': 'dacca', 'b': 'acacbdacb', 'c': 'dacc', 'd': 'acacccbdc'}, 'acaccccbbc': {'a': 'bdaca', 'b': 'b', 'c': 'bcb', 'd': 'acacccbdc'}, 'daccbddabdacbb': {'a': 'daccbddabacba', 'b': 'bdaccccacbb', 'c': 'bd', 'd': 'daccbdd'}, 'acacccbdc': {'a': 'bdaa', 'b': 'b', 'c': 'bcb', 'd': 'acacccbdc'}, 'daccbd': {'a': 'acacccbda', 'b': 'bd', 'c': 'acacccbdc', 'd': 'daccbdd'}, 'bdac': {'a': 'bdaca', 'b': 'b', 'c': 'bdacc', 'd': 'bcb'}, 'bc': {'a': 'bcb', 'b': 'bcb', 'c': 'bcb', 'd': 'bcb'}, 'acaaaacb': {'a': 'aca', 'b': 'acacb', 'c': 'acaaaacbc', 'd': 'acacbd'}, 'acacbd': {'a': 'acacbda', 'b': 'bcb', 'c': 'bcb', 'd': 'bdaccccacbdd'}, 'daccbcc': {'a': 'bdacccca', 'b': 'bdaccccacbb', 'c': 'daccbccc', 'd': 'acacccbdc'}, 'bdaccccacba': {'a': 'bdacca', 'b': 'bcb', 'c': 'bdacac', 'd': 'bcb'}, 'dacb': {'a': 'a', 'b': 'acacbdacbb', 'c': 'dacbc', 'd': 'bdaccccacbddd'}, 'daccbddabd': {'a': 'daccbddabda', 'b': 'bcb', 'c': 'bcb', 'd': 'daccbddabd'}, 'bdaca': {'a': 'bda', 'b': 'bcb', 'c': 'bdacac', 'd': 'bcb'}, 'acacbdacb': {'a': 'a', 'b': 'acacbdacbb', 'c': 'acacccbdc', 'd': 'acacccbd'}, 'daccbddabacba': {'a': 'dacca', 'b': 'bd', 'c': 'acac', 'd': 'acacccbdc'}, 'dacbcc': {'a': 'bcb', 'b': 'bdacccacccbccb', 'c': 'dacbccc', 'd': 'bcb'}, 'daccbddabdacbc': {'a': 'aca', 'b': 'acacccbdaabb', 'c': 'acaaaacbc', 'd': 'bdaccccacbd'}, 'acaaa': {'a': 'acaaaa', 'b': 'bcb', 'c': 'dac', 'd': 'bdaca'}, 'bdaccccacbdd': {'a': 'acacccbda', 'b': 'bcb', 'c': 'bcb', 'd': 'bdaccccacbddd'}, 'daccbbb': {'a': 'daccbddabd', 'b': 'daccbbb', 'c': 'b', 'd': 'daccbbbd'}, 'acacccbdaac': {'a': 'acacccbdaaa', 'b': 'daccb', 'c': 'dacc', 'd': 'acacccbdaabd'}, 'acaaaac': {'a': 'dacca', 'b': 'acaaaacb', 'c': 'dacc', 'd': 'acacccbdc'}, 'bdacccacccbccc': {'a': 'bcb', 'b': 'bdacccacccbccbb', 'c': 'acaaaacbccc', 'd': 'bcb'}, 'daccbbbdb': {'a': 'acacccbdc', 'b': 'bdacccacccbccb', 'c': 'bcb', 'd': 'd'}, 'bdaaccb': {'a': 'bdacccca', 'b': 'bdaccccacbb', 'c': 'b', 'd': 'bdaccccacbd'}, 'bdacccaccc': {'a': 'bdacccaccca', 'b': 'bdacccacccb', 'c': 'acaccc', 'd': 'bcb'}, 'acacccb': {'a': 'acacccba', 'b': 'acacb', 'c': 'acacccbc', 'd': 'acacccbd'}, 'acacccbda': {'a': 'acacccbdaa', 'b': 'acacccbdc', 'c': 'acacccbdac', 'd': 'daccbddabd'}, 'acacccbdaaab': {'a': 'da', 'b': 'acacccbdaaabb', 'c': 'daccbc', 'd': 'acacccbdaabd'}, 'bdacccc': {'a': 'bdacccca', 'b': 'acacccb', 'c': 'acaccc', 'd': 'bcb'}, 'bdaccccacbd': {'a': 'a', 'b': 'bcb', 'c': 'bcb', 'd': 'bdaccccacbdd'}, 'bdacac': {'a': 'bcb', 'b': 'b', 'c': 'bdaccca', 'd': 'bcb'}, 'bdaccccacbb': {'a': 'bda', 'b': 'bdacccacccacbb', 'c': 'bcb', 'd': 'bdaccccacbddd'}, 'acacccbc': {'a': 'bdaa', 'b': 'bdaccccacb', 'c': 'bdacccac', 'd': 'acacccbdc'}, 'acacccbdaaa': {'a': 'acacccbdaaa', 'b': 'acacccbdaaab', 'c': 'acacccbdaac', 'd': 'acacccbdaabd'}, 'acacccc': {'a': 'acacccca', 'b': 'acaccccb', 'c': 'acacccc', 'd': 'acacccbdc'}}
Explanation matches RNN: 55.55
RNN matches ground truth: 100.0
Explanation matches ground truth: 55.55
Lstar matches RNN: 99.99
Lstar matches ground truth: 99.99
target query                                        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((b | (a | c)) | (X (b | (a | c)))) -> (X (X ...  False          100.0      100.0              55.55                              55.55       401.087678   1.964353e+09         2.689416  [a, , c, b, da, acaccccbd, cc, cd, ad, bd, ab,...          0         0         5          130                    99.99                                    99.99               9.150095         True     0.25   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1272423267364502  s
No positive counterexample found
EQ test took  0.00798177719116211  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11780381202697754  s
EQ test took  0.0015881061553955078  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18471956253051758  s
No positive counterexample found
EQ test took  0.037342071533203125  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3428616523742676  s
No positive counterexample found
EQ test took  0.09162092208862305  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0603036880493164  s
EQ test took  0.04293322563171387  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: ((b | (a | c)) -> (X (b | (a | c))))
Learning took:  2.551570415496826  s
EQ test took  0.04452943801879883  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'cb']



5  iteration complete



start formula depth: 7
Before normalization: ((x1 | (x2 | x0)) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X c))
Learning took:  1.5691452026367188  s
No positive counterexample found
EQ test took  0.11349248886108398  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F ((x1 | x2) | x0)) -> (X x2))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (X c))
Learning took:  10.72033977508545  s
EQ test took  0.1572706699371338  s
new counterexample: ddacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddacbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db']



7  iteration complete



start formula depth: 8
Before normalization: ((F x1) U (! ((F x1) | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: ((F b) U (~ ((a | c) | (F b))))
Learning took:  4.861619472503662  s
EQ test took  0.06424307823181152  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc']



8  iteration complete



start formula depth: 8
Before normalization: (F (G (! ((x1 | x0) | x2))))
Learning formula with depth 5
learned LTL formula: (F (G (~ (c | (a | b)))))
Learning took:  5.765949726104736  s
No positive counterexample found
EQ test took  0.042891502380371094  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad']



9  iteration complete



start formula depth: 8
Before normalization: ((F (x2 | x1)) U (! ((F (x2 | x1)) | x0)))
Learning formula with depth 5
learned LTL formula: ((F (b | c)) U (~ (a | (F (b | c)))))
Learning took:  62.59654760360718  s
No positive counterexample found
EQ test took  0.053009986877441406  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd']



10  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((X (x2 | x1)) U ((x2 | x1) | x0)) -> (X (X (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (((X (b | c)) U (a | (b | c))) -> (X (X (b | c))))
Learning took:  166.93530106544495  s
EQ test took  0.10019230842590332  s
new counterexample: aaacaaacbbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddacbd', 'aaacaaacbbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd']



11  iteration complete



start formula depth: 9
Before normalization: ((F (x2 | (x0 | x1))) -> (X (X (x2 | (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F (c | (a | b))) -> (X (X (c | (a | b)))))
Learning took:  19.475704193115234  s
EQ test took  0.08675646781921387  s
new counterexample: bcc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd', 'aaacaaacbbd']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd', 'bcc']



12  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! (x0 | (x2 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (a | (b | c)))))
Learning took:  18.28821349143982  s
EQ test took  0.09358644485473633  s
new counterexample: daccabbbbbb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddacbd', 'aaacaaacbbd', 'daccabbbbbb']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd', 'bcc']



13  iteration complete



start formula depth: 9
Before normalization: (((F (x2 | x1)) -> (F x0)) & (x0 -> (F (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((a -> (F (b | c))) & ((F (b | c)) -> (F a)))
Learning took:  30.14115619659424  s
EQ test took  0.04970908164978027  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd', 'aaacaaacbbd', 'daccabbbbbb']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd', 'bcc', 'ba']



14  iteration complete



start formula depth: 9
Before normalization: ((x0 | (F (x2 | x1))) -> ((x0 | (F (x2 | x1))) U ((F (x2 | x1)) & x0)))
Learning formula with depth 5
learned LTL formula: ((a | (F (b | c))) -> ((a | (F (b | c))) U (a & (F (b | c)))))
Learning took:  52.989437103271484  s
No positive counterexample found
EQ test took  0.05612826347351074  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddacbd', 'aaacaaacbbd', 'daccabbbbbb']


negative traces---> 
['b', 'a', 'c', 'cb', 'db', 'dc', 'ad', 'cd', 'bcc', 'ba', 'ac']



15  iteration complete





epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: true
final ltl:  ((a | (F (b | c))) -> ((a | (F (b | c))) U (a & (F (b | c)))))
incomplete formula
Number of samples: 118
Number of counterexamples returned: 118
1.0 None

Time taken to extract ltl: 401.03702569007874
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.020555496215820312
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 45.12
RNN matches ground truth: 100.0
Explanation matches ground truth: 45.12
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                                        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((a | (F (b | c))) -> ((a | (F (b | c))) U (a ...  False          100.0      100.0              45.12                              45.12       401.037026            1.0            None  [b, , a, c, acbd, cb, db, ddacbd, dc, ad, cd, ...          0         0         5            2                    58.01                                    58.01               0.020555         True      0.1    0.5
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12753629684448242  s
No positive counterexample found
EQ test took  0.004330635070800781  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11715364456176758  s
EQ test took  0.0015969276428222656  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17852282524108887  s
No positive counterexample found
EQ test took  0.022571802139282227  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35415029525756836  s
No positive counterexample found
EQ test took  0.06204366683959961  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0258269309997559  s
EQ test took  0.06999707221984863  s
new counterexample: aacbbd  should be accepted by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((x0 | (x1 | x2)) -> (X x0))
Learning formula with depth 3
learned LTL formula: ((a | (b | c)) -> (X a))
Learning took:  3.1578853130340576  s
EQ test took  0.09853529930114746  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b', 'da']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (x1 | ((F (G x0)) | x2)))
Learning formula with depth 5
learned LTL formula: (~ (b | (c | (F (G a)))))
Learning took:  10.832330226898193  s
No positive counterexample found
EQ test took  0.09414052963256836  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b', 'da', 'ad']



6  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((! (x2 | x1)) & (G (x0 -> (F x1))))
Learning formula with depth 4
learned LTL formula: ((~ (b | c)) & (G (a -> (F b))))
Learning took:  90.03516888618469  s
No positive counterexample found
EQ test took  0.13835549354553223  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab']



7  iteration complete



start formula depth: 9
Before normalization: (((x1 | (F x0)) | x2) -> (x0 & (X x0)))
Learning formula with depth 4
learned LTL formula: ((c | (b | (F a))) -> (a & (X a)))
Learning took:  5.494246959686279  s
No positive counterexample found
EQ test took  0.20293021202087402  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc']



8  iteration complete



start formula depth: 9
Before normalization: (((F (x0 | (F x2))) | x1) -> ((F x2) & x0))
Learning formula with depth 5
learned LTL formula: ((b | (F (a | (F c)))) -> (a & (F c)))
Learning took:  6.339927911758423  s
No positive counterexample found
EQ test took  0.19574785232543945  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'aacbbd']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc', 'ac']



9  iteration complete



start formula depth: 9
Before normalization: (((F (x0 | x2)) | x1) -> (X (X x2)))
Learning formula with depth 4
learned LTL formula: ((b | (F (a | c))) -> (X (X c)))
Learning took:  9.975872039794922  s
EQ test took  0.06406259536743164  s
new counterexample: daacbb  should be accepted by implementation


positive traces---> 
['', 'aacbbd', 'daacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc', 'ac']



10  iteration complete



start formula depth: 9
Before normalization: (((X (x2 | x0)) U ((x2 | x0) | x1)) -> (X (X (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (((X (a | c)) U (b | (a | c))) -> (X (X (a | c))))
Learning took:  13.790775299072266  s
EQ test took  0.15161347389221191  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'aacbbd', 'daacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc', 'ac', 'db']



11  iteration complete



start formula depth: 9
Before normalization: (((X (x0 | (x1 | x2))) U (x0 | (x1 | x2))) -> (X (X (x0 | (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (((X (a | (b | c))) U (a | (b | c))) -> (X (X (a | (b | c)))))
Learning took:  47.172194480895996  s
No positive counterexample found
EQ test took  0.11725807189941406  s
new counterexample: adb  should be rejected by implementation


positive traces---> 
['', 'aacbbd', 'daacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc', 'ac', 'db', 'adb']



12  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x0 | x2))) -> (X (X (x0 | x2))))
Learning formula with depth 4
learned LTL formula: ((F (b | (a | c))) -> (X (X (a | c))))
Learning took:  68.89766192436218  s
No positive counterexample found
EQ test took  0.1870875358581543  s
new counterexample: bcc  should be rejected by implementation


positive traces---> 
['', 'aacbbd', 'daacbb']


negative traces---> 
['a', 'c', 'b', 'da', 'ad', 'ab', 'dc', 'ac', 'db', 'adb', 'bcc']



13  iteration complete





epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: true
final ltl:  ((F (b | (a | c))) -> (X (X (a | c))))
incomplete formula
Number of samples: 111
Number of counterexamples returned: 55
7.221743775038298e+29 1.3524706875317691

Time taken to extract ltl: 401.11575055122375
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.03689289093017578
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 57.14
RNN matches ground truth: 100.0
Explanation matches ground truth: 57.14
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                             explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (b | (a | c))) -> (X (X (a | c))))  False          100.0      100.0              57.14                              57.14       401.115751   7.221744e+29         1.352471  [a, , c, b, aacbbd, da, ad, ab, dc, ac, daacbb...          0         0         4            2                    58.01                                    58.01               0.036893         True      0.1   0.25
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11285662651062012  s
No positive counterexample found
EQ test took  0.012819528579711914  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12359189987182617  s
EQ test took  0.0015926361083984375  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1843419075012207  s
No positive counterexample found
EQ test took  0.04118990898132324  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3393080234527588  s
EQ test took  0.043265581130981445  s
new counterexample: aaccbd  should be accepted by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((x2 | x0) -> (X x0))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X a))
Learning took:  0.8857951164245605  s
EQ test took  0.0986642837524414  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: ((x2 | (x0 | x1)) -> (X (x2 | (x0 | x1))))
Learning formula with depth 4
learned LTL formula: ((c | (a | b)) -> (X (c | (a | b))))
Learning took:  3.9087960720062256  s
No positive counterexample found
EQ test took  0.07089686393737793  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b', 'aa']



5  iteration complete



start formula depth: 7
Before normalization: (((x1 | x0) | x2) U (! ((x1 | x0) | x2)))
Learning formula with depth 4
learned LTL formula: ((c | (a | b)) U (~ (c | (a | b))))
Learning took:  2.012406826019287  s
No positive counterexample found
EQ test took  0.028445959091186523  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((F x1) -> x0) & ((x2 | x0) -> (F x1)))
Learning formula with depth 3
learned LTL formula: (((a | c) -> (F b)) & ((F b) -> a))
Learning took:  12.649197578430176  s
No positive counterexample found
EQ test took  0.1547544002532959  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab']



7  iteration complete



start formula depth: 8
Before normalization: ((x2 | (x0 | x1)) -> (x0 U (X x2)))
Learning formula with depth 3
learned LTL formula: ((c | (a | b)) -> (a U (X c)))
Learning took:  3.934931755065918  s
No positive counterexample found
EQ test took  0.13726091384887695  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc']



8  iteration complete



start formula depth: 8
Before normalization: (((x1 | x0) | (F x2)) -> ((F x2) & x0))
Learning formula with depth 3
learned LTL formula: (((a | b) | (F c)) -> (a & (F c)))
Learning took:  4.263790130615234  s
No positive counterexample found
EQ test took  0.1851189136505127  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'aaccbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((F (x0 | (x1 | x2))) -> (x0 & (F x2)))
Learning formula with depth 4
learned LTL formula: ((F (a | (b | c))) -> (a & (F c)))
Learning took:  120.8626389503479  s
EQ test took  0.08115434646606445  s
new counterexample: daacbd  should be accepted by implementation


positive traces---> 
['', 'aaccbd', 'daacbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da']



10  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! ((x1 | x2) | x0))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (a | (b | c)))))
Learning took:  15.5762038230896  s
EQ test took  0.11851119995117188  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'aaccbd', 'daacbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da', 'bd']



11  iteration complete



start formula depth: 9
Before normalization: (((F (x2 | x0)) | x1) -> (X (X (x2 | x0))))
Learning formula with depth 4
learned LTL formula: ((b | (F (a | c))) -> (X (X (a | c))))
Learning took:  15.576448917388916  s
EQ test took  0.04971122741699219  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'aaccbd', 'daacbd', 'acbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da', 'bd']



12  iteration complete



start formula depth: 9
Before normalization: (((x1 | (F x0)) -> (F x2)) & ((F x2) -> (F x0)))
Learning formula with depth 4
learned LTL formula: (((F c) -> (F a)) & ((b | (F a)) -> (F c)))
Learning took:  18.043994188308716  s
EQ test took  0.05760502815246582  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'aaccbd', 'daacbd', 'acbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da', 'bd', 'ca']



13  iteration complete



start formula depth: 9
Before normalization: ((F ((x1 | x0) | x2)) -> (X (X ((x1 | x0) | x2))))
Learning formula with depth 5
learned LTL formula: ((F (c | (a | b))) -> (X (X (c | (a | b)))))
Learning took:  21.00089454650879  s
No positive counterexample found
EQ test took  0.1294574737548828  s
new counterexample: bbc  should be rejected by implementation


positive traces---> 
['', 'aaccbd', 'daacbd', 'acbd']


negative traces---> 
['c', 'a', 'b', 'aa', 'ad', 'ab', 'dc', 'da', 'bd', 'ca', 'bbc']



14  iteration complete





epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((F (c | (a | b))) -> (X (X (c | (a | b)))))
incomplete formula
Number of samples: 127
Number of counterexamples returned: 96
1.664350577633921e+28 2.270464603248706

Time taken to extract ltl: 401.11619687080383
overall guided extraction time took: 0.09000000000003183
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.0963442325592041
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 42.96
RNN matches ground truth: 100.0
Explanation matches ground truth: 42.96
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                                   explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (c | (a | b))) -> (X (X (c | (a | b)))))  False          100.0      100.0              42.96                              42.96       401.116197   1.664351e+28         2.270465  [c, , a, aaccbd, b, aa, ad, ab, dc, da, daacbd...          0         0         5            2                    58.01                                    58.01               0.096344         True      0.1    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11726880073547363  s
No positive counterexample found
EQ test took  0.016896486282348633  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12301397323608398  s
EQ test took  0.0016477108001708984  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18564414978027344  s
No positive counterexample found
EQ test took  0.03940272331237793  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3625807762145996  s
No positive counterexample found
EQ test took  0.10108304023742676  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.0947339534759521  s
No positive counterexample found
EQ test took  0.15879321098327637  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (F (x0 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (b | (F (a | c))))
Learning took:  2.4131321907043457  s
EQ test took  0.0888071060180664  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'da']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (x2 | ((F (G x0)) | x1)))
Learning formula with depth 5
learned LTL formula: (~ (c | (b | (F (G a)))))
Learning took:  9.352148056030273  s
EQ test took  0.1665637493133545  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac']



6  iteration complete



start formula depth: 8
Before normalization: (! (F (G (x2 | (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: (~ (F (G (c | (a | b)))))
Learning took:  6.4065330028533936  s
No positive counterexample found
EQ test took  0.04408001899719238  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd']



7  iteration complete



start formula depth: 8
Before normalization: ((F (x0 | x1)) U (! ((F (x0 | x1)) | x2)))
Learning formula with depth 5
learned LTL formula: ((F (a | b)) U (~ (c | (F (a | b)))))
Learning took:  23.882680654525757  s
No positive counterexample found
EQ test took  0.055237531661987305  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((F x0) | (x1 | x2)) -> (X (F x1)))
Learning formula with depth 3
learned LTL formula: (((F a) | (b | c)) -> (X (F b)))
Learning took:  135.21750140190125  s
No positive counterexample found
EQ test took  0.0433046817779541  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb']



9  iteration complete



start formula depth: 9
Before normalization: (((F x0) | (x2 | x1)) -> (X (X x1)))
Learning formula with depth 3
learned LTL formula: (((F a) | (b | c)) -> (X (X b)))
Learning took:  7.733519077301025  s
EQ test took  0.17396116256713867  s
new counterexample: acacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'acacbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb']



10  iteration complete



start formula depth: 9
Before normalization: (((x2 | (F x0)) | x1) -> ((F x0) & (F x1)))
Learning formula with depth 4
learned LTL formula: ((b | (c | (F a))) -> ((F a) & (F b)))
Learning took:  11.774895191192627  s
EQ test took  0.05558633804321289  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'acbd', 'acacbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb', 'ba']



11  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! ((x1 | x2) | (F x0))))
Learning formula with depth 4
learned LTL formula: ((F b) U (~ ((F a) | (b | c))))
Learning took:  18.32299304008484  s
No positive counterexample found
EQ test took  0.0828087329864502  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'acacbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb', 'ba', 'dc']



12  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (! ((F (x2 | x0)) | x1)))
Learning formula with depth 5
learned LTL formula: ((F b) U (~ (b | (F (a | c)))))
Learning took:  14.855899095535278  s
No positive counterexample found
EQ test took  0.09738326072692871  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'acacbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb', 'ba', 'dc', 'bd']



13  iteration complete



start formula depth: 9
Before normalization: ((F (x2 | (x0 | x1))) -> (x0 & ((x2 | (x0 | x1)) U x1)))
Learning formula with depth 5
learned LTL formula: ((F (c | (a | b))) -> (a & ((c | (a | b)) U b)))
Learning took:  16.781693696975708  s
EQ test took  0.15355348587036133  s
new counterexample: dacbccbbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'acacbd', 'dacbccbbd']


negative traces---> 
['b', 'c', 'a', 'da', 'ac', 'cd', 'ad', 'cb', 'ba', 'dc', 'bd']



14  iteration complete





epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((F (c | (a | b))) -> (a & ((c | (a | b)) U b)))
incomplete formula
Number of samples: 134
Number of counterexamples returned: 21
2.163147706370354e+19 0.5204992342726997

Time taken to extract ltl: 401.1147801876068
overall guided extraction time took: 101.78999999999996
generated counterexamples were: (format: (counterexample, counterexample generation time))
('accacbd', 0.2300000000000182)
('bcbd', 0.12999999999999545)
('dacbdd', 0.3000000000000682)
('acbdaaccdcccbd', 0.17000000000007276)
('daaaaacabdd', 0.38999999999998636)

Time taken to extract lstar-dfa: 101.79567313194275
number of states of the dfa: 600
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'b', 'd': 'd'}, 'b': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbdaacbbbbbddddaca': {'a': 'acbdaacbbbbbddddacaa', 'b': 'daaaab', 'c': 'acbdaacbbbbbddddacac', 'd': 'acbdaacbbbbbddddacad'}, 'acbdaacbbbbbddacbbbddacc': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbddddaccb', 'c': 'acbdaacbbbbbddacbbbddaccc', 'd': 'acbdaaccbd'}, 'acbdaacbbbbbbddacc': {'a': 'acbdaacbbbbbbddacca', 'b': 'acbdaacbbbbbbddaccb', 'c': 'acbdaacbbbbbbddaccc', 'd': 'acbdaacbbbbbbddaccd'}, 'acbdaacbbbbbddacbbbddad': {'a': 'dacbddaaacbddda', 'b': 'acbdaacbbbbbdddadb', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddacbbbddadd'}, 'acbdaacbbbbbddc': {'a': 'acbdaacbbbbbddca', 'b': 'acbdaaccdcccbb', 'c': 'acbdaaccdcccb', 'd': 'acbdaacbbbbbdab'}, 'acbdaaabc': {'a': 'accbaa', 'b': 'dacbddaababb', 'c': 'accac', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbddddaaccccd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'acbdaacbbbbbddddaaccccdc', 'd': 'dacbdd'}, 'acbdaacbbbbdaa': {'a': 'acbdaacbbbbdaaa', 'b': 'acbdaacbbbbdaab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'acbdaacbbbbbddddacaad'}, 'acbdaacbbbbbddddbdda': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'dacc', 'd': 'acbdaaad'}, 'acbdaacbbbbbddacbdc': {'a': 'a', 'b': 'daccabb', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'dacbddab'}, 'dacbd': {'a': 'dacbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbdd'}, 'accaca': {'a': 'accaca', 'b': 'b', 'c': 'accacac', 'd': 'b'}, 'daaaaacab': {'a': 'dacbddaaacbca', 'b': 'dacbb', 'c': 'daccc', 'd': 'daaaaacabd'}, 'acbdaacbbbbbbdddbdacbd': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'b', 'c': 'b', 'd': 'dacbdd'}, 'dacbddaaaccccbbdddaabb': {'a': 'dacbddaabacaa', 'b': 'acbdaacbb', 'c': 'dacbddaaaccccbbdddaabbc', 'd': 'acbdaacbbd'}, 'acbdaacbbbbbddddacbbc': {'a': 'accbaa', 'b': 'acbdaacbbbbbddabb', 'c': 'acbdaacbbbbbddddacbbcc', 'd': 'acbdaaccdcccbbd'}, 'acbdaacbbbbbddacbbbdaccd': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaacbbbbbddddac': {'a': 'acbdaacbbbbbddddaca', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbddddacc', 'd': 'dacbddaaacccbd'}, 'acbdaacbbbbbddddaccbdac': {'a': 'acbdaacbbbbbddddaccbdaca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddaccbdacc', 'd': 'acbdaacbbbbbddddacaad'}, 'dacbddaca': {'a': 'daaaaacaa', 'b': 'daaaaacacca', 'c': 'acbdaaac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaaa': {'a': 'acbdaaaa', 'b': 'acbdaaab', 'c': 'acbdaaac', 'd': 'acbdaaad'}, 'acbdaaccdcccbddacb': {'a': 'acbda', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'accba', 'd': 'dacbdd'}, 'acbdaacbcbdaaddaccacccba': {'a': 'dacca', 'b': 'b', 'c': 'daccc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaacccccc': {'a': 'acbdaaabc', 'b': 'acbdaacbbbbbddddaaccccccb', 'c': 'acbdaacbbbbbddddaaccccccc', 'd': 'acbd'}, 'acbdaaccdcccbb': {'a': 'b', 'b': 'acb', 'c': 'b', 'd': 'acbdaaccdcccbbd'}, 'acbdaacbbbbbddddaccbc': {'a': 'daccaa', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbddddaccbcd'}, 'acbdaacbcbdaaddaccabb': {'a': 'acbdaacbcbdaaddaccabba', 'b': 'acb', 'c': 'b', 'd': 'd'}, 'acbdaacbbbbbdddda': {'a': 'acbdaacbbbbbddddaa', 'b': 'acbdaacbbbbbddddab', 'c': 'acbdaacbbbbbddddac', 'd': 'acbdaacbbbbbdddad'}, 'acbdaacbbbbbddddaccbda': {'a': 'acbdaacbbbbbdddaa', 'b': 'acbdaacbbbbbddddaccbdab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'acbdaacbbbbbddddacaad'}, 'dacbddaaaccccbbdddacdaadaa': {'a': 'dacbddaaac', 'b': 'dacbddaaacca', 'c': 'dacbddaac', 'd': 'dacbddad'}, 'dacbddad': {'a': 'da', 'b': 'b', 'c': 'b', 'd': 'dacbddadd'}, 'acbdaacbbbbbddddaccbddaddaa': {'a': 'dacbddaaaa', 'b': 'acbdaacbbbbbddddaccbddaddaab', 'c': 'dacbddaac', 'd': 'acbdaacbbbbbddddaccbddaddaad'}, 'acbdaacbbbbbbddaccd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'acbdaacbbbbbbddaccdd'}, 'dacbddaaacccbc': {'a': 'accbaa', 'b': 'dacbddaaacccbcb', 'c': 'acc', 'd': 'accbbd'}, 'acbdaacbbbbbddddaccbddadda': {'a': 'acbdaacbbbbbddddaccbddaddaa', 'b': 'dacbddaabbba', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'dacbddadd'}, 'acbdaacbbbbbbddaccac': {'a': 'daccaa', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'dacbddaaacbcc', 'd': 'acbdaaccd'}, 'dacbddaaacbca': {'a': 'dacbddaaacbca', 'b': 'dacbddaaacbcab', 'c': 'daccc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaccbddc': {'a': 'dacca', 'b': 'daccabb', 'c': 'acbdaacbbbacc', 'd': 'dacbddab'}, 'dacbddaac': {'a': 'acbdaacbbbbbddddacaa', 'b': 'dacbddaaacb', 'c': 'dacbddaacc', 'd': 'dacbddaaacd'}, 'acbdaacbbbbbddddaadda': {'a': 'dacbddaac', 'b': 'acbdaacbbbbbddddaaddab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'dacbddad'}, 'dacbddaaab': {'a': 'dacbddaaaccccbbda', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddaaaccdd'}, 'acbdaacbcbdaaddac': {'a': 'da', 'b': 'acbdaacbcbdaaddacb', 'c': 'acbdaacbcbdaaddacc', 'd': 'acbdaaabcd'}, 'da': {'a': 'daa', 'b': 'acbdaaabcd', 'c': 'dac', 'd': 'acbdaaabcd'}, 'acbdaacbb': {'a': 'acbdaacbba', 'b': 'acbdaacbbb', 'c': 'acbdaaabcd', 'd': 'acbdaacbbd'}, 'acbdaacbbbbbddddaccb': {'a': 'acbdaacbbbbbddddaccba', 'b': 'acbdaacbbbbbddddaccbb', 'c': 'acbdaacbbbbbddddaccbc', 'd': 'acbdaacbbbbbddddaccbd'}, 'acbdaacbbbbbddacbbbbbddd': {'a': 'acbdaacbbbbbddda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'acbdaacbbbbbdddc', 'd': 'acbdaacbbbbbdddd'}, 'acbdaacbbbbbddacbbbbbddab': {'a': 'acbdaacbbbbbddacbba', 'b': 'acb', 'c': 'b', 'd': 'acbdaacbbbbbddddacacccd'}, 'acbdaacbcbdaaddacca': {'a': 'acbdaacbcbdaaddacca', 'b': 'acbdaacbcbdaaddaccab', 'c': 'acbdaacbcbdaaddaccac', 'd': 'acbdaaabcd'}, 'acbdaacbcbdaaddacc': {'a': 'acbdaacbcbdaaddacca', 'b': 'acbdaacbcbdaaddaccacb', 'c': 'acbdaacbcbdaaddaccc', 'd': 'dacbddaababd'}, 'daaaaacac': {'a': 'dacbddaaacca', 'b': 'acbdaaccb', 'c': 'daaaaacacc', 'd': 'daaaaacacd'}, 'dacbddaaacbdddacc': {'a': 'acbdaacbbbbbddddaccbda', 'b': 'acbdaacbbbbbddddaccb', 'c': 'acbdaacbbbbbddddaccc', 'd': 'dacbddaaacbdddaccd'}, 'acbdaaccdcccb': {'a': 'b', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccdcccbd'}, 'dacbddaaaccccbbdddacdaa': {'a': 'dacbddaaac', 'b': 'dacbddaaaccccbbdddacdaab', 'c': 'dacbddaac', 'd': 'dacbddaaaccccbbdddacdaad'}, 'dacbddab': {'a': 'acbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddaababd'}, 'dacbddaaada': {'a': 'dacbddaaaccccbbdddacdaa', 'b': 'dacbddaaaccccbbddba', 'c': 'dacbddaa', 'd': 'dacbddadd'}, 'acbdaaccdcccbdda': {'a': 'acbdaacbbbbbbdddbdacbdaa', 'b': 'acbdaaabcd', 'c': 'acbdaaccdcccbddac', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbbdddbdacbda': {'a': 'acbdaacbbbbbbdddbdacbdaa', 'b': 'acbdaaad', 'c': 'dacbddaaacbc', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddddacc': {'a': 'acbdaacbbbbbddddacca', 'b': 'acbdaacbbbbbddddaccb', 'c': 'acbdaacbbbbbddddaccc', 'd': 'acbdaaccbd'}, 'dacbddaaacccd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'accaa', 'd': 'acbdaacbbbbbbddaccdd'}, 'acbdaacbbbbbddddaacd': {'a': 'dacbddaaacda', 'b': 'dacbddadd', 'c': 'a', 'd': 'dacbddaabd'}, 'acbdaacbbbbbddddacba': {'a': 'daaaaacaa', 'b': 'acbdaacbbbbbddacbbbdab', 'c': 'dacbddaaacbc', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddaccd': {'a': 'dacbddaabacaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'acbdaacbbbbbbddaccdd'}, 'dacbddaaaccccbbdddacdab': {'a': 'daaaaacabda', 'b': 'dacbddaaacbcab', 'c': 'acbdaaabc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddacbbdb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acb', 'c': 'b', 'd': 'accbbd'}, 'dacbddaaaccccbbdddadd': {'a': 'acbdaacbbbbbddddaadda', 'b': 'b', 'c': 'dacbddaaaccccbbddba', 'd': 'dacbddaaaccccbbdddaddd'}, 'dacbddaaacbcd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddaaaccdd'}, 'dacbddaaaccccb': {'a': 'dacbddaaaccccba', 'b': 'dacbddaaaccccbb', 'c': 'dacbddaaaccccbc', 'd': 'dacbddaaacccbd'}, 'dacbddaaaccccbbdddacdad': {'a': 'dacbddaaaccccbbdddacdada', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'acbdaacbcbdaadd'}, 'acbdaacbbbddaabb': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbb', 'c': 'dacbddaaacccbcbc', 'd': 'dacbdd'}, 'acbdaacbbbddaab': {'a': 'acbdaacbbbbbddddaccbddaddaaba', 'b': 'acbdaacbbbddaabb', 'c': 'dacbddaabc', 'd': 'dacbdd'}, 'acbdaacbbbbbddacbbbddacdd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'dacbddaabd'}, 'acbdaacbcbdaadda': {'a': 'acbdaa', 'b': 'b', 'c': 'acbdaacbcbdaaddac', 'd': 'b'}, 'd': {'a': 'da', 'b': 'b', 'c': 'b', 'd': 'acbdd'}, 'acbdaacbbbbbbddad': {'a': 'acbdaacbbbbbbdddbdacbdaa', 'b': 'b', 'c': 'dacbddadd', 'd': 'dacbdd'}, 'acbdaacbbbbbbdddbb': {'a': 'b', 'b': 'acbdaacbbbdbb', 'c': 'b', 'd': 'acbdaacbbbbbba'}, 'acbdaacbbbbbddddaacc': {'a': 'acbdaacbbbbbddddaacca', 'b': 'acbdaacbbbbbddddaaccb', 'c': 'acbdaacbbbbbddddaaccc', 'd': 'dacbddaaaccccbbdddacad'}, 'acbdaaccdcccbd': {'a': 'accbaa', 'b': 'b', 'c': 'b', 'd': 'acbdaaccdcccbdd'}, 'acbdaacbbbbbddabb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'acb', 'c': 'b', 'd': 'accbbd'}, 'dacbddaaaccccbbdddaabbcc': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'dacbddaaaccccbbdddaabbccc', 'd': 'acbdaaabcd'}, 'dacbddaaaccccbbddda': {'a': 'dacbddaaaccccbbdddaa', 'b': 'dacbddaaaccccbbdddab', 'c': 'dacbddaaaccccbbdddac', 'd': 'dacbddaaaccccbbdddad'}, 'acbdaacbbbbbddaccb': {'a': 'acbdaacbcbda', 'b': 'acbdaacbbbbbddddacacccbb', 'c': 'dacbddaaacbcc', 'd': 'dacbddaaacccbd'}, 'daccbc': {'a': 'daccbca', 'b': 'acbdaaccdcccbb', 'c': 'accac', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddddaccbddaddaab': {'a': 'acbdaacbbbbbddddaccbddaddaaba', 'b': 'acbdaacbbbbbdddab', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddaabd'}, 'acbdaacbbbbbbdddaca': {'a': 'daaaaacaa', 'b': 'acbdaacbbbbbbdddacab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbcb': {'a': 'accba', 'b': 'accbb', 'c': 'b', 'd': 'acbdaacbcbd'}, 'acbdaacbbbbbddddaacca': {'a': 'acbdaacbbbbbddddaaccaa', 'b': 'acbdaaccb', 'c': 'daaacc', 'd': 'acbdaacbbbbbddddacaad'}, 'accb': {'a': 'accba', 'b': 'accbb', 'c': 'b', 'd': 'acbd'}, 'acbdaacbbbbbddddaccbddadacc': {'a': 'acbdaacbbbbbddddacacaa', 'b': 'dacbddaaacb', 'c': 'daaacc', 'd': 'dacbddaaacd'}, 'dacbddaaacbcc': {'a': 'accbaa', 'b': 'accb', 'c': 'acc', 'd': 'acbdaaccd'}, 'daaaaacabda': {'a': 'acbdaacbcbdaa', 'b': 'acbdaaad', 'c': 'dacbddaaacbc', 'd': 'dacbddaababd'}, 'dacbddacb': {'a': 'dacbddaaba', 'b': 'acbdaacbb', 'c': 'acbdaacbc', 'd': 'dacbddacbd'}, 'dacbddaaacbdddaccd': {'a': 'dacbdda', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddaabd'}, 'acbdaacbbbbbddddaccbdab': {'a': 'daca', 'b': 'accb', 'c': 'acbdaaabc', 'd': 'daaaaacabdd'}, 'acbdaaccdcc': {'a': 'dacbccca', 'b': 'b', 'c': 'acbdaaccdccc', 'd': 'b'}, 'acbdaacbbbd': {'a': 'dacbdda', 'b': 'acbdaacbbbdb', 'c': 'acbdaaad', 'd': 'acbdaacbbbdd'}, 'acbdaacbbbbbbdabb': {'a': 'b', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccdcccbbd'}, 'daa': {'a': 'daaa', 'b': 'daab', 'c': 'acbdaaac', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbddddaccbddada': {'a': 'dacbddaaac', 'b': 'acbdaacbbbbbddddaccbddadab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'dacbddad'}, 'acbdaaab': {'a': 'acbda', 'b': 'acbdaaabb', 'c': 'acbdaaabc', 'd': 'dacbddab'}, 'acbdaacbbbbbddacbbbddabba': {'a': 'a', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbacc', 'd': 'dacbddadd'}, 'dacbddaabaca': {'a': 'dacbddaabacaa', 'b': 'dacbddaabacab', 'c': 'dacbddaaacbc', 'd': 'dacbddab'}, 'dacbdaa': {'a': 'daaaa', 'b': 'dacbddaabaab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'dacbddab'}, 'acbdaaccd': {'a': 'acbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddab'}, 'dacbddaaaccccd': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddaaaccccdd'}, 'dacbddaaaccccbbcc': {'a': 'acbdaaccdca', 'b': 'acb', 'c': 'dacbccc', 'd': 'acbdaaabcd'}, 'accbaacaaa': {'a': 'accba', 'b': 'b', 'c': 'acbdaaabc', 'd': 'b'}, 'acbdaacbbbbbddddaaccccccc': {'a': 'acbdaaabc', 'b': 'acbdaacbbbbbddddaaccccccb', 'c': 'acbdaacbbbbbddddaacccccccc', 'd': ''}, 'dacbddaaaccccbbddab': {'a': 'acbdaacbcbda', 'b': 'dacbb', 'c': 'acbdaacbc', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbbbbbddddaaccb': {'a': 'acbdaacbbbbbddddaccba', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbbddaccb', 'd': 'acbdaacbbbbbddddaccbd'}, 'acbdaacbbbbbba': {'a': 'acbdaacbbbbbbaa', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbbba'}, 'dacbddaaacbddd': {'a': 'dacbddaaacbddda', 'b': 'acbdaacbbbbbdddadb', 'c': 'dacbddaaacbddc', 'd': 'dacbddaaacbdddd'}, 'acbdaacbbbbbddddacaa': {'a': 'acbdaacbbbbbddddacaaa', 'b': 'daaaab', 'c': 'daaaaac', 'd': 'acbdaacbbbbbddddacaad'}, 'acbdaacbbbbbbdddacab': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'accb', 'c': 'acbdaaabc', 'd': 'dacbddaaaccccbbddabd'}, 'acb': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'b', 'd': 'acbd'}, 'accbaac': {'a': 'accbaaca', 'b': 'accbaacb', 'c': 'acc', 'd': 'b'}, 'acbdaacbbbddaad': {'a': 'dacbddaaacbddda', 'b': 'acbdaaabcd', 'c': 'a', 'd': 'acbdaacbbbbbddddaccbddad'}, 'acbdaacbbbbbddddacbbda': {'a': 'acbdaacbbbbbddddaaccaa', 'b': 'dacbddaaaccccbbdab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'acbdaacbbbbbddddaccbddad'}, 'accbbd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'accbbdb', 'c': 'acbdaaabcd', 'd': 'dacbdd'}, 'dacbddaaaccccbbc': {'a': 'accbaa', 'b': 'acbdaacbbbbbddabb', 'c': 'dacbddaaaccccbbcc', 'd': 'acbdaaccdcccbdd'}, 'acbdaacbbbbbddddacacc': {'a': 'dacbddaaacca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddacaccc', 'd': 'acbdaacbbbbbddddacaccd'}, 'acbdaacbbbbbbdd': {'a': 'acbdaacbbbbbbdda', 'b': 'acbdaacbbbbbbdb', 'c': 'acbdaacbbbbbbc', 'd': 'acbdaacbbbbbbddd'}, 'acbdaacbbbbbbddaccacbcb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'acbdaacbbbbbddabb', 'c': 'b', 'd': 'accbbd'}, 'acbdaacbbbbbddddaccbcd': {'a': 'dacbddaabacaa', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbdd'}, 'acbdaacbbbbbddddaacccc': {'a': 'daaaaacacc', 'b': 'acbdaacbbbbbddddacacccb', 'c': 'acbdaacbbbbbddddaaccccc', 'd': 'acbdaacbbbbbddddaaccccd'}, 'bc': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'dacbddaaaccccbbdddacd': {'a': 'dacbddaaaccccbbdddacda', 'b': 'acbdaaad', 'c': 'a', 'd': 'dacbddaaaccccbbdddacdd'}, 'acbdaacbbbbbdab': {'a': 'acbdaacbbbbbdddca', 'b': 'acbdaacbbbbbbdabb', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaaacc': {'a': 'dacbddaaacca', 'b': 'dacbddaaacb', 'c': 'dacbddaaaccc', 'd': 'dacbddaaaccd'}, 'acbdaacbbbbba': {'a': 'acbdaacbbbbbddca', 'b': 'b', 'c': 'b', 'd': 'acbdaaccd'}, 'dacb': {'a': 'a', 'b': 'dacbb', 'c': 'dacbc', 'd': 'dacbd'}, 'acbdaacbbbbbddda': {'a': 'acbdaacbbbbbdddaa', 'b': 'acbdaacbbbbbdddab', 'c': 'acbdaacbbbbbddacbbbddac', 'd': 'acbdaacbbbbbdddad'}, 'dacbddaaaccccbbdb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acbdaacbbbbbbdabb', 'c': 'b', 'd': 'accbbd'}, 'acbdaaac': {'a': 'acbdaaaca', 'b': 'acbdaaacb', 'c': 'acbdaaacc', 'd': 'dacbddad'}, 'acbdaacbbbbbddddaac': {'a': 'acbdaacbbbbbddddaaca', 'b': 'acbdaacbbbbbddddaacb', 'c': 'acbdaacbbbbbddddaacc', 'd': 'acbdaacbbbbbddddaacd'}, 'acbdaacbbbacc': {'a': 'accaca', 'b': 'acb', 'c': 'accacac', 'd': 'acbdaaabcd'}, 'dacbddadda': {'a': 'acbdaacbcbdaadda', 'b': 'b', 'c': 'acbdaacbcbdaaddac', 'd': 'b'}, 'acbdaaabb': {'a': 'accba', 'b': 'acb', 'c': 'b', 'd': 'acbdaaabbd'}, 'acbdaacbbbbbddacbba': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'daccc', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdda': {'a': 'dacbddaaac', 'b': 'dacbddaaaccccbbddab', 'c': 'acbdaacbbbbbddacbbbddac', 'd': 'dacbddaaaccccbbddad'}, 'acbdaacbbbbbddacbbbdaccddaacccc': {'a': 'acbdaacbbbbbbdddbdacc', 'b': 'acbdaaccb', 'c': 'dacbddaaaccccc', 'd': 'acbdaacbbbddbd'}, 'acbdaacbbbdbbb': {'a': 'b', 'b': 'acbdaacbbbdbbb', 'c': 'b', 'd': 'acbdaacbbbbbddddb'}, 'acbdaacbbbbbddacbbbbbdda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbddacbbbbbddab', 'c': 'acbdaacbbbbbddac', 'd': 'acbdaacbbbbbddad'}, 'acbdaacbbbbbddabd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'b', 'd': 'dacbddaaacbcd'}, 'dacbddaaaccccbbdddacdaad': {'a': 'dacbddaaaccccbbdddacdaada', 'b': 'b', 'c': 'accba', 'd': 'dacbddad'}, 'acbdaacbcbdaaddaccacab': {'a': 'accbaa', 'b': 'acb', 'c': 'acbdaaccdca', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddad': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'dacbdd'}, 'acbdaacbbbbbddacbbbddacccd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbbbbbddacbbbb': {'a': 'acbdaacbbbbbddacbbbba', 'b': 'acbdaacbbbbbddacbbbbb', 'c': 'acbdaacbbbbbbdb', 'd': 'acbdaacbbbbbbdd'}, 'acbdaacbbbbbddddab': {'a': 'acbdaacbcbda', 'b': 'acbdaacbbbbbddacbbbddabb', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddddabd'}, 'acbdaacbbbddb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbddbd'}, 'acbdaaccdcccbdd': {'a': 'acbdaaccdcccbdda', 'b': 'b', 'c': 'b', 'd': 'acbdaaabbdd'}, 'acbdaacbbbbbddacbbbddacd': {'a': 'dacbddaaacda', 'b': 'b', 'c': 'accbaa', 'd': 'acbdaacbbbbbddacbbbddacdd'}, 'dacbddaaad': {'a': 'dacbddaaada', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddad'}, 'dacbddaaaccccbbdddacda': {'a': 'dacbddaaaccccbbdddacdaa', 'b': 'dacbddaaaccccbbdddacdab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'dacbddaaaccccbbdddacdad'}, 'dacbddaaacbddc': {'a': 'a', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'dacbddaababd'}, 'dacbddacbd': {'a': 'dacbddaaacda', 'b': 'acbdaacbbdb', 'c': 'dacbddacbdc', 'd': 'dacbddaaacbddd'}, 'dacbddaaaccccbbddd': {'a': 'dacbddaaaccccbbddda', 'b': 'dacbddaaaccccbbdb', 'c': 'dacbddaaaccccbbdddc', 'd': 'dacbddaaaccccbbdddd'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc', 'd': 'acbdaaabcd'}, 'daccbbbb': {'a': 'dacbddaababd', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'b', 'd': 'acbdaacbbbbd'}, 'dacbddacbdc': {'a': 'a', 'b': 'b', 'c': 'acbdaacbbbacc', 'd': 'dacbddaababd'}, 'acbdaacbba': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'b', 'c': 'daccc', 'd': 'dacbddab'}, 'dacbddaaaccccbb': {'a': 'dacbddaaacbca', 'b': 'acbdaacbb', 'c': 'dacbddaaaccccbbc', 'd': 'dacbddaaaccccbbd'}, 'acbdaacbbbdbbda': {'a': 'dacca', 'b': 'b', 'c': 'acbdaacbbbdbbdac', 'd': 'dacbddadd'}, 'accbaaca': {'a': 'accbaacaa', 'b': 'b', 'c': 'accacac', 'd': 'b'}, 'acbdaacbbbbbddddaacccd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddaabd'}, 'dacbddaacccc': {'a': 'daaaaacacca', 'b': 'dacbddaaaccccb', 'c': 'dacbddaaaccccc', 'd': 'dacbddaaaccccd'}, 'dacbddaaaccccbbddddc': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbbbbddabb', 'c': 'dacbddaaaccccbbddddcc', 'd': 'acbdaaccd'}, 'daaabaa': {'a': 'acbdaaaca', 'b': 'acbdaaccab', 'c': 'daaabaac', 'd': 'acbdaaad'}, 'acbdaacbbbbbddacbbbacc': {'a': 'acbdaaccdca', 'b': 'acbdaaccdcccbb', 'c': 'accacac', 'd': 'acbdaaabcd'}, 'daaaaa': {'a': 'acbdaacbbbbbddddacaaa', 'b': 'dacbddaaacca', 'c': 'daaaaac', 'd': 'dacbddaad'}, 'daaaaaca': {'a': 'daaaaacaa', 'b': 'daaaaacab', 'c': 'daaaaacac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaacbbbbbddacbdb': {'a': 'acbdaab', 'b': 'b', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdddaca': {'a': 'daaaaa', 'b': 'dacbddaaacca', 'c': 'dacbddaaaccccbbdddacac', 'd': 'dacbddaaaccccbbdddacad'}, 'acbdaacbbbbbddacbb': {'a': 'acbdaacbbbbbddacbba', 'b': 'acbdaacbbbbbddacbbb', 'c': 'dacbddaababb', 'd': 'acbdaacbbbbbddacbbd'}, 'acbdaacbbbbbddacbbbba': {'a': 'a', 'b': 'b', 'c': 'acbdaaccdcccb', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddddaacbc': {'a': 'acbdaacbbbbbbddacca', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbddddaccbcd'}, 'dacbddac': {'a': 'dacbddaca', 'b': 'dacbddacb', 'c': 'dacbddacc', 'd': 'dacbddaaaccccbbdddacdad'}, 'daaa': {'a': 'daaaa', 'b': 'daaab', 'c': 'daaac', 'd': 'dacbddab'}, 'dacbddaaaccccbbdddacdada': {'a': 'acbdaaaa', 'b': 'acbdaaabcd', 'c': 'dacbddaa', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbddacbbbdaccddaaccc': {'a': 'dacbddaaacbc', 'b': 'dacbddaaaccccb', 'c': 'acbdaacbbbbbddacbbbdaccddaacccc', 'd': 'acbdaacbbbbbddacbbbdaccddaacccd'}, 'daaaa': {'a': 'daaaaa', 'b': 'daaaab', 'c': 'daaaaac', 'd': 'dacbddad'}, 'acbdaacbbbddaac': {'a': 'acbdaacbbbbbddddacaa', 'b': 'dacbddaaacb', 'c': 'dacbddaaaccccbbdddacac', 'd': 'dacbddaaaccccbbdddacad'}, 'acbdaacbbbbbddacbbb': {'a': 'acbdaacbbbbbddacbbba', 'b': 'acbdaacbbbbbddacbbbb', 'c': 'acbdaacbbbbbddacbbbc', 'd': 'acbdaacbbbbbddacbbbd'}, 'acbdaacbbbbbddacbbba': {'a': 'dacca', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'acbdaaccd'}, 'dacbddaabb': {'a': 'dacca', 'b': 'dacbddaabbb', 'c': 'b', 'd': 'dacbdd'}, 'acbdaacbcbdaaddaccacb': {'a': 'dacca', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'dacbdd'}, 'dacbddaabacaa': {'a': 'acbdaaaca', 'b': 'daab', 'c': 'daaaaacacc', 'd': 'dacbddab'}, 'acbdd': {'a': 'acbdda', 'b': 'b', 'c': 'b', 'd': 'dacbdd'}, 'dacbddaaaccccbbddabd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'dacbddaaaccccbbddabdd'}, 'dacbccc': {'a': 'dacbccca', 'b': 'accacb', 'c': 'accacac', 'd': 'b'}, 'acbdaacbbbbbddddaad': {'a': 'dacbddaaacbddda', 'b': 'acbdaaad', 'c': 'a', 'd': 'acbdaacbbbbbddddaadd'}, 'acbdaacbbbac': {'a': 'accaca', 'b': 'acbdaaccdcccbb', 'c': 'acbdaacbbbacc', 'd': 'acbdaaabcd'}, 'dacbddaaaccccbbddb': {'a': 'dacbddaaaccccbbddba', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbbbddddbdd'}, 'acbdaacbbbbbddb': {'a': 'dacbddadd', 'b': 'acbdaaccdcccb', 'c': 'b', 'd': 'acbd'}, 'acbd': {'a': 'acbda', 'b': 'b', 'c': 'b', 'd': 'acbdd'}, 'acbdaacbbbbbddacbbbd': {'a': 'acbdaacbbbbbddacbbbda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'dacbddaaacbcab', 'd': 'acbdaacbbbbbddacbbbdd'}, 'acbdaacbbbbbddddacacccb': {'a': 'dacbddaaacbca', 'b': 'acbdaacbbbbbddddacacccbb', 'c': 'dacbddaaaccccbc', 'd': 'dacbddaaacccbd'}, 'acbdaacbbbddab': {'a': 'acbdaacbcbda', 'b': 'acbdaacbbbbbddacbbbddabb', 'c': 'accba', 'd': 'daaaaacabdd'}, 'dacbccca': {'a': 'dacbccca', 'b': 'b', 'c': 'acbdaaccdcc', 'd': 'b'}, 'dac': {'a': 'daca', 'b': 'dacb', 'c': 'dacc', 'd': 'acbdaaabcd'}, 'accbaacaa': {'a': 'accbaacaaa', 'b': 'b', 'c': 'accbaac', 'd': 'b'}, 'acbdaacbbbbbddddaccbd': {'a': 'acbdaacbbbbbddddaccbda', 'b': 'acbdaacbbbbbddddaccbdb', 'c': 'dacbddaabc', 'd': 'acbdaacbbbbbddddaccbdd'}, 'acbdaacbbbbbddacbbbddaccc': {'a': 'daaaaacacc', 'b': 'dacbddaaaccccb', 'c': 'dacbddaaacccc', 'd': 'acbdaacbbbbbddacbbbddacccd'}, 'acbdaaabcd': {'a': 'acbdaaccdca', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbdaacbbbbbbdddaccd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaacbbbbbbdddaccdc', 'd': 'acbdaacbbbbbddacbbbddacdd'}, 'accc': {'a': 'accaa', 'b': 'accb', 'c': 'accc', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbdd': {'a': 'acbdaacbbbbbdda', 'b': 'acbdaacbbbbbddb', 'c': 'acbdaacbbbbbddc', 'd': 'acbdaacbbbbbddd'}, 'dacbddaaaccccbbdddaadd': {'a': 'dacbddaaacbddda', 'b': 'b', 'c': 'acbdaacbbbdbbda', 'd': 'acbdaacbbbbbddddaccbddad'}, 'dacbddaaaccccbbdddaddd': {'a': 'acbdaacbbbbbddddaadda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'dacbddaaaccdd'}, 'acbdaacbbbbbddddaccbbd': {'a': 'acbdaacbbbdda', 'b': 'acbdaacbbbbbddddaccbbdb', 'c': 'acbdaaacab', 'd': 'dacbddaaaccccbbdd'}, 'dacbddaaacbdddabb': {'a': 'a', 'b': 'acb', 'c': 'b', 'd': 'dacbddaaacbdddabbd'}, 'dacbddaaacbc': {'a': 'dacbddaaacbca', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'dacbddaaacbcd'}, 'accbbdb': {'a': 'acbdaaabcd', 'b': 'b', 'c': 'b', 'd': 'acbdaaccd'}, 'acbdaacbcbdaaddaccaccc': {'a': 'acbdaaabc', 'b': 'acbdaacbcbdaaddaccacccb', 'c': 'daccc', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddacc': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbddaccb', 'c': 'acbdaacbbbbbddaccc', 'd': 'acbdaacbbbbbddaccd'}, 'daccabb': {'a': 'acbdaaabcd', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccdcccbdd'}, 'acbdaacbcbdaaddaccc': {'a': 'acbdaacbcbdaaddaccaca', 'b': 'acbdaaccb', 'c': 'acbdaacc', 'd': 'dacbddaababd'}, 'acbdaacbbbbbbdddbdacbdaab': {'a': 'acbda', 'b': 'acbdaacbbbbbbdddbdacbdaabb', 'c': 'acbdaaccdca', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbbbddacbbbdd': {'a': 'acbdaacbbbbbddacbbbdda', 'b': 'acbdaacbbbbbddddb', 'c': 'acbdaacbbbbbddacbbbddc', 'd': 'acbdaacbbbbbdddd'}, 'dacbddaaacca': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'acbdaaacc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaacbbbbbddddaaca': {'a': 'acbdaacbbbbbddddacaaa', 'b': 'acbdaaacb', 'c': 'daaaaac', 'd': 'dacbddaaacd'}, 'dacbddaa': {'a': 'dacbddaaa', 'b': 'dacbddaab', 'c': 'dacbddaac', 'd': 'dacbddaad'}, 'acbdaacbbbbbbddaccaab': {'a': 'a', 'b': 'acbdaacbbbbbdddcacb', 'c': 'acbdaaccdc', 'd': 'acbdaaccd'}, 'acbdaaccdcccbbd': {'a': 'dacca', 'b': 'b', 'c': 'b', 'd': 'dacbdd'}, 'acbdaacbbbbbddacbbbddab': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbbbbddacbbbddabb', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddacd'}, 'acbdaacbbbbbbc': {'a': 'b', 'b': 'acbdaacbbbdbbb', 'c': 'b', 'd': 'b'}, 'acbdaacbbbbbddddaccba': {'a': 'dacbddaabaa', 'b': 'acbdaacbbbbbddddaccbab', 'c': 'dacbddaaacbc', 'd': 'daaaaacabdd'}, 'dacbddaaaccccbbdddaabbc': {'a': 'accbaa', 'b': 'acbdaacbbbbbddabb', 'c': 'dacbddaaaccccbbdddaabbcc', 'd': 'acbdaaccd'}, 'accaa': {'a': 'accaca', 'b': 'b', 'c': 'accac', 'd': 'b'}, 'acbdaacbbbbbddddaaccaaaba': {'a': 'dacbddaabaca', 'b': 'acbdaacbbbbbdab', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddab'}, 'acbdaaabbdd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'dacbdd'}, 'acbdaacbbbbbdda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbddab', 'c': 'acbdaacbbbbbddac', 'd': 'acbdaacbbbbbddad'}, 'dacbddaaaccd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddaaaccdd'}, 'dacbddaacca': {'a': 'dacbddaaacca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'acbdaaacc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaabac': {'a': 'dacbddaabaca', 'b': 'dacbddaabacb', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddab'}, 'ac': {'a': 'accbaa', 'b': 'acb', 'c': 'acc', 'd': 'b'}, 'acbdaacbbbbbbdddbda': {'a': 'daccaa', 'b': 'b', 'c': 'acbdaacbbbbbbdddbdac', 'd': 'acbdaaad'}, 'acbdaacbbbbbbdddacd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddacbbbddacdd'}, 'acbdaacbbbbbddddaaccc': {'a': 'dacbddaaacca', 'b': 'acbdaacbbbbbddddaccb', 'c': 'acbdaacbbbbbddddaacccc', 'd': 'acbdaacbbbbbddddaacccd'}, 'acbdaacbbbbbddddaaddab': {'a': 'acbdaa', 'b': 'acbdaacbbbbbdab', 'c': 'accba', 'd': 'dacbddab'}, 'acbdaacbbbbbbdddbdacbdaabb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccdcccbbd'}, 'daaac': {'a': 'dacbddaaacca', 'b': 'acbdaaacb', 'c': 'daaacc', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbbbddacbbbdb': {'a': 'dacbddadd', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'b', 'd': 'accbbd'}, 'acbdaaacab': {'a': 'dacca', 'b': 'dacbb', 'c': 'acbdaaacabc', 'd': 'daaaaacacd'}, 'acbdaacbbbbbbdddbdacc': {'a': 'accbaa', 'b': 'acbdaacbcb', 'c': 'acc', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddddacacccd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddaaaccccdd'}, 'dacbddaabbb': {'a': 'dacbddaabbba', 'b': 'accbb', 'c': 'b', 'd': 'acbdaacbbbbbddad'}, 'acbdaacbbbbbddddaccbddaddaabab': {'a': 'dacca', 'b': 'acbdaacbbbbbbdddbdacb', 'c': 'acbdaacbbbbbddacbbbacc', 'd': 'dacbddab'}, 'dacbddaccd': {'a': 'dacbda', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'daaaaacabdd'}, 'accac': {'a': 'accaca', 'b': 'accacb', 'c': 'accac', 'd': 'b'}, 'daccaba': {'a': 'daccabaa', 'b': 'b', 'c': 'accacac', 'd': 'b'}, 'bcbd': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbdaac': {'a': 'dacbda', 'b': 'acbdaacb', 'c': 'acbdaacc', 'd': 'dacbddab'}, 'accbb': {'a': 'acbdaab', 'b': 'acb', 'c': 'b', 'd': 'accbbd'}, 'acbdaacbbbbbddacbbbdaccc': {'a': 'acbdaacbcbdaaddaccaca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'dacbddaaacbcc', 'd': 'acbdaaccd'}, 'dacbddaaacccbdc': {'a': 'a', 'b': 'daccabb', 'c': 'accac', 'd': 'dacbddab'}, 'acbdaacbbbbbddddacaccd': {'a': 'dacbddaabacaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'acbdaacbbbbbbddaccdd'}, 'dacbddaaacccbcb': {'a': 'acbdaacbcbdaaddaccacccba', 'b': 'dacbddaaacccbcbb', 'c': 'dacbddaaacccbcbc', 'd': 'acbdaacbbd'}, 'acbdaacbbbbbddddaccbbdb': {'a': 'acbdaacbbbdbbda', 'b': 'acb', 'c': 'b', 'd': 'accbbd'}, 'acbdaacbbbbbbdddbd': {'a': 'acbdaacbbbbbbdddbda', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbbbddddbd'}, 'acbdaacbbbbbddddaaccccccbaba': {'a': 'accbaacaaa', 'b': 'b', 'c': 'accaca', 'd': 'b'}, 'acbdaacbcbdaaddaccacc': {'a': 'acbdaacbcbdaaddaccacca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'acbdaacbcbdaaddaccaccc', 'd': 'acbdaaccd'}, 'acbdaacbbbbbbddaccc': {'a': 'acbdaacbbbbbbddacca', 'b': 'acbdaaccb', 'c': 'acbdaacbcbdaaddaccacc', 'd': 'daaaaacacd'}, 'acbdaacbbbbbddddacbbdc': {'a': 'a', 'b': 'acb', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'acbdaaccd'}, 'acbdaacbbbbbdddcac': {'a': 'accba', 'b': 'acbdaacbbbbbdddcacb', 'c': 'acc', 'd': 'acbdaaad'}, 'dacbddaaaccccdd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'b', 'd': 'dacbddaaacbcd'}, 'acbdaacbbbbbddaccc': {'a': 'acbdaacbbbbbbddacca', 'b': 'dacbddaaaccccb', 'c': 'acbdaacbbbbbddacccc', 'd': 'daaaaacacd'}, 'acbdaacbbbbbbd': {'a': 'acbdaacbbbbbbda', 'b': 'acbdaacbbbbbbdb', 'c': 'acbdaacbbbbbbc', 'd': 'acbdaacbbbbbbdd'}, 'dacbddaaaccccbbdd': {'a': 'dacbddaaaccccbbdda', 'b': 'dacbddaaaccccbbddb', 'c': 'acbdaacbcbdaaddaccacccba', 'd': 'dacbddaaaccccbbddd'}, 'acbdaacbbbbbd': {'a': 'acbdaacbbbbbda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'acbdaaccdcccb', 'd': 'acbdaacbbbbbdd'}, 'daaaccd': {'a': 'daaaaacabda', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'acbdaacbcbdaad'}, 'dacbddaaacccc': {'a': 'acbdaacbbbbbbddaccac', 'b': 'dacbddaaaccccb', 'c': 'dacbddaaaccccc', 'd': 'dacbddaaaccccd'}, 'acbdaacbbbbbddacbbbddacddc': {'a': 'accba', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbdddc': {'a': 'acbdaacbbbbbdddca', 'b': 'acb', 'c': 'acbdaacbbbbbdddcc', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdddd': {'a': 'acbdaacbbbbbdddda', 'b': 'dacbddaaaccccbbdb', 'c': 'dacbddaaaccccbbddddc', 'd': 'dacbddaaaccccbbdddd'}, 'acbdaacbbbbbbddaccaa': {'a': 'acbdaacbcbda', 'b': 'acbdaacbbbbbbddaccaab', 'c': 'dacbddaaacbc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaccbddad': {'a': 'acbdaacbbbbbddddaccbddada', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddddaccbddadd'}, 'acbdaacbbb': {'a': 'acbdaacbbba', 'b': 'acbdaacbbbb', 'c': 'b', 'd': 'acbdaacbbbd'}, 'acbdaacbbbbbddddacaccc': {'a': 'acbdaacbbbbbbddacca', 'b': 'acbdaacbbbbbddddacacccb', 'c': 'acbdaacbbbbbddddacacccc', 'd': 'acbdaacbbbbbddddacacccd'}, 'acbdaacbbbbbddddaccbdda': {'a': 'dacbddaaac', 'b': 'dacbddaaaccccbbddab', 'c': 'dacbddaaaccccbbdddac', 'd': 'acbdaacbbbbbddddaccbddad'}, 'daaaaacacca': {'a': 'daaaaacaccaa', 'b': 'daaaaacaccab', 'c': 'daccc', 'd': 'dacbddab'}, 'dacbddaaacbddda': {'a': 'dacbddaaac', 'b': 'dacbddaaacbdddab', 'c': 'dacbddaaacbdddac', 'd': 'acbdaacbbbbbddddacaad'}, 'acbdaacbbbbbddddaaccccccbab': {'a': 'acbdaacbbbbbddddaaccccccbaba', 'b': 'daccabb', 'c': 'b', 'd': 'acbdaaccd'}, 'acbdaacbbbbdacbc': {'a': 'accbaa', 'b': 'acbdaaccdcccbb', 'c': 'acbdaacbbbac', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddacbbbbbdaa': {'a': 'acbdaacbbbbbdddada', 'b': 'dacbddaabb', 'c': 'acbdaacbbbbbddacbbbbbdaac', 'd': 'dacbddaaacbcd'}, 'dacbddaaaccccbbd': {'a': 'dacbddaaaccccbbda', 'b': 'dacbddaaaccccbbdb', 'c': 'acbdaacbc', 'd': 'dacbddaaaccccbbdd'}, 'dacbddaaacccbcbc': {'a': 'acbdaaccdca', 'b': 'acbdaaccdcccbb', 'c': 'dacbccca', 'd': 'acbdaaccdcccbd'}, 'acbdaacbbbbbbdddc': {'a': 'acbdaacbbbbbddca', 'b': 'acb', 'c': 'acbdaaccdcccb', 'd': 'acbdaacbbbbbbdddcd'}, 'acbdaacbcbdaad': {'a': 'da', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'acbdaacbcbdaadd'}, 'acbdaacbbbbbdddad': {'a': 'acbdaacbbbbbdddada', 'b': 'acbdaacbbbbbdddadb', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'acbdaacbbbbbdddadd'}, 'acbdaacbbbbbddddaccbdd': {'a': 'acbdaacbbbbbddddaccbdda', 'b': 'acbdaacbbbbbddacbdb', 'c': 'acbdaacbbbbbddddaccbddc', 'd': 'acbdaacbbbbbddddaccbdd'}, 'acbdaacbbbbbddddacacaa': {'a': 'acbdaacbbbbbddddacacaaa', 'b': 'dacbddaaacbc', 'c': 'acbdaaac', 'd': 'daaaaacabdd'}, 'dacbddaabaab': {'a': 'acbda', 'b': 'dacbb', 'c': 'acbdaaabc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'daccbbb': {'a': 'acbdaab', 'b': 'daccbbbb', 'c': 'b', 'd': 'acbdaacbbbd'}, 'daaaaacabd': {'a': 'daaaaacabda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddddacacccc': {'a': 'daccc', 'b': 'acbdaaccb', 'c': 'dacbddaaaccccc', 'd': 'acbdaacbbbddbd'}, 'acbdaaccdccc': {'a': 'dacbccca', 'b': 'acbdaaccdcccb', 'c': 'accacac', 'd': 'b'}, 'acbdaacbbbbddab': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'accbb', 'c': 'acbdaaccdc', 'd': 'dacbddaaacbcd'}, 'acbdaacba': {'a': 'daaaaacabda', 'b': 'acbdaaad', 'c': 'daccc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaccbbc': {'a': 'accbaa', 'b': 'dacbddaabbb', 'c': 'dacbddaaaccccbbcc', 'd': 'accbbd'}, 'dacbddaaacccccc': {'a': 'acbdaaabc', 'b': 'acbdaacbcbdaaddaccacccb', 'c': 'daccc', 'd': 'dacbddaaaccccccd'}, 'acbdaaaca': {'a': 'acbdaacbbbbbddddaccbdaca', 'b': 'acbdaaacab', 'c': 'acbdaaac', 'd': 'dacbddad'}, 'daccaa': {'a': 'daca', 'b': 'acbdaaad', 'c': 'daccc', 'd': 'acbdaaabcd'}, 'daaab': {'a': 'daaaba', 'b': 'dacbb', 'c': 'daccc', 'd': 'acbdaacbcbdaad'}, 'dacbddaaacccbab': {'a': 'accbaa', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaabbbac': {'a': 'accaca', 'b': 'dacbddaababb', 'c': 'acbdaacbbbbbddacbbbacc', 'd': 'acbdaaabcd'}, 'dacbddaaacdab': {'a': 'dacca', 'b': 'daccabb', 'c': 'accaca', 'd': 'dacbddab'}, 'acbdaacbbbbbddacbbbdaccddaac': {'a': 'acbdaacbbbbbddddacacaa', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddacbbbdaccddaacc', 'd': 'dacbddaad'}, 'dacbddaaaccccbbdddacdaada': {'a': 'dacbddaaaccccbbdddacdaadaa', 'b': 'dacbddaaaccccbbddba', 'c': 'dacbddaa', 'd': 'dacbddadd'}, 'acbdaacbbbbbddddaaccccdc': {'a': 'acbdaacbbbbbddddaaccccdca', 'b': 'b', 'c': 'acbdaacbbbacc', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbbddab': {'a': 'dacca', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaacbbbbbddabd'}, 'acbdaacbbbbbbddaccacbc': {'a': 'daccbca', 'b': 'acbdaacbbbbbbddaccacbcb', 'c': 'accac', 'd': 'acbdaaccd'}, 'acbdaacbbbbbbdddac': {'a': 'acbdaacbbbbbbdddaca', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbbdddacc', 'd': 'acbdaacbbbbbbdddacd'}, 'acbdaacbbbbbbdddcd': {'a': 'acbdaacbbbbbbdddcda', 'b': 'b', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdddacad': {'a': 'dacbddaaacda', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddaaaccccbbddabdd'}, 'acbdaacbbbbbddddacaca': {'a': 'acbdaacbbbbbddddacacaa', 'b': 'acbdaaccb', 'c': 'acbdaaac', 'd': 'daaaaacabdd'}, 'dacbddaaaccccbbdddab': {'a': 'acbdaacbcbdaa', 'b': 'dacbddaabb', 'c': 'acbdaaacab', 'd': 'dacbddaabd'}, 'acbdaacbbbbbddddaccbb': {'a': 'acbdaacbbbbbddacba', 'b': 'acbdaacbbbbbddacbb', 'c': 'acbdaacbbbbbddddaccbbc', 'd': 'acbdaacbbbbbddddaccbbd'}, 'dacc': {'a': 'dacca', 'b': 'daccb', 'c': 'daccc', 'd': 'dacbddaababd'}, 'acbdaacbcbdaaddaccac': {'a': 'acbdaacbcbdaaddaccaca', 'b': 'acbdaacbcbdaaddaccacb', 'c': 'acbdaacbcbdaaddaccacc', 'd': 'dacbddaababd'}, 'acbdaaacbd': {'a': 'dacbdda', 'b': 'b', 'c': 'dacbddaaacbddc', 'd': 'dacbdd'}, 'dacbddaaaccccbbdddac': {'a': 'dacbddaaaccccbbdddaca', 'b': 'acbdaacbbbbbddddaccb', 'c': 'acbdaacbbbbbddddacc', 'd': 'dacbddaaaccccbbdddacd'}, 'dacbddaaacbdddabbd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'b', 'd': 'dacbdd'}, 'acbdaacbcbdaaddaccab': {'a': 'accbaa', 'b': 'acbdaacbcbdaaddaccabb', 'c': 'accacac', 'd': 'dacbddaababd'}, 'dacbddaaacbdddac': {'a': 'daaaa', 'b': 'dacbddaaacb', 'c': 'dacbddaaacbdddacc', 'd': 'dacbddaaacd'}, 'acbdaacbbbbbddab': {'a': 'acbdaacbbbbbddacbba', 'b': 'acbdaacbbbbbddabb', 'c': 'acbdaaabcd', 'd': 'acbdaacbbbbbddabd'}, 'acbdaacbbbbbdddd': {'a': 'acbdaacbbbbbdddda', 'b': 'acbdaacbbbbbddddb', 'c': 'acbdaacbbbbbddddc', 'd': 'acbdaacbbbbbdddd'}, 'acbdaacbbbbbbdddbdacbdaa': {'a': 'acbdaacbbbbbdddada', 'b': 'acbdaacbbbbbbdddbdacbdaab', 'c': 'acbdaaac', 'd': 'dacbddad'}, 'acbdaacbcbdaaddaccabba': {'a': 'accbaacaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'b'}, 'acbdaaacabc': {'a': 'daccbca', 'b': 'acb', 'c': 'accac', 'd': 'dacbddaababd'}, 'acbdaacbcbda': {'a': 'acbdaacbcbdaa', 'b': 'acbdaaad', 'c': 'dacbddaaacbc', 'd': 'dacbddab'}, 'acbdaacbcbdaaddaccacccb': {'a': 'acbdaacbcbdaaddaccacccba', 'b': 'acbdaacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbddad'}, 'acbdaacbbbbbddddacaad': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'dacbddad'}, 'dacbddaaacccbd': {'a': 'dacbddaaacda', 'b': 'acbdaacbbbbbdab', 'c': 'dacbddaaacccbdc', 'd': 'acbdaacbbbbbddddaccbdd'}, 'acbdaaccab': {'a': 'accbaa', 'b': 'accbb', 'c': 'accaa', 'd': 'acbdaaccd'}, 'acbdaacbbdb': {'a': 'acbdaab', 'b': 'b', 'c': 'b', 'd': 'acbdaaccdcccbdd'}, 'acbdaacbbbddaa': {'a': 'dacbddaac', 'b': 'acbdaacbbbddaab', 'c': 'acbdaacbbbddaac', 'd': 'acbdaacbbbddaad'}, 'acbdaacbbbbbddddaaccaa': {'a': 'acbdaacbbbbbddddaaccaaa', 'b': 'acbdaaccb', 'c': 'acbdaaac', 'd': 'acbdaacbbbbbddddacaad'}, 'acbdaacbbbbbddddaacb': {'a': 'dacbddaaaccccbbda', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbddddaacbc', 'd': 'acbdaacbbbbbddddaccbd'}, 'acbdaacbbbbbddacbbdc': {'a': 'a', 'b': 'acbdaaccdcccbb', 'c': 'dacbddaabbbac', 'd': 'acbdaaccd'}, 'a': {'a': 'acbda', 'b': 'b', 'c': 'ac', 'd': 'acbdaaabcd'}, 'acbda': {'a': 'acbdaa', 'b': 'b', 'c': 'dacc', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbdddadb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'b', 'c': 'b', 'd': 'dacbddadd'}, 'acbdaacbbbbbddacbbbdaccddaacccd': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddaaacbcd'}, 'acbdaacbbbbbddddaccbddaddaaba': {'a': 'acbdaacbbbbbddddaccbddaddaabaa', 'b': 'acbdaacbbbbbddddaccbddaddaabab', 'c': 'acbdaaac', 'd': 'dacbddad'}, 'dacbddaaacbdddab': {'a': 'acbdaacbcbda', 'b': 'dacbddaaacbdddabb', 'c': 'accbaa', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddddacbb': {'a': 'acbdaacbcbda', 'b': 'acbdaacbbbbbddacbb', 'c': 'acbdaacbbbbbddddacbbc', 'd': 'acbdaacbbbbbddddacbbd'}, 'acbdaacbbba': {'a': 'dacca', 'b': 'b', 'c': 'acbdaacbbbac', 'd': 'dacbddab'}, 'acbdaacbbbbbddddacac': {'a': 'acbdaacbbbbbddddacaca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddacacc', 'd': 'acbdaacbbbbbddddacaad'}, 'dacbddaaacccbcbb': {'a': 'acbdaacbcbdaaddaccacccba', 'b': 'acbdaacbbbb', 'c': 'b', 'd': 'dacbddaaacccbcbbd'}, 'acbdaacbbbbbddacbbbddabb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acb', 'c': 'b', 'd': 'accbbd'}, 'daccbb': {'a': 'a', 'b': 'daccbbb', 'c': 'b', 'd': 'acbdaacbbd'}, 'dacbddaaacbdd': {'a': 'dacbddaaaccccbbdddacda', 'b': 'b', 'c': 'dacbddaaacbddc', 'd': 'dacbddaaacbddd'}, 'acbdaacbc': {'a': 'accbaa', 'b': 'acbdaacbcb', 'c': 'accac', 'd': 'acbdaaccd'}, 'acbdaaccbd': {'a': 'dacbdda', 'b': 'accbbdb', 'c': 'accbaa', 'd': 'acbdaacbbbbbdddadd'}, 'acbdaacbbbbbbdda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbbddab', 'c': 'acbdaacbbbbbbddac', 'd': 'acbdaacbbbbbbddad'}, 'acbdaacbbbbbddca': {'a': 'accba', 'b': 'b', 'c': 'accaca', 'd': 'acbdaaabcd'}, 'dacbddaaaccccccd': {'a': 'a', 'b': 'b', 'c': 'dacbccca', 'd': 'acbdaacbbbbbddacbbbdaccd'}, 'daaaaacacd': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdab': {'a': 'acbdaaccdcccbdda', 'b': 'acbdaacbbbbbddacbbbddabb', 'c': 'accbaaca', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaaaccccbbdddaabbccc': {'a': 'dacbccca', 'b': 'acbdaaccdcccbb', 'c': 'dacbddaaaccccbbdddaabbcccc', 'd': 'b'}, 'acbdaacbbbddbd': {'a': 'dacca', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbbbddacbbbdaccd'}, 'dacbda': {'a': 'dacbdaa', 'b': 'acbdaaad', 'c': 'acbdaaccdcccbddac', 'd': 'acbdaaad'}, 'acbdaacbbbbbddacbbbddaddd': {'a': 'acbdaacbbbbbdddadda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'dacbddaabd'}, 'acbdaacbcbdaadd': {'a': 'acbdaacbcbdaadda', 'b': 'b', 'c': 'b', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbbdac': {'a': 'acbdaacbba', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaaccd'}, 'daaaaacacc': {'a': 'daaaaacacca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'acbdaacbcbdaaddaccaccc', 'd': 'acbdaaccd'}, 'bcb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbdaacbbbbbddacbbbdacc': {'a': 'dacbddaaacbca', 'b': 'acbdaaccb', 'c': 'acbdaacbbbbbddacbbbdaccc', 'd': 'acbdaacbbbbbddacbbbdaccd'}, 'acbdaacbbbbbddacbbbdaccddaab': {'a': 'daaaaacabda', 'b': 'acbdaacbbbbbddacbbbdaccddaabb', 'c': 'acbdaaabc', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddd': {'a': 'acbdaacbbbbbddda', 'b': 'acbdaacbbbbbddb', 'c': 'acbdaacbbbbbdddc', 'd': 'acbdaacbbbbbdddd'}, 'dacbddaaba': {'a': 'dacbddaabaa', 'b': 'dacbddaabab', 'c': 'dacbddaabac', 'd': 'dacbddab'}, 'accbaacb': {'a': 'acbdaaccdca', 'b': 'acb', 'c': 'b', 'd': 'accacbd'}, 'acbdaacbbbbbddacbbbddc': {'a': 'a', 'b': 'acbdaaccdcccbb', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'acbdaaccd'}, 'acbdaacbbbbbda': {'a': 'acbdaacbbbbbdaa', 'b': 'acbdaacbbbbbdab', 'c': 'dacbddaaacbc', 'd': 'acbdaacbcbd'}, 'acbdaacbbbbbddddaccbddadd': {'a': 'acbdaacbbbbbddddaccbddadda', 'b': 'b', 'c': 'acbdaacbbbbbddca', 'd': 'daaaaacabdd'}, 'accacb': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'b', 'd': 'accacbd'}, 'acbdaacbbbbbddddacaaab': {'a': 'acbdaaaca', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'acbdaaacab', 'd': 'acbdaacbbbbbddacbbbddacdd'}, 'dacbddaababd': {'a': 'a', 'b': 'b', 'c': 'b', 'd': 'acbdaaabcd'}, 'acbdaacbbbbdaaac': {'a': 'acbdaacbbbbbddddacaca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'acbdaacbbbbbddddacaad'}, 'acbdaacbbbbbddddaa': {'a': 'dacbddaaac', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddaac', 'd': 'acbdaacbbbbbddddaad'}, 'accacbdd': {'a': 'acbdaaa', 'b': 'b', 'c': 'b', 'd': 'dacbdd'}, 'acbdaacbbbbbddddaaccccccba': {'a': 'dacca', 'b': 'acbdaacbbbbbddddaaccccccbab', 'c': 'daccc', 'd': 'acbdaaccd'}, 'daccab': {'a': 'daccaba', 'b': 'daccabb', 'c': 'dacbccca', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddddacb': {'a': 'acbdaacbbbbbddddacba', 'b': 'acbdaacbbbbbddddacbb', 'c': 'acbdaacbbbbbddddacbc', 'd': 'acbdaacbbbbbddddaccbd'}, 'daccb': {'a': 'a', 'b': 'daccbb', 'c': 'daccbc', 'd': 'dacbdd'}, 'acbdaacbbbbbddacbbbddac': {'a': 'daaaa', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbddacbbbddacc', 'd': 'acbdaacbbbbbddacbbbddacd'}, 'acbdaacbbbbbddddacad': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddddaccbdacc': {'a': 'acbdaacbbbbbddddaccbdacca', 'b': 'dacbddaaaccccb', 'c': 'acbdaacbbbbbbddaccc', 'd': 'acbdaacbbbbbddddaccbdaccd'}, 'dacbb': {'a': 'accbaa', 'b': 'accbb', 'c': 'b', 'd': 'dacbdd'}, 'acbdaaacb': {'a': 'dacbddaabacaa', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaaacbd'}, 'daaabaac': {'a': 'acbdaacbbbbbddddaccbdacca', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'acbdaacbbbbbddacbbbdaccc', 'd': 'acbdaaccd'}, 'dacbddaaacccbcbbd': {'a': 'dacbdda', 'b': 'acbdaacbbbbbddddb', 'c': 'acbdaacbbbbbdab', 'd': 'acbdaacbbbbbddacbbbdd'}, 'acbdaacbbbbbddddacbc': {'a': 'dacca', 'b': 'dacbb', 'c': 'daccc', 'd': 'dacbddaaacbcd'}, 'dacbddacc': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddaccc', 'd': 'dacbddaccd'}, 'acbdaacbbbbbddddaccbddaddaad': {'a': 'dacbddaaaccccbbdddacdada', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddab'}, 'dacbddaaaccccbbda': {'a': 'acbdaacbbbbbddddaaccaa', 'b': 'dacbddaaaccccbbdab', 'c': 'acbdaaac', 'd': 'acbdaacbbbbbddddaccbddad'}, 'acbdaacbbbbbddacbbbdaccddaa': {'a': 'daaaa', 'b': 'acbdaacbbbbbddacbbbdaccddaab', 'c': 'acbdaacbbbbbddacbbbdaccddaac', 'd': 'acbdaacbcbdaad'}, 'dacbddaabaa': {'a': 'dacbddaa', 'b': 'dacbddaabaab', 'c': 'acbdaaac', 'd': 'dacbddad'}, 'acbdaacbbbb': {'a': 'acbdaaccdcccbd', 'b': 'acbdaacbbbbb', 'c': 'b', 'd': 'acbdaacbbbbd'}, 'dacbddaaaccccbbdddacdaaba': {'a': 'daaaaacaa', 'b': 'dacbddaaaccccbbdddacdaabab', 'c': 'acbdaaac', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbbbddddacbbcc': {'a': 'dacbccca', 'b': 'acbdaaccdcccbb', 'c': 'acbdaaccdcc', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbbdddb': {'a': 'dacbddadd', 'b': 'acbdaacbbbbbbdddbb', 'c': 'b', 'd': 'acbdaacbbbbbbdddbd'}, 'daab': {'a': 'a', 'b': 'acbdaaabb', 'c': 'acca', 'd': 'dacbddab'}, 'acbdaab': {'a': 'accbaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddaababd'}, 'acbdaacbbbbbbdab': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'acbdaacbbbbbbdabb', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaabacab': {'a': 'a', 'b': 'accbb', 'c': 'acbdaaccdc', 'd': 'acbdaaccd'}, 'acbdaacbbbbbbaa': {'a': 'accbaacaaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddadd'}, 'acbdaacbbbbbddacbbbdaccddaabb': {'a': 'a', 'b': 'accbb', 'c': 'b', 'd': 'acbdaacbbbbbddddaccbcd'}, 'acbdaacbbbbdacb': {'a': 'dacbddaaacbca', 'b': 'acbdaacbb', 'c': 'acbdaacbbbbdacbc', 'd': 'acbdaacbbd'}, 'acbdaacbbbbbddacba': {'a': 'acbdaacbcbdaa', 'b': 'acbdaaccdcccbd', 'c': 'acbdaacbbbbbbddaccac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaacbbbbbddacccc': {'a': 'acbdaacbcbdaaddaccacca', 'b': 'acbdaaccb', 'c': 'dacbddaaaccccc', 'd': 'acbdaaccd'}, 'acbdaaacc': {'a': 'acbdaacbbbbbddddaccbdacca', 'b': 'acbdaaccb', 'c': 'acbdaacbbbbbbddaccc', 'd': 'daaaaacacd'}, 'daccabaa': {'a': 'accba', 'b': 'b', 'c': 'accbaac', 'd': 'b'}, 'acbdaacbbbbdd': {'a': 'acbdaacbbbbdda', 'b': 'acbdaacbbbbbddb', 'c': 'acbdaacbbbbbdab', 'd': 'acbdaacbbbbbdddd'}, 'acbdaacbbbbbddddaccbdaccd': {'a': 'daaaaacabda', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbddddc': {'a': 'dacca', 'b': 'acb', 'c': 'acbdaacbbbbbddacbbbac', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdddaad': {'a': 'dacbddaaacbddda', 'b': 'dacbddaababd', 'c': 'dacca', 'd': 'dacbddaaaccccbbdddaadd'}, 'acbdaacbcbdaaddaccaca': {'a': 'acbdaacbbbbbbdddbdacbda', 'b': 'acbdaacbcbdaaddaccacab', 'c': 'daccc', 'd': 'dacbddaababd'}, 'acbdaaabbd': {'a': 'acbdaaabbda', 'b': 'b', 'c': 'b', 'd': 'acbdaaabbdd'}, 'accacac': {'a': 'accaca', 'b': 'accacacb', 'c': 'accac', 'd': 'b'}, 'acbdaaccb': {'a': 'dacbddaaaccccba', 'b': 'acbdaacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaaccbd'}, 'acbdaacbbbbbddddbd': {'a': 'dacca', 'b': 'b', 'c': 'b', 'd': 'acbdaacbbbbbddddbdd'}, 'dacbddaaac': {'a': 'acbdaacbbbbbddddaaca', 'b': 'dacbddaaacb', 'c': 'dacbddaaacc', 'd': 'dacbddaaacd'}, 'acbdaacbbbbbddacbbbc': {'a': 'b', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaacbbbdbbd'}, 'daccbca': {'a': 'daccabaa', 'b': 'b', 'c': 'accac', 'd': 'b'}, 'dacbddaaaccdd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'daaaaacabdd'}, 'acbdaacbbbdbbdac': {'a': 'accba', 'b': 'accbb', 'c': 'acbdaacbbbdbbdacc', 'd': 'acbdaaad'}, 'acbdaacbbbbbddddacacaaa': {'a': 'acbdaacbbbbbddddacaa', 'b': 'dacbddaaacbc', 'c': 'acbdaaac', 'd': 'dacbddaad'}, 'acbdaacbbbbbbddd': {'a': 'acbdaacbbbbbbddda', 'b': 'acbdaacbbbbbbdddb', 'c': 'acbdaacbbbbbbdddc', 'd': 'acbdaacbbbbbddd'}, 'acca': {'a': 'accaa', 'b': 'b', 'c': 'accac', 'd': 'b'}, 'acbdaacbbbbbbdddacc': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbddddacb', 'c': 'acbdaacbbbbbddacbbbddaccc', 'd': 'acbdaacbbbbbbdddaccd'}, 'acbdaaccdcccbddac': {'a': 'acbdaaccdcccbddaca', 'b': 'acbdaaccdcccbddacb', 'c': 'acbdaaccdcccbddacc', 'd': 'dacbddab'}, 'daaaaacabdd': {'a': 'acbdaaa', 'b': 'b', 'c': 'b', 'd': 'daaaaacabdd'}, 'acbdaacbbbdd': {'a': 'acbdaacbbbdda', 'b': 'acbdaacbbbddb', 'c': 'acbdaacbbbbbddacbdc', 'd': 'acbdaacbbbbbddacbbbdd'}, 'acbdaacbbbbbddacbbbbbdd': {'a': 'acbdaacbbbbbddacbbbbbdda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'acbdaacbbbbbbc', 'd': 'acbdaacbbbbbddacbbbbbddd'}, 'acbdaacbbbdbbdacc': {'a': 'daccbca', 'b': 'acbdaacbcb', 'c': 'accc', 'd': 'acbdaaad'}, 'acbdaacbbbbbdddada': {'a': 'acbdaacbbbbbddddacacaaa', 'b': 'acbdaacbbbbbdddadab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'dacbddaad'}, 'acbdaacbbbdda': {'a': 'acbdaacbbbddaa', 'b': 'acbdaacbbbddab', 'c': 'acbdaacbbbbbddacbbbddac', 'd': 'acbdaacbbbbbddddaadd'}, 'acbdaacbbbbbddddaaccccc': {'a': 'dacbddaaacbcc', 'b': 'acbdaacbbbbbddddacacccb', 'c': 'acbdaacbbbbbddddaacccccc', 'd': 'acbd'}, 'dacbddaacc': {'a': 'dacbddaacca', 'b': 'dacbddaaacb', 'c': 'dacbddaaccc', 'd': 'dacbddaaaccd'}, 'acbdaacbbbbbddacbbbbbda': {'a': 'acbdaacbbbbbddacbbbbbdaa', 'b': 'dacbddaaacbcab', 'c': 'dacbddaaacbc', 'd': 'acbdaacbbbbbbddad'}, 'acbdaacbbbbbddacbbbbbd': {'a': 'acbdaacbbbbbddacbbbbbda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'acbdaacbbbbbbc', 'd': 'acbdaacbbbbbddacbbbbbdd'}, 'dacbddaaaccc': {'a': 'daaaaacacc', 'b': 'dacbddaaacccb', 'c': 'dacbddaaacccc', 'd': 'dacbddaaacccd'}, 'acbdaacbbbbbddacbbbdab': {'a': 'dacca', 'b': 'acbdaacbbbbbdddcacb', 'c': 'b', 'd': 'daaaaacacd'}, 'acbdaacbbbbbdddadd': {'a': 'acbdaacbbbbbdddadda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'acbdaacbbbbbddacbbbddacdd'}, 'dacbddaacccd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'acbdaacbbbbbddddaaccccdc', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbbbbbddddaccbddadab': {'a': 'da', 'b': 'acbdaaabcd', 'c': 'accba', 'd': 'dacbddab'}, 'dacbddaabab': {'a': 'a', 'b': 'dacbddaababb', 'c': 'acbdaaccdc', 'd': 'dacbddaababd'}, 'acbdaa': {'a': 'acbdaaa', 'b': 'acbdaab', 'c': 'acbdaac', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbdddca': {'a': 'dacca', 'b': 'b', 'c': 'acbdaacbbbbbdddcac', 'd': 'acbdaaad'}, 'acbdaacbbbbbddddaccbdacca': {'a': 'dacbddaabaca', 'b': 'acbdaaccab', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaaccccccb': {'a': 'acbdaacbbbbbddddaaccccccba', 'b': 'acbdaacbbbbbddacbb', 'c': 'dacbddaaaccccbc', 'd': 'dacbddaaacccbd'}, 'dacbddaaacccb': {'a': 'dacbddaaacccba', 'b': 'acbdaacbbbbbbddaccb', 'c': 'dacbddaaacccbc', 'd': 'dacbddaaacccbd'}, 'dacbdd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'dacbdd'}, 'acbdaacbbbbbddddaccbdb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acbdaaccdcccb', 'c': 'b', 'd': 'acbdaaccd'}, 'acbdaacbbbbbdddcc': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'acbdaaccdcc', 'd': 'acbdaaad'}, 'acbdaacbbbbbddddacbbd': {'a': 'acbdaacbbbbbddddacbbda', 'b': 'acbdaacbbbbbddddacbbdb', 'c': 'acbdaacbbbbbddddacbbdc', 'd': 'acbdaacbbbbbddacbbbdd'}, 'accbaa': {'a': 'accbaa', 'b': 'b', 'c': 'accbaac', 'd': 'b'}, 'acbdaacbbbbbddacbbbdaccdd': {'a': 'acbdaacbbbbbddacbbbdaccdda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaaacbcab': {'a': 'accba', 'b': 'acbdaaccdcccbb', 'c': 'b', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddacbbbbb': {'a': 'acbdaacbbbbbddacbbbbba', 'b': 'acbdaacbbbbbb', 'c': 'acbdaacbbbbbbdb', 'd': 'acbdaacbbbbbddacbbbbbd'}, 'acbdaaccdc': {'a': 'acbdaaccdca', 'b': 'b', 'c': 'acbdaaccdcc', 'd': 'b'}, 'dacbddaababb': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'b', 'd': 'acbdaaccdcccbdd'}, 'acbdaacbbbdbbd': {'a': 'acbdaacbbbdbbda', 'b': 'b', 'c': 'b', 'd': 'accbbd'}, 'acbdaaada': {'a': 'da', 'b': 'b', 'c': 'acbdaacbcbdaaddaccacca', 'd': 'b'}, 'acbdaacbbbbbbdddbdac': {'a': 'accba', 'b': 'acbdaacbbbbbbdddbdacb', 'c': 'acbdaacbbbbbbdddbdacc', 'd': 'acbdaaad'}, 'dacbddaaaccccbbddabdd': {'a': 'acbdaacbbbbbddddaccbddadda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'daaaaacabdd'}, 'dacbddaaaccccbbdddacac': {'a': 'acbdaacbbbbbdddaa', 'b': 'dacbddaaacb', 'c': 'acbdaacbbbbbddddaaccc', 'd': 'dacbddaaacd'}, 'acbdaacbbbbdaaa': {'a': 'acbdaacbbbbbddddacaa', 'b': 'dacbddaabaca', 'c': 'acbdaacbbbbdaaac', 'd': 'dacbddaad'}, 'dacbddaaacb': {'a': 'acbdaacbbbbbddddaccba', 'b': 'dacbddaaacbb', 'c': 'dacbddaaacbc', 'd': 'dacbddaaacbd'}, 'acbdaacbbbbbddddaccbdaca': {'a': 'acbdaacbbbbbddddacacaa', 'b': 'acbdaaacab', 'c': 'acbdaaac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'daaaaacaccab': {'a': 'accbaa', 'b': 'acb', 'c': 'accaa', 'd': 'acbdaaccd'}, 'dacca': {'a': 'daccaa', 'b': 'daccab', 'c': 'daccc', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbdddcacb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'acb', 'c': 'b', 'd': 'acbdaaccdcccbbd'}, 'acbdaacbbbbbdddadab': {'a': 'daaaaacabda', 'b': 'acbdaacbbbbbdddadb', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'dacbddad'}, 'daaacc': {'a': 'dacbddaaacca', 'b': 'dacbddaaacccb', 'c': 'acbdaacbbbbbbddaccc', 'd': 'daaaccd'}, 'dacbc': {'a': 'accaca', 'b': 'b', 'c': 'dacbcc', 'd': 'acbdaaabcd'}, 'dacbddaaacccba': {'a': 'dacbddaaacccbaa', 'b': 'dacbddaaacccbab', 'c': 'daccc', 'd': 'daaaaacacd'}, 'dacbddaaaccccbbddddcc': {'a': 'accba', 'b': 'accbb', 'c': 'accc', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddacbbbdda': {'a': 'acbdaacbbbbbdddaa', 'b': 'acbdaacbbbbbddacbbbddab', 'c': 'acbdaacbbbbbddacbbbddac', 'd': 'acbdaacbbbbbddacbbbddad'}, 'acbdaacbbbbbddacbbda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbddddaccbab', 'c': 'acbdaacbbbbbddacbbbbbdaac', 'd': 'acbdaacbbbbbddddaccbddad'}, 'acbdaacbbbdb': {'a': 'acbdaacbbbbbbaa', 'b': 'acbdaacbbbdbb', 'c': 'b', 'd': 'acbd'}, 'dacbddaab': {'a': 'dacbddaaba', 'b': 'dacbddaabb', 'c': 'dacbddaabc', 'd': 'dacbddaabd'}, 'acbdaacbbbbbddacbbbddadd': {'a': 'acbdaacbbbbbdddadda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'acbdaacbbbbbddacbbbddaddd'}, 'acbdaacbbbbdda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbddab', 'c': 'acbdaacbbbbbbdddac', 'd': 'acbdaacbbbbbddddaccbcd'}, 'daca': {'a': 'acbdaa', 'b': 'dacbddaababd', 'c': 'dac', 'd': 'acbdaaabcd'}, 'dacbddaaaccccbbdddaa': {'a': 'dacbddaaac', 'b': 'dacbddaaaccccbbdddaab', 'c': 'acbdaacbbbbbddddaac', 'd': 'dacbddaaaccccbbdddaad'}, 'acbdaacbbbbbddddacaaa': {'a': 'acbdaacbbbbbddddacaaa', 'b': 'acbdaacbbbbbddddacaaab', 'c': 'dacbddaaac', 'd': 'dacbddaaacd'}, 'acbdaacbbbbbddacbbbdaccdda': {'a': 'acbdaacbbbbbddacbbbdaccddaa', 'b': 'acbdaaad', 'c': 'acbdaacbbbbbddacbbbbbdaac', 'd': 'acbdaaad'}, 'acbdaacbcbdaaddacb': {'a': 'accba', 'b': 'dacbb', 'c': 'accbaaca', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbbbbdddcda': {'a': 'daca', 'b': 'b', 'c': 'acbdaacbbbbbbdddbdacc', 'd': 'dacbddadd'}, 'acbdaacbbbbbddddaccc': {'a': 'dacbddaaacca', 'b': 'acbdaacbbbbbddddacb', 'c': 'dacbddaaacccc', 'd': 'dacbddaaaccd'}, 'acbdaacbbbbbddddaccbddaddaabaa': {'a': 'acbdaacbbbbbddddaaccaaa', 'b': 'acbdaacbbbbbddddaccbddaddaabaab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbbbddddb': {'a': 'acbdaacbbbbbddacbbbddacddc', 'b': 'acbdaaccdcccb', 'c': 'b', 'd': 'acbdaacbbbbbddddbd'}, 'daaaba': {'a': 'daaabaa', 'b': 'acbdaaad', 'c': 'dac', 'd': 'dacbddadd'}, 'dacbddaaaa': {'a': 'dacbddaaac', 'b': 'acbdaaac', 'c': 'dacbddaaac', 'd': 'dacbddaaacd'}, 'dacbddaad': {'a': 'acbdaaa', 'b': 'b', 'c': 'acbdaaccdca', 'd': 'dacbddad'}, 'dacbddaaaccccbbdddaabbcccc': {'a': 'dacbccca', 'b': 'dacbddaababb', 'c': 'dacbddaaaccccbbdddaabbccccc', 'd': 'b'}, 'acbdaacbbbbbddddaccaa': {'a': 'dacbddaa', 'b': 'daaaaacab', 'c': 'acbdaaac', 'd': 'daaaaacabdd'}, 'acbdaacbbbbbb': {'a': 'acbdaacbbbbbba', 'b': 'acbdaacbbbbbb', 'c': 'acbdaacbbbbbbc', 'd': 'acbdaacbbbbbbd'}, 'dacbddaaaccccbbdddacdd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'dacbddaabd'}, 'acbdaacbbbbbddddbdd': {'a': 'acbdaacbbbbbddddbdda', 'b': 'b', 'c': 'b', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbdddcc': {'a': 'accba', 'b': 'accbb', 'c': 'accac', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddacbbbdac': {'a': 'acbdaacbcbda', 'b': 'acbdaacb', 'c': 'acbdaacbbbbbddacbbbdacc', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbbbbbddddaadd': {'a': 'acbdaacbbbbbddddaadda', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddabba', 'd': 'dacbddaaaccccbbddabdd'}, 'acbdaacbbbbbddddaaccccdca': {'a': 'accbaacaaa', 'b': 'b', 'c': 'accacac', 'd': 'b'}, 'acbdaacbbbbbddddacacccbba': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbbbbdab', 'c': 'daccc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaacbbbbbddac': {'a': 'acbdaacbcbdaa', 'b': 'acbdaacbbbbbddacb', 'c': 'acbdaacbbbbbddacc', 'd': 'acbdaacbbbbbddacd'}, 'acbdaacbcbdaa': {'a': 'acbdaacbbbbbddddacacaaa', 'b': 'acbdaaab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'acbdaacbcbdaad'}, 'acbdaacbbbdbb': {'a': 'b', 'b': 'acbdaacbbbdbbb', 'c': 'b', 'd': 'acbdaacbbbdbbd'}, 'acbdaacbbbbbddacbbbda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbddacbbbdab', 'c': 'acbdaacbbbbbddacbbbdac', 'd': 'acbdaacbbbbbddddaccbcd'}, 'daaaaacaccaa': {'a': 'dacbddaaacbca', 'b': 'acbdaacbbbbbdab', 'c': 'daccc', 'd': 'acbdaaad'}, 'acbdaacbbbbbdaa': {'a': 'acbdaacbbbbbdddada', 'b': 'acbdaacbbbbbddddaccbab', 'c': 'acbdaacbbbbbddacbbbbbdaac', 'd': 'dacbddaaacbcd'}, 'acbdaacbbbbbdddadda': {'a': 'acbdaacbbbbbddddaccbddaddaa', 'b': 'acbdaacbbbbbdddadab', 'c': 'acbdaacbbbbbddddaccbddadac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaaacda': {'a': 'acbdaacbbbbbddddaaccaa', 'b': 'dacbddaaacdab', 'c': 'acbdaaac', 'd': 'dacbddad'}, 'acbdaacbbbbbddddaacccccccc': {'a': 'acca', 'b': 'dacbddaaaccccbc', 'c': 'acbdaacbbbbbddddaacccccccc', 'd': 'dacbddaaaccccccd'}, 'acbdaacbbbbbddacb': {'a': 'acbdaacbbbbbddacba', 'b': 'acbdaacbbbbbddacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbddacbd'}, 'acbdaacbbbbbbdddbdacb': {'a': 'acbdaacbbbbbddacbbbddabba', 'b': 'acb', 'c': 'b', 'd': 'acbdaacbbbbbbdddbdacbd'}, 'acbdaacbcbd': {'a': 'acbdaacbcbda', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'dacbdd'}, 'acbdaacbbbbda': {'a': 'acbdaacbbbbdaa', 'b': 'acbdaaccdcccbd', 'c': 'acbdaacbbbbdac', 'd': 'dacbddaaaccccbbddabd'}, 'acbdaacbcbdaaddaccacca': {'a': 'dacca', 'b': 'acbdaaabb', 'c': 'daccc', 'd': 'acbdaaad'}, 'acbdaacbbbbbddacbbbbbdaac': {'a': 'dacbddaabacaa', 'b': 'acbdaaccb', 'c': 'acbdaacbbbbbddaccc', 'd': 'dacbddaaacbcd'}, 'accacacb': {'a': 'acbdaaccdc', 'b': 'acb', 'c': 'b', 'd': 'acbdaaccdcccbd'}, 'dacbddaaaccccba': {'a': 'daaaaacaccaa', 'b': 'acbdaacbbbbbdab', 'c': 'daccc', 'd': 'acbdaaccd'}, 'dacbddadd': {'a': 'dacbddadda', 'b': 'b', 'c': 'b', 'd': 'acbdaaabcd'}, 'dacbddaabd': {'a': 'dacbdda', 'b': 'b', 'c': 'acbdaaccdc', 'd': 'dacbddaaaccdd'}, 'acbdaacbbbbdaab': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'dacbb', 'c': 'accbaa', 'd': 'acbdaacbbbbbbddaccdd'}, 'acbdaacbbbbbddacbbbbba': {'a': 'acbdaacbbbbbddca', 'b': 'b', 'c': 'acbdaaccdcccb', 'd': 'acbdaacbbbbbddddbd'}, 'acbdaacbbbbbbddda': {'a': 'dacbddaa', 'b': 'acbdaacbbbbbdddab', 'c': 'acbdaacbbbbbbdddac', 'd': 'acbdaacbbbbbddad'}, 'acbdaacbbbbbddacd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'dacbddaabd'}, 'acbdaacbbbbbdddab': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'accbb', 'c': 'acbdaacbbbbbddacbbbddacddc', 'd': 'acbdaacbbbbbbddaccd'}, 'dacbddaabbba': {'a': 'dacca', 'b': 'b', 'c': 'dacbddaabbbac', 'd': 'dacbddaababd'}, 'acbdaaccdcccbddaca': {'a': 'dacbda', 'b': 'dacbddaababd', 'c': 'dacbddaaacbc', 'd': 'dacbddab'}, 'dacbddaaaccccbbdddacdaab': {'a': 'dacbddaaaccccbbdddacdaaba', 'b': 'acbdaacbcbdaaddaccacbb', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddaabd'}, 'acbdaacbbbbbbdddaccdc': {'a': 'accba', 'b': 'b', 'c': 'acbdaacbbbacc', 'd': 'acbdaaabcd'}, 'dacbddaaacccbaab': {'a': 'a', 'b': 'acbdaacbbbbbddabb', 'c': 'accaca', 'd': 'acbdaaccd'}, 'acbdaacbbbbbddacbbbdaccddaacc': {'a': 'acbdaaaca', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddacbbbdaccddaaccc', 'd': 'acbdaacbbbbbddddacaad'}, 'daaaab': {'a': 'dacbddaabacaa', 'b': 'dacbddaabb', 'c': 'dacbddaaacbcc', 'd': 'daaaaacabdd'}, 'acbdaacbbbbdac': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbbbdacb', 'c': 'acbdaacbbbbbbddaccac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'acbdaaccdca': {'a': 'acbdaaccdca', 'b': 'b', 'c': 'acbdaaccdccc', 'd': 'b'}, 'acbdaacbbbbbbddac': {'a': 'acbdaacbcbda', 'b': 'acbdaacb', 'c': 'acbdaacbbbbbbddacc', 'd': 'acbdaacbbbbbddacd'}, 'acbdaaccdcccbddacc': {'a': 'daccaa', 'b': 'acbdaaccb', 'c': 'acbdaacc', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbddad': {'a': 'dacbddaaacbddda', 'b': 'dacbddadd', 'c': 'dacbddaaaccccbbddba', 'd': 'acbdaacbbbbbddddaadd'}, 'acbdaacbbbbbddddacacccbb': {'a': 'acbdaacbbbbbddddacacccbba', 'b': 'acbdaacbb', 'c': 'acbdaacbbbbbddddacbbc', 'd': 'dacbddaaaccccbbdd'}, 'dacbddaaaccccbbdddaabbccccc': {'a': 'dacbccca', 'b': 'acb', 'c': 'accac', 'd': 'b'}, 'acbdaacbbbbbddddabd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'acbdaacbbbbbbddaccdd'}, 'dacbddaaacccbaa': {'a': 'acbdaacbcbda', 'b': 'dacbddaaacccbaab', 'c': 'dacbddaaacbc', 'd': 'dacbddab'}, 'dacbddaabacb': {'a': 'acbdaacbba', 'b': 'acbdaacbb', 'c': 'acbdaacbc', 'd': 'dacbdd'}, 'acbdaacbbbbbbda': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaacbbbbbbdab', 'c': 'acbdaacbbbbbbdac', 'd': 'accbbd'}, 'acbdaacbbbbbbddaccacb': {'a': 'acbdaacbba', 'b': 'acbdaacbb', 'c': 'acbdaacbbbbbbddaccacbc', 'd': 'dacbdd'}, 'acbdaacbbbbbddddaccbab': {'a': 'dacca', 'b': 'accbb', 'c': 'acbdaaccdc', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaaacd': {'a': 'dacbddaaacda', 'b': 'b', 'c': 'accbaa', 'd': 'dacbddaaaccccbbddabdd'}, 'acbdaacc': {'a': 'acbdaacca', 'b': 'acbdaaccb', 'c': 'acbdaacbbbbbddacbbbdaccc', 'd': 'acbdaaccd'}, 'dacbddaaaccccbbddba': {'a': 'dacca', 'b': 'b', 'c': 'acbdaacbbbbbddacbbbacc', 'd': 'dacbddadd'}, 'acbdaacbbbbbddacbd': {'a': 'dacbddaaacda', 'b': 'acbdaacbbbbbddacbdb', 'c': 'acbdaacbbbbbddacbdc', 'd': 'acbdaacbbbdd'}, 'dacbddaaccc': {'a': 'daaaaacacc', 'b': 'dacbddaaacccb', 'c': 'dacbddaacccc', 'd': 'dacbddaacccd'}, 'acbdaaaa': {'a': 'daaaa', 'b': 'daaab', 'c': 'acbdaacbbbbbddddaccbdac', 'd': 'dacbddab'}, 'acbdda': {'a': 'dacbddaa', 'b': 'daccab', 'c': 'acbdaacbbbbbddacbbbbbdaac', 'd': 'dacbddadd'}, 'acbdaacbbbbb': {'a': 'acbdaacbbbbba', 'b': 'acbdaacbbbbbb', 'c': 'acbdaaccdcccb', 'd': 'acbdaacbbbbbd'}, 'dacbddaaaccccc': {'a': 'acbdaaabc', 'b': 'acbdaacbbbbbbddaccacb', 'c': 'dacbddaaacccccc', 'd': 'acbdaacbbbddbd'}, 'accba': {'a': 'accbaa', 'b': 'b', 'c': 'accaa', 'd': 'b'}, 'acbdaacbbbbbddddaccbddadac': {'a': 'daaaa', 'b': 'acbdaacbbbbbddddaccbdacb', 'c': 'acbdaacbbbbbddddaccbddadacc', 'd': 'dacbddaad'}, 'acbdaacbbbbd': {'a': 'acbdaacbbbbda', 'b': 'acbdaacbbbbbddacbbbdb', 'c': 'b', 'd': 'acbdaacbbbbdd'}, 'dacbddaaaccccbbdddad': {'a': 'dacbddaaacbddda', 'b': 'acbdaaad', 'c': 'acbdaacbbbbbdddca', 'd': 'dacbddaaaccccbbdddadd'}, 'acbdaacbbbbbddacbbbac': {'a': 'accaca', 'b': 'acb', 'c': 'acbdaacbbbbbddacbbbacc', 'd': 'acbdaaad'}, 'dacbdda': {'a': 'dacbddaa', 'b': 'dacbddab', 'c': 'dacbddac', 'd': 'dacbddad'}, 'acbdaacbbbbbddddaccbdacb': {'a': 'dacbddaaba', 'b': 'acbdaacbbbddaabb', 'c': 'dacbddaaacbcc', 'd': 'dacbddaaacbd'}, 'acbdaacb': {'a': 'acbdaacba', 'b': 'acbdaacbb', 'c': 'acbdaacbc', 'd': 'dacbdd'}, 'dacbddaaacbdddd': {'a': 'acbdaacbbbbbddddaadda', 'b': 'acbdaacbbbbbdddadb', 'c': 'dacbddaabbba', 'd': 'dacbddaaacbdddd'}, 'dacbcc': {'a': 'dacbccca', 'b': 'accacacb', 'c': 'dacbccc', 'd': 'b'}, 'acbdaacbbbbbddddaaccaaa': {'a': 'acbdaacbbbbbddddacaa', 'b': 'acbdaacbbbbbddddaaccaaab', 'c': 'daaaaacac', 'd': 'acbdaacbbbbbddddacaad'}, 'dacbddaaaccccbbdddaab': {'a': 'acbdaacbbbbbddddacca', 'b': 'dacbddaaaccccbbdddaabb', 'c': 'daaabaac', 'd': 'dacbddaaacbd'}, 'dacbddaaa': {'a': 'dacbddaaaa', 'b': 'dacbddaaab', 'c': 'dacbddaaac', 'd': 'dacbddaaad'}, 'daaaaacaa': {'a': 'dacbddaa', 'b': 'dacbddaaacbc', 'c': 'acbdaaac', 'd': 'acbdaacbbbbbddacbbbdaccdd'}, 'dacbddaaaccccbc': {'a': 'accbaa', 'b': 'dacbb', 'c': 'accc', 'd': 'accbbd'}, 'dacbddaaaccccbbdddacdaabab': {'a': 'dacca', 'b': 'accbb', 'c': 'dacbddaabbbac', 'd': 'acbdaaccd'}, 'acbdaacbbbbbbdb': {'a': 'b', 'b': 'acbdaacbbbbbbdb', 'c': 'b', 'd': ''}, 'daaaaac': {'a': 'daaaaaca', 'b': 'dacbddaaacb', 'c': 'acbdaacbbbbbddddaccc', 'd': 'dacbddaaaccd'}, 'accacbd': {'a': 'acbda', 'b': 'b', 'c': 'b', 'd': 'accacbdd'}, 'dacbddaaacbb': {'a': 'dacbddaabacaa', 'b': 'acbdaacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbddddaccbd'}, 'acbdaacca': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'acbdaaccab', 'c': 'dacbddaaacbcc', 'd': 'dacbddaababd'}, 'acbdaacbbbbbddddaccbddaddaabaab': {'a': 'dacbddaabacaa', 'b': 'dacbddaabb', 'c': 'acbdaacbc', 'd': 'daaaaacabdd'}, 'dacbddaaacbd': {'a': 'dacbddaaaccccbbda', 'b': 'acbdaacbbbbbdab', 'c': 'accbaa', 'd': 'dacbddaaacbdd'}, 'daccc': {'a': 'accbaa', 'b': 'daccb', 'c': 'daccc', 'd': 'dacbddaababd'}, 'acbdaacbbbbbdddaa': {'a': 'dacbddaaac', 'b': 'dacbddacb', 'c': 'acbdaacbbbbbddddacc', 'd': 'acbdaacbbbbbddddaad'}, 'acbdaacbbbbbbddaccdd': {'a': 'acbdaacbcbdaa', 'b': 'b', 'c': 'acbdaaabcd', 'd': 'daaaaacabdd'}, 'acbdaaad': {'a': 'acbdaaada', 'b': 'b', 'c': 'b', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbddacbbd': {'a': 'acbdaacbbbbbddacbbda', 'b': 'daccbbbb', 'c': 'acbdaacbbbbbddacbbdc', 'd': 'acbdaacbbbbbddacbbbdd'}, 'acbdaacbcbdaaddaccacbb': {'a': 'acbdaacbba', 'b': 'acbdaacbbbbbddacbbb', 'c': 'acbdaaabcd', 'd': 'acbdaacbbd'}, 'acbdaaabbda': {'a': 'acbdaacbcbdaa', 'b': 'acbdaaabcd', 'c': 'dac', 'd': 'acbdaaabcd'}, 'acbdaacbbbbbbddaccb': {'a': 'dacbddaaacbca', 'b': 'acbdaacbbbbbddacbb', 'c': 'dacbddaaacbcc', 'd': 'dacbddacbd'}, 'acbdaacbbbbbbddacca': {'a': 'acbdaacbbbbbbddaccaa', 'b': 'dacbddaabacab', 'c': 'acbdaacbbbbbbddaccac', 'd': 'dacbddab'}, 'acbdaacbbd': {'a': 'dacbdda', 'b': 'acbdaacbbdb', 'c': 'acbdaab', 'd': 'acbdaacbbbdd'}, 'dacbddaabc': {'a': 'dacca', 'b': 'acbdaacbcb', 'c': 'daccc', 'd': 'dacbddab'}, 'acbdaacbbbbbddddaaccaaab': {'a': 'acbdaacbbbbbddddaaccaaaba', 'b': 'dacbb', 'c': 'dacbddaaacbcc', 'd': 'acbdaacbbbbbbddaccdd'}, 'acbdaacbbbbbddddacca': {'a': 'acbdaacbbbbbddddaccaa', 'b': 'dacbddaaacbc', 'c': 'daaaaacac', 'd': 'daaaaacabdd'}, 'dacbddaaaccccbbdddc': {'a': 'dacbddaaacbca', 'b': 'acbdaaccdcccbb', 'c': 'dacbddaaaccccbbdddcc', 'd': 'acbdaaccd'}}
Explanation matches RNN: 57.28
RNN matches ground truth: 100.0
Explanation matches ground truth: 57.28
Lstar matches RNN: 99.99
Lstar matches ground truth: 99.99
target query                                       explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (c | (a | b))) -> (a & ((c | (a | b)) U b)))  False          100.0      100.0              57.28                              57.28        401.11478   2.163148e+19         0.520499  [b, , c, a, da, acbd, ac, cd, ad, cb, acacbd, ...          0         0         5          600                    99.99                                    99.99             101.795673         True      0.1   0.05
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12037038803100586  s
No positive counterexample found
EQ test took  0.012495994567871094  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11526107788085938  s
EQ test took  0.0015680789947509766  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1767418384552002  s
No positive counterexample found
EQ test took  0.04608893394470215  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3625905513763428  s
EQ test took  0.04711461067199707  s
new counterexample: accbbd  should be accepted by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (! (G (x0 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (G (a | b)))
Learning took:  0.8955655097961426  s
EQ test took  0.021088600158691406  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (((x2 | x1) | x0) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((a | (b | c)) -> (X c))
Learning took:  3.7003326416015625  s
No positive counterexample found
EQ test took  0.19534015655517578  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c', 'ac']



5  iteration complete



start formula depth: 7
Before normalization: ((x1 | (x2 | x0)) U (! (x1 | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: ((b | (a | c)) U (~ (b | (a | c))))
Learning took:  1.9835529327392578  s
No positive counterexample found
EQ test took  0.048914194107055664  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (G ((x1 | (F x2)) | x0)))
Learning formula with depth 5
learned LTL formula: (~ (G (a | (b | (F c)))))
Learning took:  10.670677661895752  s
No positive counterexample found
EQ test took  0.05217337608337402  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd']



7  iteration complete



start formula depth: 8
Before normalization: (! (x1 | (F (G (x2 | x0)))))
Learning formula with depth 5
learned LTL formula: (~ (b | (F (G (a | c)))))
Learning took:  10.634779214859009  s
No positive counterexample found
EQ test took  0.12604498863220215  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd', 'ab']



8  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((F x2) | (x0 | x1)) -> (X (X x2)))
Learning formula with depth 3
learned LTL formula: (((a | b) | (F c)) -> (X (X c)))
Learning took:  116.37282609939575  s
No positive counterexample found
EQ test took  0.29696083068847656  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'accbbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd', 'ab', 'da']



9  iteration complete



start formula depth: 9
Before normalization: ((F ((x1 | x0) | x2)) -> (X (X x2)))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (X (X c)))
Learning took:  17.326279401779175  s
EQ test took  0.10146760940551758  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'accbbd', 'acbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd', 'ab', 'da']



10  iteration complete



start formula depth: 9
Before normalization: ((F (x1 | (x0 | x2))) -> (X (X (x1 | (x0 | x2)))))
Learning formula with depth 5
learned LTL formula: ((F (b | (a | c))) -> (X (X (b | (a | c)))))
Learning took:  20.247334241867065  s
EQ test took  0.17890501022338867  s
new counterexample: adb  should be rejected by implementation


positive traces---> 
['', 'accbbd', 'acbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd', 'ab', 'da', 'adb']



11  iteration complete



start formula depth: 9
Before normalization: (! ((! x2) U ((G (x0 | x2)) | x1)))
Learning formula with depth 5
learned LTL formula: (~ ((~ c) U (b | (G (a | c)))))
Learning took:  120.63935136795044  s
No positive counterexample found
EQ test took  0.2999396324157715  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'accbbd', 'acbd']


negative traces---> 
['a', 'b', 'c', 'ac', 'dc', 'bd', 'ab', 'da', 'adb', 'ad']



12  iteration complete





epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: true
final ltl:  (~ ((~ c) U (b | (G (a | c)))))
incomplete formula
Number of samples: 195
Number of counterexamples returned: 106
1.5996443136898532e+55 1.486012456132822

Time taken to extract ltl: 401.1111810207367
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.01939678192138672
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 71.35
RNN matches ground truth: 100.0
Explanation matches ground truth: 71.35
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (~ ((~ c) U (b | (G (a | c)))))  False          100.0      100.0              71.35                              71.35       401.111181   1.599644e+55         1.486012  [a, , b, accbbd, c, ac, dc, bd, ab, da, acbd, ...          0         0         5            2                    58.01                                    58.01               0.019397         True     0.05    0.5
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11136221885681152  s
No positive counterexample found
EQ test took  0.016214609146118164  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12045717239379883  s
EQ test took  0.0015795230865478516  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18668460845947266  s
EQ test took  0.04433608055114746  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 U (! x0))
Learning formula with depth 2
learned LTL formula: (a U (~ a))
Learning took:  0.2842116355895996  s
EQ test took  0.026038408279418945  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: ((x0 | x2) -> (X x2))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X c))
Learning took:  0.8335568904876709  s
EQ test took  0.10085272789001465  s
new counterexample: aacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x0 | x2) -> (X (x0 | x2)))
Learning formula with depth 3
learned LTL formula: ((a | c) -> (X (a | c)))
Learning took:  0.7788200378417969  s
EQ test took  0.10821700096130371  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b']



5  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X (x2 | x0)))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X (a | c)))
Learning took:  4.6319403648376465  s
No positive counterexample found
EQ test took  0.16711974143981934  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'db']



6  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((x0 | x2) -> (F x1)) & ((F x1) -> (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (((a | c) -> (F b)) & ((F b) -> (a | c)))
Learning took:  11.943568229675293  s
No positive counterexample found
EQ test took  0.19112443923950195  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da']



7  iteration complete



start formula depth: 8
Before normalization: ((x2 | (x0 | x1)) U (! (F (x2 | (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: ((c | (a | b)) U (~ (F (c | (a | b)))))
Learning took:  5.729229688644409  s
EQ test took  0.144423246383667  s
new counterexample: ddacbaacbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da']



8  iteration complete



start formula depth: 8
Before normalization: (G (((x1 | x2) | x0) U (! ((x1 | x2) | x0))))
Learning formula with depth 5
learned LTL formula: (G ((a | (b | c)) U (~ (a | (b | c)))))
Learning took:  17.429312467575073  s
EQ test took  0.08084869384765625  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (((F x1) | ((F x0) | x2)) -> ((F x1) & ((F x0) | x2)))
Learning formula with depth 4
learned LTL formula: (((F b) | (c | (F a))) -> ((F b) & (c | (F a))))
Learning took:  153.2345836162567  s
No positive counterexample found
EQ test took  0.07515072822570801  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad', 'dc']



10  iteration complete



start formula depth: 9
Before normalization: (((F x0) | (F (x2 | x1))) -> ((F x0) & (F (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (((F a) | (F (b | c))) -> ((F a) & (F (b | c))))
Learning took:  13.271579265594482  s
No positive counterexample found
EQ test took  0.07716822624206543  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad', 'dc', 'ac']



11  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! ((x1 | x2) | x0))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (a | (b | c)))))
Learning took:  12.002159357070923  s
No positive counterexample found
EQ test took  0.20804429054260254  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad', 'dc', 'ac', 'bd']



12  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | (x1 | x2))) -> (X (X (x0 | (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: ((F (a | (b | c))) -> (X (X (a | (b | c)))))
Learning took:  37.01541709899902  s
EQ test took  0.17780518531799316  s
new counterexample: dddaaabccbb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd', 'dddaaabccbb']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad', 'dc', 'ac', 'bd']



13  iteration complete



start formula depth: 9
Before normalization: ((((x2 | x0) | x1) | (X ((x2 | x0) | x1))) -> (X (X ((x2 | x0) | x1))))
Learning formula with depth 5
learned LTL formula: (((b | (a | c)) | (X (b | (a | c)))) -> (X (X (b | (a | c)))))
Learning took:  34.981425046920776  s
EQ test took  0.2280259132385254  s
new counterexample: bca  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aacbd', 'ddacbaacbd', 'dddaaabccbb']


negative traces---> 
['a', 'c', 'b', 'db', 'da', 'ad', 'dc', 'ac', 'bd', 'bca']



14  iteration complete





epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: true
final ltl:  (((b | (a | c)) | (X (b | (a | c)))) -> (X (X (b | (a | c)))))
incomplete formula
Number of samples: 236
Number of counterexamples returned: 179
1.607875704760859e+54 2.2640491798690037

Time taken to extract ltl: 401.0380713939667
overall guided extraction time took: 0.03999999999996362
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.03964877128601074
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 55.55
RNN matches ground truth: 100.0
Explanation matches ground truth: 55.55
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                                        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((b | (a | c)) | (X (b | (a | c)))) -> (X (X ...  False          100.0      100.0              55.55                              55.55       401.038071   1.607876e+54         2.264049  [a, , acbd, c, aacbd, b, db, da, ddacbaacbd, a...          0         0         5            2                    58.01                                    58.01               0.039649         True     0.05   0.25
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12450075149536133  s
No positive counterexample found
EQ test took  0.02062225341796875  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11802196502685547  s
EQ test took  0.0015609264373779297  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18066930770874023  s
No positive counterexample found
EQ test took  0.07474851608276367  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35965824127197266  s
EQ test took  0.10339498519897461  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (! ((G x0) | x1))
Learning formula with depth 3
learned LTL formula: (~ (b | (G a)))
Learning took:  0.760228157043457  s
EQ test took  0.1020660400390625  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'b', 'c']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (F (! (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (F (~ (c | (a | b))))
Learning took:  3.1104023456573486  s
No positive counterexample found
EQ test took  0.05560040473937988  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'b', 'c', 'db']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! (x2 | (G (F (x0 | x1)))))
Learning formula with depth 5
learned LTL formula: (~ (c | (G (F (a | b)))))
Learning took:  10.212862253189087  s
No positive counterexample found
EQ test took  0.1427781581878662  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc']



6  iteration complete



start formula depth: 8
Before normalization: (G (! (G (x0 | (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (G (~ (G (a | (b | c)))))
Learning took:  3.7660014629364014  s
EQ test took  0.07648563385009766  s
new counterexample: ddaacabbddddb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb']


negative traces---> 
['a', 'b', 'c', 'db', 'dc']



7  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: (! (x3 U (G (x2 | (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: (~ (d U (G (c | (a | b)))))
Learning took:  138.53081607818604  s
EQ test took  0.061905622482299805  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd']



8  iteration complete



start formula depth: 9
Before normalization: ((F ((x0 | x2) | x1)) -> (X (X ((x0 | x2) | x1))))
Learning formula with depth 5
learned LTL formula: ((F (b | (a | c))) -> (X (X (b | (a | c)))))
Learning took:  13.274887084960938  s
EQ test took  0.0688018798828125  s
new counterexample: dddaabd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb', 'dddaabd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd']



9  iteration complete



start formula depth: 9
Before normalization: (! (x3 U (x2 | (G (x1 | x0)))))
Learning formula with depth 5
learned LTL formula: (~ (d U (c | (G (a | b)))))
Learning took:  18.39048671722412  s
EQ test took  0.2553269863128662  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb', 'dddaabd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd', 'ac']



10  iteration complete



start formula depth: 9
Before normalization: ((((x1 | x2) | (X (x1 | x2))) | x0) -> (X (X (x1 | x2))))
Learning formula with depth 5
learned LTL formula: ((a | ((b | c) | (X (b | c)))) -> (X (X (b | c))))
Learning took:  33.64879035949707  s
EQ test took  0.10559821128845215  s
new counterexample: aaaabcbbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb', 'dddaabd', 'aaaabcbbd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd', 'ac']



11  iteration complete



start formula depth: 9
Before normalization: (((F (x1 | x2)) | x0) -> (X (X (F (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: ((a | (F (b | c))) -> (X (X (F (b | c)))))
Learning took:  55.00627613067627  s
EQ test took  0.08066892623901367  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb', 'dddaabd', 'aaaabcbbd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd', 'ac', 'da']



12  iteration complete



start formula depth: 9
Before normalization: (((F x1) | (F (x0 | x2))) -> ((F x1) & (F (x0 | x2))))
Learning formula with depth 4
learned LTL formula: (((F b) | (F (a | c))) -> ((F b) & (F (a | c))))
Learning took:  31.025219678878784  s
No positive counterexample found
EQ test took  0.09329962730407715  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'ddaacabbddddb', 'dddaabd', 'aaaabcbbd']


negative traces---> 
['a', 'b', 'c', 'db', 'dc', 'cd', 'ac', 'da', 'bc']



13  iteration complete





epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: true
final ltl:  (((F b) | (F (a | c))) -> ((F b) & (F (a | c))))
incomplete formula
Number of samples: 241
Number of counterexamples returned: 241
1.0 None

Time taken to extract ltl: 401.0769793987274
overall guided extraction time took: 0.09999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09818601608276367
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 44.05
RNN matches ground truth: 100.0
Explanation matches ground truth: 44.05
Lstar matches RNN: 58.01
Lstar matches ground truth: 58.01
target query                                       explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  (((F b) | (F (a | c))) -> ((F b) & (F (a | c))))  False          100.0      100.0              44.05                              44.05       401.076979            1.0            None  [a, , b, acbd, c, db, dc, ddaacabbddddb, cd, d...          0         0         4            2                    58.01                                    58.01               0.098186         True     0.05    0.1
target: alternating bit protocol
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12436652183532715  s
No positive counterexample found
EQ test took  0.01880788803100586  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12734603881835938  s
EQ test took  0.0015854835510253906  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18605327606201172  s
No positive counterexample found
EQ test took  0.07379865646362305  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3410816192626953  s
No positive counterexample found
EQ test took  0.21693992614746094  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0966074466705322  s
EQ test took  0.10325312614440918  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((x2 | x0) | x1) -> (X ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: ((b | (a | c)) -> (X (b | (a | c))))
Learning took:  2.5444998741149902  s
EQ test took  0.09758591651916504  s
new counterexample: ba  should be rejected by implementation


positive traces---> 
['', 'acbd']


negative traces---> 
['b', 'a', 'c', 'ba']



5  iteration complete



start formula depth: 7
Before normalization: (((x2 | x0) | x1) -> (X x2))
Learning formula with depth 3
learned LTL formula: ((b | (a | c)) -> (X c))
Learning took:  1.79164719581604  s
EQ test took  0.10641837120056152  s
new counterexample: aaaccbd  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba']



6  iteration complete



start formula depth: 7
Before normalization: (! ((x1 | (G x0)) | x2))
Learning formula with depth 4
learned LTL formula: (~ (c | (b | (G a))))
Learning took:  2.7010395526885986  s
EQ test took  0.2851545810699463  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac']



7  iteration complete



start formula depth: 7
Before normalization: ((x0 | (x2 | x1)) U (! (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: ((a | (b | c)) U (~ (a | (b | c))))
Learning took:  3.4110491275787354  s
No positive counterexample found
EQ test took  0.06797504425048828  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad']



8  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (((x1 | x2) | x0) -> (((x1 | x2) | x0) U (X x1)))
Learning formula with depth 4
learned LTL formula: ((a | (b | c)) -> ((a | (b | c)) U (X b)))
Learning took:  15.760473489761353  s
No positive counterexample found
EQ test took  0.18270516395568848  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db']



9  iteration complete



start formula depth: 8
Before normalization: ((x0 -> (F x1)) & ((x2 | (F x1)) -> x0))
Learning formula with depth 4
learned LTL formula: ((a -> (F b)) & ((c | (F b)) -> a))
Learning took:  7.546722650527954  s
No positive counterexample found
EQ test took  0.40834951400756836  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db', 'ab']



10  iteration complete



start formula depth: 8
Before normalization: ((F x1) U (! ((F x1) | (x0 | x2))))
Learning formula with depth 4
learned LTL formula: ((F b) U (~ ((a | c) | (F b))))
Learning took:  7.849920034408569  s
No positive counterexample found
EQ test took  0.20326614379882812  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db', 'ab', 'dc']



11  iteration complete



start formula depth: 8
Before normalization: ((F (x2 | x1)) U (! ((F (x2 | x1)) | x0)))
Learning formula with depth 5
learned LTL formula: ((F (b | c)) U (~ (a | (F (b | c)))))
Learning took:  22.369614601135254  s
EQ test took  0.10379314422607422  s
new counterexample: aaccbb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aaaccbd', 'aaccbb']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db', 'ab', 'dc']



12  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((x0 | ((F x1) | (F x2))) -> ((F x1) & (F x2)))
Learning formula with depth 4
learned LTL formula: ((a | ((F b) | (F c))) -> ((F b) & (F c)))
Learning took:  234.4787826538086  s
EQ test took  0.10710978507995605  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['', 'acbd', 'aaaccbd', 'aaccbb']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db', 'ab', 'dc', 'bc']



13  iteration complete



start formula depth: 9
Before normalization: ((F (x0 | (x2 | x1))) -> (X (X (x0 | (x2 | x1)))))
Learning formula with depth 5
learned LTL formula: ((F (a | (b | c))) -> (X (X (a | (b | c)))))
Learning took:  14.740421533584595  s
EQ test took  0.14030885696411133  s
new counterexample: dddaccbb  should be accepted by implementation


positive traces---> 
['', 'acbd', 'aaaccbd', 'aaccbb', 'dddaccbb']


negative traces---> 
['b', 'a', 'c', 'ba', 'ac', 'ad', 'db', 'ab', 'dc', 'bc']



14  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((F (a | (b | c))) -> (X (X (a | (b | c)))))
incomplete formula
Number of samples: 268
Number of counterexamples returned: 210
2.029026984110554e+58 2.4164348970203533

Time taken to extract ltl: 401.0981423854828
overall guided extraction time took: 30.75999999999999
generated counterexamples were: (format: (counterexample, counterexample generation time))
('acbbd', 0.22000000000002728)
('cdcbd', 0.049999999999954525)
('accdaccbbbdd', 0.2899999999999636)
('aaabd', 0.14999999999986358)
('aacbccbd', 0.35999999999989996)
('daccbb', 0.41000000000008185)

Time taken to extract lstar-dfa: 30.754096508026123
number of states of the dfa: 309
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'cdcb', 'c': 'cdcb', 'd': 'd'}, 'aaaabbbbbddacbbbdab': {'a': 'a', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddbd': {'a': 'accda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbba'}, 'aaaabbd': {'a': 'aaaabbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdd'}, 'aaaabbbbbddacbbbbbdacc': {'a': 'a', 'b': 'aaaabbbbbddacbbbbbdaccb', 'c': 'accdaccbbbdddaabcc', 'd': 'aaaabbbbbddacbbbbbdaccd'}, 'aaacabccbbbdbdda': {'a': 'aaaabbbbbdaa', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'dacc', 'd': 'aaabd'}, 'aaaabbbbbddacbbbdddacad': {'a': 'accdaccbbbdda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaaabbbbbddacbbbdddacadc', 'd': 'aaaabbbbbddacbbbdddacadd'}, 'accdaccbbbddaabcbdaccbcb': {'a': 'accdaccbbbddaabcbdaabba', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbdad'}, 'accdaccbbbddaabcbdacbb': {'a': 'a', 'b': 'accdaccbbbddaabcbdacbbb', 'c': 'accdaccb', 'd': 'accdaccbbbddd'}, 'accdac': {'a': 'accda', 'b': 'cdcb', 'c': 'accdacc', 'd': 'cdcb'}, 'aaaabbbbbddacbbbdddacb': {'a': 'aaaabbbbbddacbbbdddacba', 'b': 'aaaabbbbbddacbbbdddacbb', 'c': 'aaaabbbbbddacbbbdddacbc', 'd': 'aaaabbbbbddacbbbdddacbd'}, 'accdaccbbbdddaa': {'a': 'accdaccbbbdddaaa', 'b': 'accdaccbbbdddaab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbdddaad'}, 'aaaaacba': {'a': 'aaaaacbaa', 'b': 'accdaccbbbdddaabbc', 'c': 'accdaccbbbdddaabcc', 'd': 'aaabd'}, 'aaacabccb': {'a': 'cdcb', 'b': 'aaacabccbb', 'c': 'cdcb', 'd': 'aacbccbd'}, 'aaaabbbbbddacbbbbbda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbbbdab', 'c': 'aaaabbbbbddacbbbbbdac', 'd': 'accdaccbbbddd'}, 'aaca': {'a': 'aaca', 'b': 'accd', 'c': 'aac', 'd': 'accd'}, 'accdaccbbbdddaab': {'a': 'accdaccbbbddaabcbdaaa', 'b': 'accdaccbbbdddaabb', 'c': 'accdaccbbbdddaabc', 'd': 'accdaccbbbdd'}, 'da': {'a': 'aaaabbbbbddacca', 'b': 'accd', 'c': 'dac', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbacbc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbb', 'c': 'aacbcc', 'd': 'accdaccbbbddaabcbdacbcbd'}, 'aaaabbbbbddacbbbdddc': {'a': 'a', 'b': 'acb', 'c': 'accdaccbbbdddddcc', 'd': 'aaaabbbbbdaabd'}, 'aaacabccbbbd': {'a': 'aaacabccbbbda', 'b': 'aaacabccbbbdb', 'c': 'cdcb', 'd': 'aaaabbbbbdd'}, 'aaacabccbbbdbda': {'a': 'accdaccbbbddaabcbdaccaa', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaacabccbbbdbdac', 'd': 'accd'}, 'aaaabbbbbddacbbbbbdc': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'accd'}, 'aaaabbbbbddacbad': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaabd'}, 'aaab': {'a': 'aaaba', 'b': 'accdaccb', 'c': 'accdacc', 'd': 'aaabd'}, 'accdaccbbbddaab': {'a': 'accdaccbbbddaabcbda', 'b': 'accdaccbbbddaabb', 'c': 'accdaccbbbddaabc', 'd': 'accdaccbbbddaabd'}, 'aaaabbbbbddacbbbbbbbdaadacb': {'a': 'accdaccbbbdddaabba', 'b': 'accdaccbbbddaabb', 'c': 'aaaabbbbbddacbbbbbbbdaadacbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdddacbaab': {'a': 'accdaccbbbddaabcbda', 'b': 'accdaccbbbddaabb', 'c': 'aaacbc', 'd': 'accdaccbbbddaabcbd'}, 'aaaabbbbbddb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'accdaccbbbdddaabbcc', 'c': 'cdcb', 'd': 'aaaabbbbbddbd'}, 'aaaabbbbbddacbbbb': {'a': 'aaaabbbbbddacbbbba', 'b': 'aaaabbbbbddacbbbbb', 'c': 'accdaccbbbb', 'd': 'aaaabbbbbddacbbbbbd'}, 'aaac': {'a': 'aaaca', 'b': 'aaacb', 'c': 'aaacac', 'd': 'aaabd'}, 'accdaccbbbddaabcbdacbcccac': {'a': 'cdcb', 'b': 'accdaccbbbdddaabbcc', 'c': 'accdaccbbbddaabcbdacbcccacc', 'd': 'cdcb'}, 'aaaabbbbbddacbbbbbbbdbd': {'a': 'accd', 'b': 'aaaabbbbbddacbbbbbbbdbdb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbbbbbdbdd'}, 'accdaccbbbdda': {'a': 'accdaccbbbddaa', 'b': 'accd', 'c': 'accdaccbbbddaa', 'd': 'aaabd'}, 'accdaccbbbddddd': {'a': 'accdaccbbbddddda', 'b': 'accdaccbbbddddb', 'c': 'accdaccbbbdddddc', 'd': 'accdaccbbbddddd'}, 'accdaccbbbddaabcbdacbcbd': {'a': 'accdaccbbbdddaabba', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaaabbbbbddacbbbdad'}, 'aaaabbbbbddacbbbdddacbc': {'a': 'aaca', 'b': 'accdaccbbbddaabb', 'c': 'accdaccbbbdddaabcc', 'd': 'accdaccbbbddaabd'}, 'aaaabbbbbddacbcd': {'a': 'aaaabbbbbddacbcda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbd'}, 'aaaabbbbbddacbbbddd': {'a': 'aaaabbbbbddacbbbddda', 'b': 'aaaabbbbbddacbbbddb', 'c': 'aaaabbbbbddacbbbdddc', 'd': 'aaaabbbbbddacbbbddd'}, 'acbb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'acbbd'}, 'aaaabbbbbddacbbbbbbbdbdd': {'a': 'aaaabbbbbda', 'b': 'aaaabbbbbddacbbbbbbbdbdb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbdbd'}, 'accdaccbbbddaabcbdacbc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdacbcb', 'c': 'accdaccbbbddaabcbdacbcc', 'd': 'aaabd'}, 'aacbccb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'aacbccbd'}, 'accdaccbbbddaabcbdaa': {'a': 'accdaccbbbddaabcbdaaa', 'b': 'accdaccbbbddaabcbdaab', 'c': 'accdaccbbbddaa', 'd': 'aaabd'}, 'aaaabbbbbddaccbdc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdacbcb', 'c': 'aaaabbbbbddacbbbdddacadcc', 'd': 'aaabd'}, 'aacbcb': {'a': 'accd', 'b': 'accdaccbbbddaabcbdaccabb', 'c': 'cdcb', 'd': 'aaaabbd'}, 'accdaccbbbddaaabab': {'a': 'a', 'b': 'acbb', 'c': 'accdaccbbbddaaababc', 'd': 'aaabd'}, 'd': {'a': 'da', 'b': 'cdcb', 'c': 'cdcb', 'd': 'dd'}, 'aaacabccbbbdad': {'a': 'aaaabbbbbddacbbbbbbbdaada', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddacbbbdddacbaa': {'a': 'accdaccbbbddaa', 'b': 'aaaabbbbbddacbbbdddacbaab', 'c': 'accdaccbbbddaa', 'd': 'accdaccbbbddaad'}, 'aaaabbbbbddacbbbbbbbdaad': {'a': 'aaaabbbbbddacbbbbbbbdaada', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaaabbbbbddacbad'}, 'accb': {'a': 'aaab', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accbd'}, 'accdaccbbbdddaabba': {'a': 'accdaccbbbddaabcbda', 'b': 'accd', 'c': 'accdaccbbbdddaabcc', 'd': 'aaabd'}, 'aaaabbbbbddacbbbdddacbbbbaccc': {'a': 'accdaccbbbddaabcbdacbccca', 'b': 'accdaccbb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacbbbbbbbdacb': {'a': 'aaab', 'b': 'accdaccbbbddaabcbdacbbbb', 'c': 'cdcb', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdaaabbc': {'a': 'accdaccbbbddaabcbdaaabbca', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accd'}, 'aaaabbbbbddacbbbbbbbdbdb': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}, 'aaaabbb': {'a': 'accd', 'b': 'aaaabbbb', 'c': 'cdcb', 'd': 'accbd'}, 'aaacabccbbbdb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'accdaccbbb', 'c': 'cdcb', 'd': 'aaacabccbbbdbd'}, 'aaaabbbbbddacbbac': {'a': 'aaab', 'b': 'accdaccbbbddaabcbb', 'c': 'aaaabbbbbddacbbac', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbbdc': {'a': 'a', 'b': 'acbb', 'c': 'accdaccbbbdddddcc', 'd': 'aaaabbbbbddaccabd'}, 'accdaccbbbddaabcbdacbcc': {'a': 'accda', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'accd'}, 'aaaa': {'a': 'aaaaa', 'b': 'aaaab', 'c': 'aaac', 'd': 'accd'}, 'aaaabbbbbddaccd': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddaabdd'}, 'acb': {'a': 'accd', 'b': 'acbb', 'c': 'cdcb', 'd': ''}, 'accdaccbbbddaaababc': {'a': 'accda', 'b': 'aacbcb', 'c': 'accdaccbbbddaaababcc', 'd': 'accd'}, 'aaaabbbbbddacbbb': {'a': 'aaaabbbbbddacbcd', 'b': 'aaaabbbbbddacbbbb', 'c': 'accdaccbb', 'd': 'aaaabbbbbddacbbbd'}, 'aa': {'a': 'aaa', 'b': 'accd', 'c': 'aac', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaaacbaa': {'a': 'accdaccbbbddaabcbda', 'b': 'aaaaacbaab', 'c': 'dacc', 'd': 'aaabd'}, 'aaaabbbbbddacbbbba': {'a': 'aaaba', 'b': 'cdcb', 'c': 'aacbcb', 'd': 'aaaabbd'}, 'aaaabbbbbdb': {'a': 'cdcb', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'aaaabbbbbdbd'}, 'aaaabbbbbdd': {'a': 'aaaabbbbbdda', 'b': 'aaaabbbbbddb', 'c': 'accdaccb', 'd': 'aaaabbbbbddd'}, 'dacb': {'a': 'a', 'b': 'accdaccbbbddaabb', 'c': 'dacbc', 'd': 'acbbd'}, 'cdcb': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}, 'accdaccbbbdddddab': {'a': 'accdaccbbbddaabcbda', 'b': 'accdaccbbbddaabcbdaabb', 'c': 'accdaccbbbddaabcbdacbc', 'd': 'accdaccbbbdddad'}, 'accdaccbbbddaabcbdaabbac': {'a': 'accdac', 'b': 'aaaabb', 'c': 'accdaccbbbddaabcbdacbcc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacbbbbbbbdad': {'a': 'aaaabbbbbdaa', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdddacadc': {'a': 'a', 'b': 'cdcb', 'c': 'aaaabbbbbddacbbbdddacadcc', 'd': 'accd'}, 'accd': {'a': 'accda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'accdaccbbbddaabcbdacbbbdbd': {'a': 'accdaccbbbddaabcbdacbbbdbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddd'}, 'aaaabbbbbdaa': {'a': 'accdaccbbbddda', 'b': 'aaaabbbbbdaab', 'c': 'aaaabbbbbdaac', 'd': 'aaaabbbbbddacbad'}, 'accdaccbbbddaabcbdaccaa': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'accdaccbbbdddaabbc', 'c': 'dacc', 'd': 'accd'}, 'acc': {'a': 'aaaba', 'b': 'accb', 'c': 'acc', 'd': 'accd'}, 'aaaabbbb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'aaaabbbbb', 'c': 'cdcb', 'd': 'accbd'}, 'aaaabbbbbb': {'a': 'cdcb', 'b': 'aaaabbbbbb', 'c': 'accdaccbbbdddaabbcc', 'd': 'aaaabbbbbd'}, 'aaaaab': {'a': 'aaca', 'b': 'aaaaabb', 'c': 'aaacbc', 'd': 'aaabd'}, 'aaacabccbb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'aaacabccbbb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbbbbbdad'}, 'cd': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}, 'accdaccbbbd': {'a': 'a', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbdd'}, 'accdaccbbbddaabb': {'a': 'a', 'b': 'accdaccbbbddaabcbb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddd'}, 'accdaccb': {'a': 'accd', 'b': 'accdaccbb', 'c': 'cdcb', 'd': 'aaabd'}, 'acbbd': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddd'}, 'aaacbc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'aacbcc', 'd': 'aaabd'}, 'accdaccbbbdddad': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddaad'}, 'accdaccbbbddaabcbdacca': {'a': 'accdaccbbbddaabcbdaccaa', 'b': 'accdaccbbbddaabcbdaccab', 'c': 'dacc', 'd': 'aaabd'}, 'aaaca': {'a': 'aaaa', 'b': 'aaacab', 'c': 'aaacac', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbb': {'a': 'aaaabbbbbddacbbbdddacbba', 'b': 'aaaabbbbbddacbbbdddacbbb', 'c': 'aaaabbbbbddacbbbdddacbbc', 'd': 'aaaabbbbbddacbbbdddacbbd'}, 'accdaccbbbdddddcc': {'a': 'accdac', 'b': 'acbb', 'c': 'accdaccbbbdddddccc', 'd': 'accd'}, 'aaaab': {'a': 'a', 'b': 'aaaabb', 'c': 'aaacbc', 'd': 'aaabd'}, 'aaaabbbbbddacbbbbbbbd': {'a': 'aaaabbbbbddacbbbbbbbda', 'b': 'aaaabbbbbddacbbbbbbbdb', 'c': 'aaaabbbbbdb', 'd': 'aaaabbbbbddacbbbbbd'}, 'accdaccbbbdddaaa': {'a': 'accdaccbbbdddaaa', 'b': 'accdaccbbbdddaa', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbdddaaad'}, 'aaaabbbbbddaccab': {'a': 'aaaba', 'b': 'aaaabbbbbddacbcb', 'c': 'accdaccb', 'd': 'aaaabbbbbddaccabd'}, 'aaaaaccbdc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accdaccbbbdddddcc', 'd': 'accd'}, 'accdaccbbbdddaabbc': {'a': 'accda', 'b': 'accdaccbbbddaabcbdacbcb', 'c': 'accdaccbbbdddaabbcc', 'd': 'aaabd'}, 'dac': {'a': 'aaa', 'b': 'dacb', 'c': 'dacc', 'd': 'accd'}, 'accdaccbbbddaabcbdacc': {'a': 'accdaccbbbddaabcbdacca', 'b': 'accdaccbbbddaabcbdaccb', 'c': 'aaacac', 'd': 'accdaccbbbddaabcbdaccd'}, 'accdaccbbbddaabcbdacbccca': {'a': 'cdcb', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdacbcccac', 'd': 'cdcb'}, 'aaaabbbbbdaac': {'a': 'accdaccbbbddaabcbda', 'b': 'aaaabbbbbddacbbbbbbbdaadacb', 'c': 'accdaccbbbddaabcbdacc', 'd': 'aaaabbbbbddacbad'}, 'aacbcc': {'a': 'aacbcca', 'b': 'aacbccb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'cdcb'}, 'aaaabbbbbddacbbbdddacbbbb': {'a': 'aaaabbbbbddacbbbdddacbbbba', 'b': 'aaaabbbbbddacbbbb', 'c': 'accdaccbbb', 'd': 'aaaabbbbbddacbbbbbd'}, 'aaaabbbbbddacbbbbbdaccd': {'a': 'accdaccbbbddaabcbdaccaa', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaaabbbbbdaabd'}, 'accdaccbbbdd': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddd'}, 'aaacac': {'a': 'accdaccbbbddaabcbdacca', 'b': 'aaacb', 'c': 'aaacac', 'd': 'aaabd'}, 'aaacabccbbbda': {'a': 'aaaabbbbbdaa', 'b': 'accd', 'c': 'aaaabbbbbddacbbbbbdac', 'd': 'aaacabccbbbdad'}, 'cdc': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}, 'accdaccbbbdddaabc': {'a': 'aaca', 'b': 'accdaccbbbddaabcbdaaabb', 'c': 'accdaccbbbdddaabcc', 'd': 'aaabd'}, 'ac': {'a': 'aaaba', 'b': 'acb', 'c': 'acc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaacb': {'a': 'a', 'b': 'aaacbb', 'c': 'aaacbc', 'd': 'accdaccbbbdd'}, 'aaacabcc': {'a': 'cdcb', 'b': 'aaacabccb', 'c': 'aaacabcc', 'd': 'cdcb'}, 'accdaccbbbddaabcbdaccab': {'a': 'aaab', 'b': 'accdaccbbbddaabcbdaccabb', 'c': 'cdcb', 'd': 'aaabd'}, 'aaacbb': {'a': 'a', 'b': 'accdaccbbbddaabcbdacbbbb', 'c': 'accdaccb', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdd': {'a': 'aaaabbbbbddacbbbdda', 'b': 'aaaabbbbbddacbbbddb', 'c': 'aaaabbbbbddacbbbddc', 'd': 'aaaabbbbbddacbbbddd'}, 'aacbcca': {'a': 'accdaccbbbddaabcbdacbccca', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdacbcccac', 'd': 'cdcb'}, 'aaaaacbaab': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdaccabb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaabd'}, 'accdaccbbbddaabcbdacbbbdac': {'a': 'accdaccbbbddda', 'b': 'aaaabbbbbddacb', 'c': 'accdaccbbbddaabcbdacc', 'd': 'accdaccbbbddaabcbd'}, 'aaaabbbbbddacbbbddab': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'accdaccbbbddaabcbb', 'c': 'accdaccbbbdddaabbc', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbdddc': {'a': 'accda', 'b': 'accdaccbbb', 'c': 'aacbcb', 'd': 'accd'}, 'aaacabccbbbdbdd': {'a': 'aaacabccbbbdbdda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbbbbbdad'}, 'accdaccbbbddaabcbd': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddaabcbdd'}, 'accdaccbbbdddd': {'a': 'accdaccbbbdddda', 'b': 'accdaccbbbddddb', 'c': 'aaabd', 'd': 'accdaccbbbddddd'}, 'aaaabbbbbddacbbbdddacadcc': {'a': 'accdac', 'b': 'acb', 'c': 'accdaccbbbddaabcbdacbcc', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbbdd': {'a': 'aaaabbbbbddacbbbdddacbbda', 'b': 'aaaabbbbbddbd', 'c': 'aaaabbbbbddacbbbdddacbbddc', 'd': 'aaaabbbbbddacbbbdddacbbdd'}, 'accdaccbbbdddddc': {'a': 'a', 'b': 'aacbcb', 'c': 'accdaccbbbdddddcc', 'd': 'aaabd'}, 'accdaccbbbddaabcbdacbbbd': {'a': 'accdaccbbbddaabcbdacbbbda', 'b': 'accdaccbbbddaabcbdacbbbdb', 'c': 'accdaccbbbdddaabbc', 'd': 'aaaabbbbbddd'}, 'accdaccbbbddaaa': {'a': 'accdaccbbbdddaaa', 'b': 'accdaccbbbddaaab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddaaad'}, 'accdaccbbbddaabcbdaaba': {'a': 'da', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'dacc', 'd': 'accd'}, 'aaaabbbbbdbd': {'a': 'accd', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdacbbbdbd'}, 'aaaabbbbbddacbbbbbbbdaada': {'a': 'accdaccbbbddda', 'b': 'accd', 'c': 'aaaabbbbbddacbbbbbbbdaadac', 'd': 'aaabd'}, 'aaaabbbbbddaccbcd': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddaabdd'}, 'accdaccbbbddaabcbdaabbd': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbdd'}, 'aaaabbbbbddacbbbbbdaccb': {'a': 'a', 'b': 'daccbb', 'c': 'aaaabbbbbddacbbbbbdaccbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbdda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddab', 'c': 'aaaabbbbbddac', 'd': 'aaaabbbbbddad'}, 'aaaabbbbbddacbbbdb': {'a': 'accd', 'b': 'aaaabbbbbddacbbbbbbbdb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbdbd'}, 'aaaabbbbbddacbbbdddacbbdab': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'accdaccbbbdddaabccb', 'c': 'accdaccbbbddaabcbdacbc', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddacbbbdddacd': {'a': 'accdaccbbbddda', 'b': 'accd', 'c': 'aaaba', 'd': 'accdaccbbbddd'}, 'accda': {'a': 'accda', 'b': 'cdcb', 'c': 'accdac', 'd': 'cdcb'}, 'aaaabbbbbddaccabd': {'a': 'accdaccbbbdddaabba', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaad'}, 'aaaabbbbbddacbba': {'a': 'accdaccbbbddaabcbdaccaa', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaaabbbbbddacbbac', 'd': 'accdaccbbbddaabcbdaccd'}, 'accdaccbbbdddaabcc': {'a': 'aaaba', 'b': 'accdaccbbbdddaabccb', 'c': 'accdaccbbbdddaabcc', 'd': 'aaabd'}, 'accdaccbbbddaabcbdacbbbb': {'a': 'aaabd', 'b': 'aaaabbbbbddacbbbb', 'c': 'accdaccbb', 'd': 'accdaccbbbddaabcbdacbbbd'}, 'accdaccbbbddaabcbda': {'a': 'accdaccbbbddaabcbdaa', 'b': 'accd', 'c': 'accdaccbbbddaabcbdac', 'd': 'accd'}, 'accdaccbbbddaabcbdaabd': {'a': 'da', 'b': 'cdcb', 'c': 'cdcb', 'd': 'aaabd'}, 'aaaabbbbbddacbbbbbbbdaa': {'a': 'aaaabbbbbdaa', 'b': 'aaaabbbbbddacbbbbbdab', 'c': 'aaaabbbbbddacbbbbbdac', 'd': 'aaaabbbbbddacbbbbbbbdaad'}, 'accdaccbbbddaabcbb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdddacbacb': {'a': 'aaaabbbbbddacbbbdddacbacba', 'b': 'aaaabbbbbddacbb', 'c': 'aaaabbbbbddacbbbdddacbacbc', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdacbbbdbda': {'a': 'aaaabbbbbddacbbbbbbbdaada', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'dacc', 'd': 'aaabd'}, 'aaaabbbbbddac': {'a': 'accdaccbbbddda', 'b': 'aaaabbbbbddacb', 'c': 'aaaabbbbbddacc', 'd': 'accdaccbbbddaabdd'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'dacc', 'd': 'accd'}, 'aaaabbbbbddacbbbda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbdab', 'c': 'aaaabbbbbddac', 'd': 'aaaabbbbbddacbbbdad'}, 'aaaabbbbbddacbbbddb': {'a': 'accd', 'b': 'accdaccbb', 'c': 'cdcb', 'd': 'aacbccbd'}, 'dacc': {'a': 'aaca', 'b': 'daccb', 'c': 'aaacac', 'd': 'aaabd'}, 'accdacc': {'a': 'accdac', 'b': 'accdaccb', 'c': 'acc', 'd': 'cdcb'}, 'accdaccbbbdddaad': {'a': 'accdaccbbbdda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaab', 'd': 'accdaccbbbddaad'}, 'accdaccbbbddddb': {'a': 'accd', 'b': 'cdcb', 'c': 'cdcb', 'd': 'aaabd'}, 'aaaabbbbbd': {'a': 'aaaabbbbbda', 'b': 'aaaabbbbbdb', 'c': 'cdcb', 'd': 'aaaabbbbbdd'}, 'aacbccbd': {'a': 'a', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbdd'}, 'accdaccbbbdddaabb': {'a': 'accdaccbbbdddaabba', 'b': 'accdaccbbbddaabcbdacbbb', 'c': 'accdaccbbbdddaabbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdddac': {'a': 'aaaabbbbbddacbbbdddaca', 'b': 'aaaabbbbbddacbbbdddacb', 'c': 'aaaabbbbbddacbbbdddac', 'd': 'aaaabbbbbddacbbbdddacd'}, 'a': {'a': 'aa', 'b': 'cdcb', 'c': 'ac', 'd': 'accd'}, 'aaaaaccb': {'a': 'aaca', 'b': 'aaaaaccbb', 'c': 'accdaccbbbdddaabcc', 'd': 'aaaaaccbd'}, 'aaaabbbbbddaccbc': {'a': 'aaaba', 'b': 'accdaccbbbdddaabccb', 'c': 'aaaabbbbbddacbbac', 'd': 'aaaabbbbbddaccbcd'}, 'aaaaa': {'a': 'accdaccbbbddaaaba', 'b': 'aaaaab', 'c': 'aaaaac', 'd': 'accd'}, 'aaaabbbbbddacb': {'a': 'aaaabbbbbddacba', 'b': 'aaaabbbbbddacbb', 'c': 'aaaabbbbbddacbc', 'd': 'accdaccbbbddd'}, 'daccbb': {'a': 'a', 'b': 'accdaccbbbddaabcbdacbbbb', 'c': 'accdaccb', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdaaab': {'a': 'accdaccbbbddaabcbda', 'b': 'accdaccbbbddaabcbdaaabb', 'c': 'accdaccbbbddaabc', 'd': 'accdaccbbbdddad'}, 'accdaccbbbddaabcbdaab': {'a': 'accdaccbbbddaabcbdaaba', 'b': 'accdaccbbbddaabcbdaabb', 'c': 'aaaba', 'd': 'accdaccbbbddaabcbdaabd'}, 'accdaccbbbddaabcbdaabba': {'a': 'aaaba', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaabbac', 'd': 'accd'}, 'accdaccbbbddaabcbdaabb': {'a': 'accdaccbbbddaabcbdaabba', 'b': 'acbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaabbd'}, 'aaaaac': {'a': 'aaaaa', 'b': 'aaaaacb', 'c': 'aaaaacc', 'd': 'aaabd'}, 'accdaccbbbddaaad': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'aaab', 'd': 'accdaccbbbddaabcbdaccd'}, 'accdaccbbbdddda': {'a': 'accdaccbbbdddaa', 'b': 'accdaccbbbdddddab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddaabdd'}, 'accdaccbbbddaabcbdaccbc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbdaccbcb', 'c': 'aacbcc', 'd': 'aaaabbbbbddacbcd'}, 'aaacabccbbbdbdac': {'a': 'aaab', 'b': 'aaaabbbbbddacbcb', 'c': 'accdaccbbbddaabcbdaccbc', 'd': 'accd'}, 'aaabd': {'a': 'aaaba', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accd'}, 'aaaabbda': {'a': 'accdaccbbbddaabcbda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'dacc', 'd': 'accd'}, 'aaaabbbbbddacbbbbbbb': {'a': 'aaaabbbbbddacbbbbbbba', 'b': 'aaaabbbbbddacbbbbbbb', 'c': 'aaaabbbbbddacbbbbbbbdb', 'd': 'aaaabbbbbddacbbbbbbbd'}, 'accdaccbb': {'a': 'cdcb', 'b': 'accdaccbbb', 'c': 'cdcb', 'd': 'accdaccbbbd'}, 'aaaabbbbbddacbbbbbbba': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'accdaccbb', 'c': 'accdaccbb', 'd': 'aaaabbbbbdbd'}, 'aaaabbbbbddacbccc': {'a': 'cdcb', 'b': 'acbb', 'c': 'aaaabbbbbddacbcccc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacbbbdddacba': {'a': 'aaaabbbbbddacbbbdddacbaa', 'b': 'aaaabbbbbddacbbbdddacbab', 'c': 'aaaabbbbbddacbbbdddacbac', 'd': 'aaaabbbbbddacbbbdddacbad'}, 'aaaabbbbbddacbbbbbd': {'a': 'aaaabbbbbddacbbbbbda', 'b': 'aaaabbbbbddacbbbbbbbdb', 'c': 'aaaabbbbbddacbbbbbdc', 'd': 'aaaabbbbbddacbbbbbd'}, 'aaaaacc': {'a': 'aaaaacca', 'b': 'aaaaaccb', 'c': 'aaacac', 'd': 'aaaabbbbbddaccabd'}, 'accdaccbbbddaabd': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddacbccccb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accdaccbbbd'}, 'accdaccbbbddaabdd': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddaabdd'}, 'accdaccbbbddaad': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'accd', 'd': 'aaabd'}, 'aaaabbbbbddacbbbbbb': {'a': 'aaaabbbbbdbd', 'b': 'aaaabbbbbddacbbbbbbb', 'c': 'aaaabbbbbddacbbbbbbbdb', 'd': 'aaaabbbbbddacbbbbbbbd'}, 'accdaccbbbddaabcbdaccd': {'a': 'accdaccbbbdddaabba', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaabd'}, 'accdaccbbbdddddccc': {'a': 'accdac', 'b': 'aacbcb', 'c': 'accdaccbbbddaabcbdacbcc', 'd': 'accd'}, 'aaaabbbbbddab': {'a': 'aaaabbbbbddaba', 'b': 'aacbcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaaabbbbbdaabd'}, 'daccb': {'a': 'a', 'b': 'daccbb', 'c': 'aaacbc', 'd': 'accdaccbbbdd'}, 'aaaabbbbbddaccb': {'a': 'aaaabbbbbddacba', 'b': 'aaaabbbbbddacbb', 'c': 'aaaabbbbbddaccbc', 'd': 'aaaabbbbbddaccbd'}, 'aaaabbbbbddacbbbbbdaccbcc': {'a': 'cdcb', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'accdaccbbbddaaababcc', 'd': 'accd'}, 'aaaabbbbbddacbbbdddaca': {'a': 'accdaccbbbdddaaa', 'b': 'accdaccbbbdddaa', 'c': 'accdaccbbbdddaa', 'd': 'aaaabbbbbddacbbbdddacad'}, 'aaaaacca': {'a': 'accdaccbbbddaabcbdacca', 'b': 'aaaaaccab', 'c': 'dacc', 'd': 'aaabd'}, 'cdcbd': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}, 'aaaabbbbbddacbbbdad': {'a': 'accdaccbbbddda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accd', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdaccabbda': {'a': 'accdaccbbbdda', 'b': 'accd', 'c': 'dacc', 'd': 'aaabd'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac', 'd': 'accd'}, 'accdaccbbbddaabcbdacbcccacc': {'a': 'cdcb', 'b': 'accdaccbbb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'cdcb'}, 'accdaccbbbddaabcbdacbbbda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbdaab', 'c': 'accdaccbbbddaabcbdacbbbdac', 'd': 'aaaabbbbbddad'}, 'aaaabbbbbddacbbbdddacbab': {'a': 'a', 'b': 'accdaccbbbddaabcbb', 'c': 'accdaccbbbdddaabbc', 'd': 'accdaccbbbdddad'}, 'aaaabbbbbddacbb': {'a': 'aaaabbbbbddacbba', 'b': 'aaaabbbbbddacbbb', 'c': 'aacbcb', 'd': 'aaaabbbbbddacbbbd'}, 'aaaabbbbbddd': {'a': 'aaaabbbbbddacbbbda', 'b': 'aaaabbbbbdbd', 'c': 'aaaabbbbbdddc', 'd': 'aaaabbbbbddd'}, 'aaaabbbbbddacbbbbbdaccbc': {'a': 'accda', 'b': 'aaaabbbbbddacbcb', 'c': 'aaaabbbbbddacbbbbbdaccbcc', 'd': 'aaabd'}, 'accdaccbbbdddaabbcc': {'a': 'cdcb', 'b': 'accdaccbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacbbbdddacbba': {'a': 'accdaccbbbddaabcbdaa', 'b': 'accdaccbbbddaabcbdaccab', 'c': 'dacc', 'd': 'aaaabbbbbddacbbbdddacbad'}, 'aaaabbbbbddacbbbbbbbda': {'a': 'aaaabbbbbddacbbbbbbbdaa', 'b': 'aacbcb', 'c': 'aaaabbbbbddacbbbbbbbdac', 'd': 'aaaabbbbbddacbbbbbbbdad'}, 'accdaccbbbddaabcbdaaabbca': {'a': 'accdaccbbbddaabcbdacbccca', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdacbccca', 'd': 'cdcb'}, 'aaaabbbbbddacbbbddda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbdddab', 'c': 'aaaabbbbbddacbbbdddac', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdac': {'a': 'da', 'b': 'accdaccbbbddaabcbdacb', 'c': 'accdaccbbbddaabcbdacc', 'd': 'aaabd'}, 'accdaccbbb': {'a': 'cdcb', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'accdaccbbbd'}, 'aaaabbbbbddacbcda': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'dacc', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbdddacbaab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddacbbbbbbbdaadacbcb': {'a': 'accd', 'b': 'aaaabbbbbddacbcb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaccabbd'}, 'aaacabc': {'a': 'accda', 'b': 'accdaccbb', 'c': 'aaacabcc', 'd': 'accd'}, 'aaaabbbbbddacbbbddc': {'a': 'aaab', 'b': 'aaaabb', 'c': 'aaaabb', 'd': 'aaaabbbbbddacbcd'}, 'aaaabbbbbddacbbbbbbbdac': {'a': 'aaab', 'b': 'aaaabbbbbddacbbbbbbbdacb', 'c': 'accdaccbbbdddaabcc', 'd': 'aaaabbd'}, 'aaaabbbbbddacbbbdddacbbddc': {'a': 'a', 'b': 'aacbcb', 'c': 'aaaabbbbbddacbbbdddacadcc', 'd': 'aaabd'}, 'accdaccbbbddddda': {'a': 'accdaccbbbdddaa', 'b': 'accdaccbbbdddddab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddaabdd'}, 'aaaabbbbbddacbcccc': {'a': 'accdaccbbbddaabcbdacbccca', 'b': 'aaaabbbbbddacbccccb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacca': {'a': 'accdaccbbbddaabcbdaa', 'b': 'aaaabbbbbddaccab', 'c': 'aaacac', 'd': 'aaabd'}, 'aaaabbbbbddacbbbbb': {'a': 'aaaabbbbbdbd', 'b': 'aaaabbbbbddacbbbbbb', 'c': 'aaaabbbbbdb', 'd': 'aaaabbbbbddacbbbbbd'}, 'aaaaaccab': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbb', 'c': 'accdaccbbbddaabcbdacbcc', 'd': 'aaaabbd'}, 'aaaabbbbbddacbbbdda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbddab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddaccbd': {'a': 'accdaccbbbdddda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaaabbbbbddaccbdc', 'd': 'aaaabbbbbddaccbd'}, 'accdaccbbbddaabcb': {'a': 'aaab', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbd'}, 'accdaccbbbddaabcbdacbcbb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaccabbd'}, 'aaaabbbbbddacbbbdddacbac': {'a': 'aaaaa', 'b': 'aaaabbbbbddacbbbdddacbacb', 'c': 'accdaccbbbddaabcbdacc', 'd': 'accdaccbbbddaabcbdaccd'}, 'accdaccbbbddaabcbdd': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdbd': {'a': 'aaaabbbbbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdacbcb': {'a': 'accd', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdacbcbd'}, 'aaaabbbbbddad': {'a': 'accdaccbbbddda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accd', 'd': 'aaaabbbbbddad'}, 'aaaabbbbbdaabd': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'accdaccbbbddaad'}, 'aaaabb': {'a': 'aaabd', 'b': 'aaaabbb', 'c': 'cdcb', 'd': 'aaaabbd'}, 'aaaabbbbbddacba': {'a': 'accdaccbbbdda', 'b': 'accd', 'c': 'dacc', 'd': 'aaaabbbbbddacbad'}, 'aaaabbbbbddacbbbdddacbbd': {'a': 'aaaabbbbbddacbbbdddacbbda', 'b': 'aaaabbbbbddacbbbdddacbbdb', 'c': 'aaaabbbbbddacbbbdddacbbdc', 'd': 'aaaabbbbbddacbbbdddacbbdd'}, 'aaacab': {'a': 'aaaba', 'b': 'acbb', 'c': 'aaacabc', 'd': 'aaabd'}, 'accdaccbbbddaabcbdaaabb': {'a': 'a', 'b': 'accdaccbbbddaabcbb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddaabcbdd'}, 'accdaccbbbddaaababcc': {'a': 'cdcb', 'b': 'accdaccbbbddaaababccb', 'c': 'accdaccbbbddaabcbdacbcccacc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacbbbbbdab': {'a': 'accdaccbbbddaabcbdaabba', 'b': 'accdaccbbb', 'c': 'cdcb', 'd': 'aaaabbbbbddaccbcd'}, 'dacbc': {'a': 'accdac', 'b': 'accdaccbbbdddaabbcc', 'c': 'dacbcc', 'd': 'accd'}, 'aaaabbbbbdaab': {'a': 'a', 'b': 'aacbcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'aaaabbbbbdaabd'}, 'aaaabbbbbddacbbbdddacbbdb': {'a': 'accdaccbbbddaabcbdaabba', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'acbbd'}, 'accdaccbbbddda': {'a': 'accdaccbbbdddaa', 'b': 'accdaccbbbdddab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbdddad'}, 'aaaabbbbbddacbcb': {'a': 'accd', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdd'}, 'accdaccbbbdddaabccb': {'a': 'aaab', 'b': 'accdaccbbbddaabcbdacbbb', 'c': 'accdaccb', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabcbdacbbb': {'a': 'aaabd', 'b': 'accdaccbbbddaabcbdacbbbb', 'c': 'accdaccbbbdddaabbcc', 'd': 'accdaccbbbddaabcbdacbbbd'}, 'aaaaacb': {'a': 'aaaaacba', 'b': 'aaaabbbbbddacbbbbbdaccb', 'c': 'accdaccbbbdddaabcc', 'd': 'accdaccbbbdd'}, 'accdaccbbbddaaaba': {'a': 'accdaccbbbddaaa', 'b': 'accdaccbbbddaaabab', 'c': 'accdaccbbbddaa', 'd': 'aaabd'}, 'aacb': {'a': 'a', 'b': 'accdaccbbbddaabb', 'c': 'aacbc', 'd': 'acbbd'}, 'accdaccbbbddaabcbdacbccc': {'a': 'accdaccbbbddaabcbdacbccca', 'b': 'acbb', 'c': 'accdaccbbbddaabcbdacbccc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aacbc': {'a': 'accdacc', 'b': 'aacbcb', 'c': 'aacbcc', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbbb': {'a': 'aaaabbbbbddacbba', 'b': 'aaaabbbbbddacbbbdddacbbbb', 'c': 'aaaabbbbbddacbccccb', 'd': 'aaaabbbbbddacbbbd'}, 'aaaabbbbb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'aaaabbbbbb', 'c': 'cdcb', 'd': 'aaaabbbbbd'}, 'aaaabbbbbddacbbbbbbbdaadacbc': {'a': 'accdacc', 'b': 'aaaabbbbbddacbbbbbbbdaadacbcb', 'c': 'aaaabbbbbddacbcc', 'd': 'aaabd'}, 'aaacabccbbb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'aaaabbbbbb', 'c': 'cdcb', 'd': 'aaacabccbbbd'}, 'aaaabbbbbddacbcc': {'a': 'accda', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'aaaabbbbbddacbccc', 'd': 'accd'}, 'aaaaaccbd': {'a': 'accdaccbbbddda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'aaaaaccbdc', 'd': 'accdaccbbbddd'}, 'accdaccbbbddaabc': {'a': 'a', 'b': 'accdaccbbbddaabcb', 'c': 'acc', 'd': 'aaabd'}, 'aaaabbbbbddacbbbdddacbd': {'a': 'aaaabbbbbddacbbbdddacbda', 'b': 'aaaabbbbbddacbbbdddacbbbba', 'c': 'aaacbc', 'd': 'accdaccbbbddddd'}, 'aaaabbbbbddacbbbdddacbbbbac': {'a': 'accda', 'b': 'accdaccbbbddaabcbdacbcbb', 'c': 'aaaabbbbbddacbbbdddacbbbbacc', 'd': 'accd'}, 'aaaabbbbbddacbbbbbbbdaadac': {'a': 'accdaccbbbddaabcbda', 'b': 'aaaabbbbbddacbbbbbbbdaadacb', 'c': 'aaaaacc', 'd': 'aaabd'}, 'accdaccbbbddaabcbdaaa': {'a': 'accdaccbbbddaaa', 'b': 'accdaccbbbddaabcbdaaab', 'c': 'accdaccbbbddaa', 'd': 'accdaccbbbddaabcbdaabd'}, 'aaaabbbbbda': {'a': 'aaaabbbbbdaa', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accdaccbbbdddaabcc', 'd': 'aaaabbbbbddaccbcd'}, 'aaaabbbbbddacbbbdddacbad': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accd', 'd': 'accdaccbbbddaad'}, 'accdaccbbbdddab': {'a': 'aaaabbda', 'b': 'aacbcb', 'c': 'accda', 'd': 'aaabd'}, 'aaaabbbbbddacbbbd': {'a': 'aaaabbbbbddacbbbda', 'b': 'aaaabbbbbddacbbbdb', 'c': 'accdaccbbbddaabcbdaccab', 'd': 'aaaabbbbbddacbbbdd'}, 'aaaaabb': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbb', 'c': 'cdcb', 'd': 'acbbd'}, 'aaaabbbbbddacbbbdddacbbbba': {'a': 'a', 'b': 'cdcb', 'c': 'aaaabbbbbddacbbbdddacbbbbac', 'd': 'aaaabbbbbddaccbcd'}, 'accdaccbbbddaabcbdaccabb': {'a': 'accd', 'b': 'acbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdaccabbd'}, 'accbd': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbdd'}, 'dd': {'a': 'accdaccbbbddaabcbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'acbbd'}, 'accdaccbbbddaaab': {'a': 'accdaccbbbddaaaba', 'b': 'accdaccbbbddaabb', 'c': 'dacc', 'd': 'accdaccbbbddaabdd'}, 'accdaccbbbdddaaad': {'a': 'accdaccbbbdda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'a', 'd': 'accdaccbbbddaad'}, 'aaaabbbbbddacbbbbbbbdb': {'a': 'cdcb', 'b': 'aaaabbbbbddacbbbbbbbdb', 'c': 'cdcb', 'd': 'aaaabbbbbddacbbbbbbbdbd'}, 'aaaabbbbbddacbbbdddacbbc': {'a': 'aaaba', 'b': 'accdaccbbbddaabcbb', 'c': 'aacbcb', 'd': 'accdaccbbbddaabcbdaccabbd'}, 'accdaccbbbddaaababccb': {'a': 'accdaccbbbddaabcbdaaabbc', 'b': 'aaacabccbb', 'c': 'cdcb', 'd': 'accdaccbbbd'}, 'accdaccbbbddaabcbdacb': {'a': 'aa', 'b': 'accdaccbbbddaabcbdacbb', 'c': 'accdaccbbbddaabcbdacbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbc': {'a': 'aaaba', 'b': 'aaaabbbbbddacbcb', 'c': 'aaaabbbbbddacbcc', 'd': 'aaaabbbbbddacbcd'}, 'accdaccbbbddaabcbdacbbbdb': {'a': 'accd', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'accdaccbbbddaabcbdacbbbdbd'}, 'aaaabbbbbddacbbbdddab': {'a': 'accdaccbbbddda', 'b': 'accdaccbbbddaabb', 'c': 'aaaab', 'd': 'accdaccbbbdd'}, 'aaacabccbbbdbd': {'a': 'aaacabccbbbdbda', 'b': 'cdcb', 'c': 'cdcb', 'd': 'aaacabccbbbdbdd'}, 'aaaabbbbbddacbbbdddacbbbbacc': {'a': 'accd', 'b': 'aaaabbbbbddacbccccb', 'c': 'aaaabbbbbddacbbbdddacbbbbaccc', 'd': 'accd'}, 'aaaabbbbbddacbbbdddacbbda': {'a': 'accdaccbbbdddaa', 'b': 'aaaabbbbbddacbbbdddacbbdab', 'c': 'accdaccbbbdddaa', 'd': 'aaaabbbbbddad'}, 'aaaba': {'a': 'a', 'b': 'cdcb', 'c': 'acc', 'd': 'accdaccbbbddaabcbdaaabbc'}, 'aaaabbbbbddacc': {'a': 'aaaabbbbbddacca', 'b': 'aaaabbbbbddaccb', 'c': 'accdaccbbbddaabcbdacc', 'd': 'aaaabbbbbddaccd'}, 'accdaccbbbb': {'a': 'cdcb', 'b': 'accdaccbbbb', 'c': 'cdcb', 'd': 'aacbccbd'}, 'dacbcc': {'a': 'cdcb', 'b': 'accdaccbbb', 'c': 'aaaabbbbbddacbccc', 'd': 'cdcb'}, 'aaaabbbbbddacbbbbbdac': {'a': 'accdaccbbbddaabcbdaccaa', 'b': 'aaacbb', 'c': 'aaaabbbbbddacbbbbbdacc', 'd': 'aaaabbbbbddaccbcd'}, 'accdaccbbbddaabcbdaccabbd': {'a': 'accdaccbbbddaabcbdaccabbda', 'b': 'cdcb', 'c': 'accdaccbbbddaabcbdaaabbc', 'd': 'accdaccbbbddd'}, 'aaaabbbbbddacbbbdddacadd': {'a': 'accdaccbbbdda', 'b': 'cdcb', 'c': 'accd', 'd': 'aaabd'}, 'accdaccbbbddaa': {'a': 'accdaccbbbddaaa', 'b': 'accdaccbbbddaab', 'c': 'accdaccbbbdddaa', 'd': 'accdaccbbbddaad'}, 'aaaaaccbb': {'a': 'a', 'b': 'daccbb', 'c': 'aaaaacbaab', 'd': 'aaaabbbbbddaccbd'}, 'aaaabbbbbddacbbbdddacbacba': {'a': 'accdaccbbbddaabcbda', 'b': 'accd', 'c': 'accdaccbbbdddaabcc', 'd': 'accdaccbbbddaabcbdaccd'}, 'aaaabbbbbddaba': {'a': 'accdaccbbbdddaabba', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accdaccbbbddaabc', 'd': 'accd'}, 'accdaccbbbddaabcbdaccb': {'a': 'aaca', 'b': 'daccbb', 'c': 'accdaccbbbddaabcbdaccbc', 'd': 'accdaccbbbddd'}, 'accdaccbbbddd': {'a': 'accdaccbbbddda', 'b': 'accdaccbbbddaabcbdaaabbc', 'c': 'accd', 'd': 'accdaccbbbdddd'}, 'c': {'a': 'cdcb', 'b': 'cdcb', 'c': 'cdcb', 'd': 'cdcb'}}
Explanation matches RNN: 42.96
RNN matches ground truth: 100.0
Explanation matches ground truth: 42.96
Lstar matches RNN: 99.95
Lstar matches ground truth: 99.95
target query                                   explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  true  ((F (a | (b | c))) -> (X (X (a | (b | c)))))  False          100.0      100.0              42.96                              42.96       401.098142   2.029027e+58         2.416435  [b, , a, c, acbd, ba, aaaccbd, ac, ad, db, ab,...          0         0         5          309                    99.95                                    99.95              30.754097         True     0.05   0.05
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12035608291625977  s
No positive counterexample found
EQ test took  0.0033555030822753906  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.13021326065063477  s
EQ test took  0.0016586780548095703  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17838072776794434  s
No positive counterexample found
EQ test took  0.015604496002197266  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3582944869995117  s
No positive counterexample found
EQ test took  0.016102313995361328  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0101447105407715  s
EQ test took  0.03191852569580078  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (a | (b | c)))

Time taken to extract ltl: 1.8731849193572998
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.01074981689453125
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 70.87
RNN matches ground truth: 100.0
Explanation matches ground truth: 70.87
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (a | (b | c)))   True          100.0      100.0              70.87                              70.87         1.873185          None            None     [a, , c, b]          0         0         3            2                    100.0                                    100.0                0.01075         True      0.5    0.5
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12098217010498047  s
No positive counterexample found
EQ test took  0.005005598068237305  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12797141075134277  s
EQ test took  0.0016777515411376953  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1874392032623291  s
No positive counterexample found
EQ test took  0.004944562911987305  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35026049613952637  s
No positive counterexample found
EQ test took  0.020844697952270508  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0940449237823486  s
No positive counterexample found
EQ test took  0.032262325286865234  s
new counterexample: ddb  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'ddb']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F ((x2 | x1) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.666121244430542  s
EQ test took  0.04603266716003418  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.667283535003662
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02830958366394043
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.667284          None            None  [b, , a, c, ddb]          0         0         4            2                    100.0                                    100.0                0.02831         True      0.5   0.25
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12045431137084961  s
No positive counterexample found
EQ test took  0.004500150680541992  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12299561500549316  s
EQ test took  0.001566171646118164  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18759918212890625  s
No positive counterexample found
EQ test took  0.014224767684936523  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.3551945686340332  s
No positive counterexample found
EQ test took  0.03520512580871582  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0791289806365967  s
No positive counterexample found
EQ test took  0.04031252861022949  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.5230772495269775  s
EQ test took  0.04399609565734863  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.536801099777222
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.0912015438079834
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.536801          None            None  [b, , a, c, da]          0         0         4            2                    100.0                                    100.0               0.091202         True      0.5    0.1
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12146329879760742  s
No positive counterexample found
EQ test took  0.005700826644897461  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12805891036987305  s
EQ test took  0.001611948013305664  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17058634757995605  s
No positive counterexample found
EQ test took  0.00984954833984375  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.34882211685180664  s
No positive counterexample found
EQ test took  0.023830413818359375  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.1051478385925293  s
No positive counterexample found
EQ test took  0.04051494598388672  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.5178141593933105  s
EQ test took  0.04980039596557617  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.53239107131958
overall guided extraction time took: 0.2300000000000182
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22266244888305664
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.532391          None            None  [b, , a, c, da]          0         0         4            2                    100.0                                    100.0               0.222662         True      0.5   0.05
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1160745620727539  s
No positive counterexample found
EQ test took  0.00476527214050293  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12425088882446289  s
EQ test took  0.0016367435455322266  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1746959686279297  s
No positive counterexample found
EQ test took  0.012283086776733398  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.34674930572509766  s
No positive counterexample found
EQ test took  0.021614789962768555  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.097344160079956  s
No positive counterexample found
EQ test took  0.044939279556274414  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.504096269607544  s
EQ test took  0.06885933876037598  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.526051044464111
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010270118713378906
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.526051          None            None  [b, , a, c, da]          0         0         4            2                    100.0                                    100.0                0.01027         True     0.25    0.5
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11976504325866699  s
No positive counterexample found
EQ test took  0.005637407302856445  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11859893798828125  s
EQ test took  0.00153350830078125  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18121004104614258  s
No positive counterexample found
EQ test took  0.02020263671875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3480057716369629  s
No positive counterexample found
EQ test took  0.027106285095214844  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.051947832107544  s
No positive counterexample found
EQ test took  0.05234241485595703  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.4067444801330566  s
EQ test took  0.07751131057739258  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: ~F(a)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 4.419144153594971
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.027822494506835938
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.419144          None            None  [a, , c, b, db]          0         0         4            2                    100.0                                    100.0               0.027822         True     0.25   0.25
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12482476234436035  s
No positive counterexample found
EQ test took  0.00683283805847168  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.127183198928833  s
EQ test took  0.0012705326080322266  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18043971061706543  s
No positive counterexample found
EQ test took  0.02087855339050293  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3584260940551758  s
No positive counterexample found
EQ test took  0.05837225914001465  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0499448776245117  s
No positive counterexample found
EQ test took  0.07614684104919434  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | ((F x0) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (c | (b | (F a))))
Learning took:  2.2128758430480957  s
No positive counterexample found
EQ test took  0.06819653511047363  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (x2 | (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (F (a | b))))
Learning took:  1.4609706401824951  s
No positive counterexample found
EQ test took  0.0961766242980957  s
new counterexample: ddc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db', 'ddc']



6  iteration complete



start formula depth: 7
Before normalization: (! (F ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (F (b | (a | c))))
Learning took:  2.252040386199951  s
EQ test took  0.10836100578308105  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (b | (a | c))))

Time taken to extract ltl: 8.2142915725708
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09102916717529297
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon           counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (b | (a | c))))   True          100.0      100.0              100.0                              100.0         8.214292          None            None  [c, , a, b, da, db, ddc]          0         0         4            2                    100.0                                    100.0               0.091029         True     0.25    0.1
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1145772933959961  s
No positive counterexample found
EQ test took  0.007111787796020508  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12316656112670898  s
EQ test took  0.0015778541564941406  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.16794037818908691  s
No positive counterexample found
EQ test took  0.019639253616333008  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.365527868270874  s
No positive counterexample found
EQ test took  0.04226565361022949  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.077866554260254  s
No positive counterexample found
EQ test took  0.07021641731262207  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.5311779975891113  s
EQ test took  0.0911262035369873  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.6203742027282715
overall guided extraction time took: 0.22000000000002728
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22125959396362305
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.620374          None            None  [b, , a, c, da]          0         0         4            2                    100.0                                    100.0                0.22126         True     0.25   0.05
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12512493133544922  s
No positive counterexample found
EQ test took  0.007134437561035156  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11733055114746094  s
EQ test took  0.0016016960144042969  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1794126033782959  s
No positive counterexample found
EQ test took  0.029244422912597656  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35190486907958984  s
No positive counterexample found
EQ test took  0.0665748119354248  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.061300277709961  s
No positive counterexample found
EQ test took  0.11062002182006836  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x1 | (F x2)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.8943889141082764  s
No positive counterexample found
EQ test took  0.15087294578552246  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x0 | x1) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  1.4890167713165283  s
EQ test took  0.1768643856048584  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 6.771557331085205
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010199308395385742
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         6.771557          None            None  [c, , a, b, dc, da]          0         0         4            2                    100.0                                    100.0               0.010199         True      0.1    0.5
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1235654354095459  s
No positive counterexample found
EQ test took  0.009852170944213867  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11478757858276367  s
EQ test took  0.0007584095001220703  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17690396308898926  s
No positive counterexample found
EQ test took  0.03803873062133789  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3605918884277344  s
No positive counterexample found
EQ test took  0.06409621238708496  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1353340148925781  s
No positive counterexample found
EQ test took  0.11877632141113281  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.34628963470459  s
No positive counterexample found
EQ test took  0.1384572982788086  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (x0 | (F (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.9042069911956787  s
No positive counterexample found
EQ test took  0.1842646598815918  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc', 'da']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  2.1499292850494385  s
EQ test took  0.20995545387268066  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 9.086482286453247
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02738809585571289
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         9.086482          None            None  [b, , c, a, db, dc, da]          0         0         4            2                    100.0                                    100.0               0.027388         True      0.1   0.25
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12680649757385254  s
No positive counterexample found
EQ test took  0.012979984283447266  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12131142616271973  s
EQ test took  0.0015900135040283203  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17454218864440918  s
No positive counterexample found
EQ test took  0.05454063415527344  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35492515563964844  s
No positive counterexample found
EQ test took  0.08636975288391113  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.071883201599121  s
No positive counterexample found
EQ test took  0.12274003028869629  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x1 | (F x2)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.95477557182312  s
No positive counterexample found
EQ test took  0.16178679466247559  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x0 | x1) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  1.5486218929290771  s
EQ test took  0.21965932846069336  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 7.021534442901611
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.08869099617004395
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         7.021534          None            None  [c, , a, b, dc, da]          0         0         4            2                    100.0                                    100.0               0.088691         True      0.1    0.1
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1267871856689453  s
No positive counterexample found
EQ test took  0.008465766906738281  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12512612342834473  s
EQ test took  0.0015482902526855469  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1772937774658203  s
No positive counterexample found
EQ test took  0.03769850730895996  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3597908020019531  s
No positive counterexample found
EQ test took  0.08497190475463867  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1751303672790527  s
No positive counterexample found
EQ test took  0.14171361923217773  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F ((x2 | x1) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.1656973361968994  s
EQ test took  0.2187347412109375  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.631234884262085
overall guided extraction time took: 0.21000000000003638
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.2148149013519287
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.631235          None            None  [c, , b, a, da]          0         0         4            2                    100.0                                    100.0               0.214815         True      0.1   0.05
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1263866424560547  s
No positive counterexample found
EQ test took  0.014029979705810547  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11820721626281738  s
EQ test took  0.001516103744506836  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17650532722473145  s
No positive counterexample found
EQ test took  0.041005611419677734  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35799551010131836  s
No positive counterexample found
EQ test took  0.12000703811645508  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.1143736839294434  s
No positive counterexample found
EQ test took  0.20563173294067383  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (F (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (b | (F (a | c))))
Learning took:  2.4649198055267334  s
No positive counterexample found
EQ test took  0.2575809955596924  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  1.6842045783996582  s
EQ test took  0.3270862102508545  s


epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 7.019291162490845
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010140419006347656
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         7.019291          None            None  [b, , a, c, dc, db]          0         0         4            2                    100.0                                    100.0                0.01014         True     0.05    0.5
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11111021041870117  s
No positive counterexample found
EQ test took  0.01519632339477539  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11365890502929688  s
EQ test took  0.0016133785247802734  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18722224235534668  s
No positive counterexample found
EQ test took  0.04816007614135742  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.34897875785827637  s
No positive counterexample found
EQ test took  0.15071797370910645  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0783374309539795  s
No positive counterexample found
EQ test took  0.22789669036865234  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x1 | (F x2)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.941925048828125  s
No positive counterexample found
EQ test took  0.29843664169311523  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'dc', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x0 | x1) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  1.519425868988037  s
EQ test took  0.3801689147949219  s


epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 7.431897401809692
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.027513980865478516
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         7.431897          None            None  [c, , a, b, dc, da]          0         0         4            2                    100.0                                    100.0               0.027514         True     0.05   0.25
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1254444122314453  s
No positive counterexample found
EQ test took  0.017238140106201172  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11686897277832031  s
EQ test took  0.0015943050384521484  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18121910095214844  s
No positive counterexample found
EQ test took  0.08815932273864746  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3492281436920166  s
No positive counterexample found
EQ test took  0.17492055892944336  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0430076122283936  s
No positive counterexample found
EQ test took  0.25908660888671875  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | ((F x2) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.2656359672546387  s
No positive counterexample found
EQ test took  0.327634334564209  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'dc', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  1.9217867851257324  s
EQ test took  0.4437441825866699  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: ~F(a)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 7.325104475021362
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09063315391540527
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         7.325104          None            None  [a, , c, b, dc, da]          0         0         4            2                    100.0                                    100.0               0.090633         True     0.05    0.1
target: alternating bit protocol
query: ~F(a)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11517024040222168  s
No positive counterexample found
EQ test took  0.02182602882385254  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1151273250579834  s
EQ test took  0.0015649795532226562  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1865839958190918  s
No positive counterexample found
EQ test took  0.10202527046203613  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35691261291503906  s
No positive counterexample found
EQ test took  0.18781352043151855  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x0 | x1) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.130645751953125  s
No positive counterexample found
EQ test took  0.320828914642334  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.269338846206665  s
EQ test took  0.4440455436706543  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: ~F(a)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 5.259566783905029
overall guided extraction time took: 0.22000000000002728
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22313833236694336
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(a)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         5.259567          None            None  [a, , b, c, da]          0         0         4            2                    100.0                                    100.0               0.223138         True     0.05   0.05
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1323399543762207  s
No positive counterexample found
EQ test took  0.002965688705444336  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12613272666931152  s
EQ test took  0.0015404224395751953  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18042826652526855  s
No positive counterexample found
EQ test took  0.0042724609375  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35867810249328613  s
No positive counterexample found
EQ test took  0.03018808364868164  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1872894763946533  s
No positive counterexample found
EQ test took  0.02846550941467285  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (x0 | (F x2))))
Learning formula with depth 4
learned LTL formula: (~ (b | (a | (F c))))
Learning took:  2.4013619422912598  s
No positive counterexample found
EQ test took  0.03635358810424805  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'dc', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.4321157932281494  s
EQ test took  0.04813218116760254  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 6.981341123580933
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010404348373413086
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         6.981341          None            None  [c, , b, a, dc, db]          0         0         4            2                    100.0                                    100.0               0.010404         True      0.5    0.5
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1259446144104004  s
No positive counterexample found
EQ test took  0.00426483154296875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12101244926452637  s
EQ test took  0.0015571117401123047  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18428659439086914  s
No positive counterexample found
EQ test took  0.013960599899291992  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35482120513916016  s
No positive counterexample found
EQ test took  0.03652501106262207  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'da']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (! ((F x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (F a)))
Learning took:  0.6136300563812256  s
No positive counterexample found
EQ test took  0.027285099029541016  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'da', 'b']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: (G (! ((x0 | x1) | x2)))
Learning formula with depth 4
learned LTL formula: (G (~ (c | (a | b))))
Learning took:  2.7707529067993164  s
EQ test took  0.047879695892333984  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (c | (a | b))))

Time taken to extract ltl: 4.311610698699951
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02843642234802246
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (c | (a | b))))   True          100.0      100.0              100.0                              100.0         4.311611          None            None  [c, , a, da, b]          0         0         4            2                    100.0                                    100.0               0.028436         True      0.5   0.25
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12264204025268555  s
No positive counterexample found
EQ test took  0.0045642852783203125  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12357950210571289  s
EQ test took  0.0016052722930908203  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18514728546142578  s
No positive counterexample found
EQ test took  0.014892816543579102  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3460123538970947  s
No positive counterexample found
EQ test took  0.025012493133544922  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1030511856079102  s
No positive counterexample found
EQ test took  0.03476119041442871  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  2.7494070529937744  s
EQ test took  0.04843735694885254  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 4.767746448516846
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.0910189151763916
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         4.767746          None            None  [b, , c, a, dc]          0         0         4            2                    100.0                                    100.0               0.091019         True      0.5    0.1
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12832164764404297  s
No positive counterexample found
EQ test took  0.005063295364379883  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12309694290161133  s
EQ test took  0.0015819072723388672  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1909477710723877  s
No positive counterexample found
EQ test took  0.01541280746459961  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3583071231842041  s
No positive counterexample found
EQ test took  0.02426433563232422  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0477545261383057  s
No positive counterexample found
EQ test took  0.028156042098999023  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (x0 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (c | (a | (F b))))
Learning took:  2.1476361751556396  s
No positive counterexample found
EQ test took  0.04600977897644043  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (G (! ((x1 | x2) | x0)))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  1.5538122653961182  s
EQ test took  0.058231353759765625  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 5.738706827163696
overall guided extraction time took: 0.2199999999997999
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.2229747772216797
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         5.738707          None            None  [c, , a, b, db, da]          0         0         4            2                    100.0                                    100.0               0.222975         True      0.5   0.05
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10997867584228516  s
No positive counterexample found
EQ test took  0.0046422481536865234  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.13005638122558594  s
EQ test took  0.001573324203491211  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1806964874267578  s
No positive counterexample found
EQ test took  0.012505292892456055  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.356229305267334  s
No positive counterexample found
EQ test took  0.029491662979125977  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1067862510681152  s
No positive counterexample found
EQ test took  0.04885292053222656  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.3125786781311035  s
No positive counterexample found
EQ test took  0.05349421501159668  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (x0 | (F (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.902559757232666  s
No positive counterexample found
EQ test took  0.0775904655456543  s
new counterexample: ddda  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc', 'ddda']



6  iteration complete



start formula depth: 7
Before normalization: (! (F ((x0 | x2) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (F (b | (a | c))))
Learning took:  3.5397400856018066  s
EQ test took  0.08752584457397461  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (b | (a | c))))

Time taken to extract ltl: 9.965395450592041
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010381460189819336
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon            counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (b | (a | c))))   True          100.0      100.0              100.0                              100.0         9.965395          None            None  [b, , c, a, db, dc, ddda]          0         0         4            2                    100.0                                    100.0               0.010381         True     0.25    0.5
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12635016441345215  s
No positive counterexample found
EQ test took  0.00619196891784668  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11933779716491699  s
EQ test took  0.0015931129455566406  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1851508617401123  s
No positive counterexample found
EQ test took  0.0317225456237793  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35637879371643066  s
No positive counterexample found
EQ test took  0.03277850151062012  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.066486120223999  s
No positive counterexample found
EQ test took  0.055832624435424805  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | ((F x2) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (a | (b | (F c))))
Learning took:  2.313469171524048  s
No positive counterexample found
EQ test took  0.0783689022064209  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'dc', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! ((F (x2 | x1)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.5397429466247559  s
No positive counterexample found
EQ test took  0.08202457427978516  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'dc', 'db', 'da']



6  iteration complete



start formula depth: 7
Before normalization: (G (! ((x1 | x2) | x0)))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.2473843097686768  s
EQ test took  0.09633755683898926  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 8.350430011749268
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02836441993713379
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0          8.35043          None            None  [a, , c, b, dc, db, da]          0         0         4            2                    100.0                                    100.0               0.028364         True     0.25   0.25
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11617159843444824  s
No positive counterexample found
EQ test took  0.006919384002685547  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12604832649230957  s
EQ test took  0.0015835762023925781  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.19133710861206055  s
No positive counterexample found
EQ test took  0.022635936737060547  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3606598377227783  s
No positive counterexample found
EQ test took  0.04592537879943848  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1029667854309082  s
No positive counterexample found
EQ test took  0.06717133522033691  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.3579704761505127  s
No positive counterexample found
EQ test took  0.07949352264404297  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (x0 | (F (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.9035613536834717  s
No positive counterexample found
EQ test took  0.09503984451293945  s
new counterexample: dda  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc', 'dda']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x1 | (x0 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (b | (a | c))))
Learning took:  3.10009765625  s
EQ test took  0.10761404037475586  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (b | (a | c))))

Time taken to extract ltl: 9.696409940719604
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09125041961669922
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon           counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (b | (a | c))))   True          100.0      100.0              100.0                              100.0          9.69641          None            None  [b, , c, a, db, dc, dda]          0         0         4            2                    100.0                                    100.0                0.09125         True     0.25    0.1
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11486411094665527  s
No positive counterexample found
EQ test took  0.008823394775390625  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12605762481689453  s
EQ test took  0.001592874526977539  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18508315086364746  s
No positive counterexample found
EQ test took  0.0357053279876709  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3581702709197998  s
No positive counterexample found
EQ test took  0.0396733283996582  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0438032150268555  s
No positive counterexample found
EQ test took  0.0832512378692627  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (b | (c | (F a))))
Learning took:  2.347247362136841  s
No positive counterexample found
EQ test took  0.0873405933380127  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'da', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x1 | x0) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  2.3604953289031982  s
EQ test took  0.10867500305175781  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 6.910589933395386
overall guided extraction time took: 0.2300000000000182
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22202563285827637
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0          6.91059          None            None  [a, , c, b, da, dc]          0         0         4            2                    100.0                                    100.0               0.222026         True     0.25   0.05
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11941838264465332  s
No positive counterexample found
EQ test took  0.007462263107299805  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1186361312866211  s
EQ test took  0.0016436576843261719  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1829545497894287  s
No positive counterexample found
EQ test took  0.03789019584655762  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35573625564575195  s
No positive counterexample found
EQ test took  0.05508780479431152  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1297240257263184  s
No positive counterexample found
EQ test took  0.11784577369689941  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.3050034046173096  s
No positive counterexample found
EQ test took  0.12862038612365723  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (G (! ((x0 | x2) | x1)))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  1.819444179534912  s
EQ test took  0.1723318099975586  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 6.562246561050415
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010395050048828125
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         6.562247          None            None  [b, , c, a, db, da]          0         0         4            2                    100.0                                    100.0               0.010395         True      0.1    0.5
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.127180814743042  s
No positive counterexample found
EQ test took  0.00881338119506836  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12090015411376953  s
EQ test took  0.0015721321105957031  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.16967201232910156  s
No positive counterexample found
EQ test took  0.038774728775024414  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.34093475341796875  s
No positive counterexample found
EQ test took  0.07291936874389648  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0458276271820068  s
No positive counterexample found
EQ test took  0.12706303596496582  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | ((F x0) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (c | (b | (F a))))
Learning took:  2.1908915042877197  s
No positive counterexample found
EQ test took  0.15011239051818848  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (x2 | (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (F (a | b))))
Learning took:  1.4751360416412354  s
No positive counterexample found
EQ test took  0.18567705154418945  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db', 'dc']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  3.2570080757141113  s
EQ test took  0.21535181999206543  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 9.538169860839844
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.027698040008544922
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0          9.53817          None            None  [c, , a, b, da, db, dc]          0         0         4            2                    100.0                                    100.0               0.027698         True      0.1   0.25
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.118408203125  s
No positive counterexample found
EQ test took  0.009691238403320312  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1276566982269287  s
EQ test took  0.0015773773193359375  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18062758445739746  s
No positive counterexample found
EQ test took  0.05090665817260742  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.36397886276245117  s
No positive counterexample found
EQ test took  0.07389497756958008  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0997648239135742  s
No positive counterexample found
EQ test took  0.13413214683532715  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.551258087158203  s
EQ test took  0.20610976219177246  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.925089120864868
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09072208404541016
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.925089          None            None  [b, , a, c, da]          0         0         4            2                    100.0                                    100.0               0.090722         True      0.1    0.1
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11123824119567871  s
No positive counterexample found
EQ test took  0.014869928359985352  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12073540687561035  s
EQ test took  0.001558542251586914  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18573379516601562  s
No positive counterexample found
EQ test took  0.05509757995605469  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.350022554397583  s
No positive counterexample found
EQ test took  0.10380196571350098  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.074202537536621  s
No positive counterexample found
EQ test took  0.15756702423095703  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | ((F x0) | x1)))
Learning formula with depth 4
learned LTL formula: (~ (c | (b | (F a))))
Learning took:  2.2184603214263916  s
No positive counterexample found
EQ test took  0.18537592887878418  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (x2 | (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (F (a | b))))
Learning took:  1.453587293624878  s
No positive counterexample found
EQ test took  0.23471784591674805  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'da', 'db', 'dc']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  3.2639708518981934  s
EQ test took  0.2629384994506836  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 9.803665161132812
overall guided extraction time took: 0.21000000000003638
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.21616482734680176
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         9.803665          None            None  [c, , a, b, da, db, dc]          0         0         4            2                    100.0                                    100.0               0.216165         True      0.1   0.05
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1233668327331543  s
No positive counterexample found
EQ test took  0.012847423553466797  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12418842315673828  s
EQ test took  0.00156402587890625  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18224525451660156  s
No positive counterexample found
EQ test took  0.055486202239990234  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35887742042541504  s
No positive counterexample found
EQ test took  0.1336963176727295  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1449663639068604  s
No positive counterexample found
EQ test took  0.20970606803894043  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F ((x2 | x1) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.1591334342956543  s
EQ test took  0.3060126304626465  s


epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 4.821028470993042
overall guided extraction time took: 0.010000000000218279
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010370016098022461
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.821028          None            None  [c, , b, a, da]          0         0         4            2                    100.0                                    100.0                0.01037         True     0.05    0.5
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1101837158203125  s
No positive counterexample found
EQ test took  0.01649188995361328  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12216567993164062  s
EQ test took  0.0016546249389648438  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17893314361572266  s
No positive counterexample found
EQ test took  0.054651737213134766  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35282254219055176  s
No positive counterexample found
EQ test took  0.14314031600952148  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.1129074096679688  s
No positive counterexample found
EQ test took  0.2192854881286621  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (F (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (b | (F (a | c))))
Learning took:  2.455479145050049  s
No positive counterexample found
EQ test took  0.2964355945587158  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'dc', 'db']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  1.6691524982452393  s
EQ test took  0.3688814640045166  s


epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 7.110958576202393
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.027570247650146484
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         7.110959          None            None  [b, , a, c, dc, db]          0         0         4            2                    100.0                                    100.0                0.02757         True     0.05   0.25
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12621736526489258  s
No positive counterexample found
EQ test took  0.014999151229858398  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1228632926940918  s
EQ test took  0.0016183853149414062  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1824812889099121  s
No positive counterexample found
EQ test took  0.0998685359954834  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.36945557594299316  s
No positive counterexample found
EQ test took  0.20757222175598145  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1399447917938232  s
No positive counterexample found
EQ test took  0.2698216438293457  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x1)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.1393446922302246  s
No positive counterexample found
EQ test took  0.32227015495300293  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x1 | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  1.3609366416931152  s
EQ test took  0.43259429931640625  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: ~F(b)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 6.7991039752960205
overall guided extraction time took: 0.07999999999992724
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.0888667106628418
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         6.799104          None            None  [c, , b, a, db, dc]          0         0         4            2                    100.0                                    100.0               0.088867         True     0.05    0.1
target: alternating bit protocol
query: ~F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10911679267883301  s
No positive counterexample found
EQ test took  0.02124500274658203  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12507891654968262  s
EQ test took  0.001634836196899414  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17458462715148926  s
No positive counterexample found
EQ test took  0.09317851066589355  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.34223151206970215  s
No positive counterexample found
EQ test took  0.20488953590393066  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1729540824890137  s
No positive counterexample found
EQ test took  0.314572811126709  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (F ((x2 | x1) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  2.1046011447906494  s
EQ test took  0.4342386722564697  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: ~F(b)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 5.106019735336304
overall guided extraction time took: 0.209999999999809
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.21763324737548828
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(b)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0          5.10602          None            None  [c, , b, a, da]          0         0         4            2                    100.0                                    100.0               0.217633         True     0.05   0.05
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11233639717102051  s
No positive counterexample found
EQ test took  0.003856658935546875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1245114803314209  s
EQ test took  0.0015444755554199219  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18173861503601074  s
No positive counterexample found
EQ test took  0.017564058303833008  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.33452773094177246  s
No positive counterexample found
EQ test took  0.020833253860473633  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1358373165130615  s
No positive counterexample found
EQ test took  0.0366363525390625  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x1)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.1626017093658447  s
EQ test took  0.04212808609008789  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (a | (c | (F b))))

Time taken to extract ltl: 4.183606863021851
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010385751724243164
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 94.7
RNN matches ground truth: 100.0
Explanation matches ground truth: 94.7
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (a | (c | (F b))))   True          100.0      100.0               94.7                               94.7         4.183607          None            None  [c, , b, a, db]          0         0         4            2                    100.0                                    100.0               0.010386         True      0.5    0.5
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1282968521118164  s
No positive counterexample found
EQ test took  0.003647327423095703  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1193385124206543  s
EQ test took  0.0015740394592285156  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18521428108215332  s
No positive counterexample found
EQ test took  0.018880367279052734  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3597745895385742  s
No positive counterexample found
EQ test took  0.030725479125976562  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0680806636810303  s
No positive counterexample found
EQ test took  0.030848979949951172  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.5398976802825928  s
EQ test took  0.0470125675201416  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 4.542186975479126
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02820730209350586
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.542187          None            None  [a, , c, b, db]          0         0         4            2                    100.0                                    100.0               0.028207         True      0.5   0.25
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12640833854675293  s
No positive counterexample found
EQ test took  0.004764080047607422  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11680412292480469  s
EQ test took  0.001581430435180664  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18871831893920898  s
No positive counterexample found
EQ test took  0.019729137420654297  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35801267623901367  s
No positive counterexample found
EQ test took  0.023828744888305664  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1044223308563232  s
No positive counterexample found
EQ test took  0.03270149230957031  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x1 | (F (x0 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (b | (F (a | c))))
Learning took:  2.4966940879821777  s
EQ test took  0.04402971267700195  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (b | (F (a | c))))

Time taken to extract ltl: 4.525752305984497
overall guided extraction time took: 0.09000000000014552
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09125375747680664
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 94.15
RNN matches ground truth: 100.0
Explanation matches ground truth: 94.15
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (b | (F (a | c))))   True          100.0      100.0              94.15                              94.15         4.525752          None            None  [b, , c, a, da]          0         0         4            2                    100.0                                    100.0               0.091254         True      0.5    0.1
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1209099292755127  s
No positive counterexample found
EQ test took  0.00523066520690918  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12435770034790039  s
EQ test took  0.0015702247619628906  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1787734031677246  s
No positive counterexample found
EQ test took  0.021394014358520508  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.36513280868530273  s
No positive counterexample found
EQ test took  0.031447649002075195  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0672438144683838  s
No positive counterexample found
EQ test took  0.0374598503112793  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (x0 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (c | (a | (F b))))
Learning took:  2.135422468185425  s
No positive counterexample found
EQ test took  0.04945564270019531  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  1.9360253810882568  s
EQ test took  0.053481101989746094  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 6.137983083724976
overall guided extraction time took: 0.209999999999809
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.21664118766784668
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         6.137983          None            None  [c, , a, b, db, dc]          0         0         4            2                    100.0                                    100.0               0.216641         True      0.5   0.05
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11246299743652344  s
No positive counterexample found
EQ test took  0.005213260650634766  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11724042892456055  s
EQ test took  0.00156402587890625  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18616557121276855  s
No positive counterexample found
EQ test took  0.0348353385925293  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3545417785644531  s
No positive counterexample found
EQ test took  0.0347132682800293  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1200292110443115  s
No positive counterexample found
EQ test took  0.048491477966308594  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.3186471462249756  s
No positive counterexample found
EQ test took  0.06203460693359375  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (x0 | (F (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.8666307926177979  s
No positive counterexample found
EQ test took  0.07090401649475098  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc', 'da']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  2.1049108505249023  s
EQ test took  0.08666872978210449  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 8.535853862762451
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010360956192016602
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         8.535854          None            None  [b, , c, a, db, dc, da]          0         0         4            2                    100.0                                    100.0               0.010361         True     0.25    0.5
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12593865394592285  s
No positive counterexample found
EQ test took  0.004962444305419922  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11780881881713867  s
EQ test took  0.0016410350799560547  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17526578903198242  s
No positive counterexample found
EQ test took  0.013267278671264648  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3470156192779541  s
No positive counterexample found
EQ test took  0.03509807586669922  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0355706214904785  s
No positive counterexample found
EQ test took  0.05497932434082031  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! (x0 | (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  2.507725238800049  s
EQ test took  0.08102798461914062  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 4.5085179805755615
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02831745147705078
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         4.508518          None            None  [a, , c, b, db]          0         0         4            2                    100.0                                    100.0               0.028317         True     0.25   0.25
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1274428367614746  s
No positive counterexample found
EQ test took  0.006792306900024414  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1165914535522461  s
EQ test took  0.0015714168548583984  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17867159843444824  s
No positive counterexample found
EQ test took  0.03093743324279785  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.34987330436706543  s
No positive counterexample found
EQ test took  0.041910648345947266  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.1455128192901611  s
No positive counterexample found
EQ test took  0.07447075843811035  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x0 | (x2 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.316450834274292  s
No positive counterexample found
EQ test took  0.06902432441711426  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (x0 | (F (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (~ (a | (F (b | c))))
Learning took:  1.8684406280517578  s
No positive counterexample found
EQ test took  0.08417797088623047  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'db', 'dc', 'da']



6  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  2.0949902534484863  s
EQ test took  0.10000872611999512  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 8.618738651275635
overall guided extraction time took: 0.08999999999991815
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09095072746276855
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon          counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         8.618739          None            None  [b, , c, a, db, dc, da]          0         0         4            2                    100.0                                    100.0               0.090951         True     0.25    0.1
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1327064037322998  s
No positive counterexample found
EQ test took  0.009371042251586914  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12530207633972168  s
EQ test took  0.0016605854034423828  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18309426307678223  s
No positive counterexample found
EQ test took  0.021130084991455078  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35788559913635254  s
No positive counterexample found
EQ test took  0.049407958984375  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0239200592041016  s
No positive counterexample found
EQ test took  0.06844210624694824  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'da']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (b | (c | (F a))))
Learning took:  2.3656015396118164  s
No positive counterexample found
EQ test took  0.08778619766235352  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'da', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x1 | x0) | x2)))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  2.3643810749053955  s
EQ test took  0.10531854629516602  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 6.905667304992676
overall guided extraction time took: 0.22000000000002728
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22002696990966797
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         6.905667          None            None  [a, , c, b, da, dc]          0         0         4            2                    100.0                                    100.0               0.220027         True     0.25   0.05
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11181473731994629  s
No positive counterexample found
EQ test took  0.006655216217041016  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12659668922424316  s
EQ test took  0.0016374588012695312  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17157220840454102  s
No positive counterexample found
EQ test took  0.022273778915405273  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3611640930175781  s
No positive counterexample found
EQ test took  0.06302118301391602  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1810047626495361  s
No positive counterexample found
EQ test took  0.09360599517822266  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x1)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.1741840839385986  s
No positive counterexample found
EQ test took  0.12061452865600586  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db', 'da']



5  iteration complete



start formula depth: 7
Before normalization: (! (F (x2 | (x0 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (F (c | (a | b))))
Learning took:  1.836803913116455  s
EQ test took  0.17895102500915527  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (F (c | (a | b))))

Time taken to extract ltl: 6.459698677062988
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010436773300170898
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (F (c | (a | b))))   True          100.0      100.0              100.0                              100.0         6.459699          None            None  [c, , b, a, db, da]          0         0         4            2                    100.0                                    100.0               0.010437         True      0.1    0.5
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11427116394042969  s
No positive counterexample found
EQ test took  0.010111331939697266  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11947274208068848  s
EQ test took  0.0015206336975097656  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18212294578552246  s
No positive counterexample found
EQ test took  0.05175662040710449  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35668015480041504  s
No positive counterexample found
EQ test took  0.06732940673828125  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.083556890487671  s
No positive counterexample found
EQ test took  0.12534570693969727  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (F (a | b))))
Learning took:  2.48201322555542  s
No positive counterexample found
EQ test took  0.16376781463623047  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (! (F ((x1 | x2) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (F (a | (b | c))))
Learning took:  1.8071086406707764  s
EQ test took  0.2010631561279297  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: ~F(c)
final ltl:  (~ (F (a | (b | c))))

Time taken to extract ltl: 6.77630615234375
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.028522968292236328
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (~ (F (a | (b | c))))   True          100.0      100.0              100.0                              100.0         6.776306          None            None  [b, , a, c, db, dc]          0         0         4            2                    100.0                                    100.0               0.028523         True      0.1   0.25
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1257152557373047  s
No positive counterexample found
EQ test took  0.008068561553955078  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11585688591003418  s
EQ test took  0.0015671253204345703  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17655515670776367  s
No positive counterexample found
EQ test took  0.043349266052246094  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3670985698699951  s
No positive counterexample found
EQ test took  0.07763099670410156  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.1856975555419922  s
No positive counterexample found
EQ test took  0.1495358943939209  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! ((x2 | (F x1)) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.17323899269104  s
No positive counterexample found
EQ test took  0.16143083572387695  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x1 | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  1.4175655841827393  s
EQ test took  0.220778226852417  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 6.232959032058716
overall guided extraction time took: 0.08000000000015461
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.08864712715148926
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         6.232959          None            None  [c, , b, a, db, dc]          0         0         4            2                    100.0                                    100.0               0.088647         True      0.1    0.1
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11194300651550293  s
No positive counterexample found
EQ test took  0.014772653579711914  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11949372291564941  s
EQ test took  0.001565694808959961  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17229533195495605  s
No positive counterexample found
EQ test took  0.05221271514892578  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.354999303817749  s
No positive counterexample found
EQ test took  0.09923934936523438  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x0 | x1) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.119762897491455  s
No positive counterexample found
EQ test took  0.17000770568847656  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (((F x1) | x2) | x0))
Learning formula with depth 4
learned LTL formula: (~ (a | (c | (F b))))
Learning took:  2.395578145980835  s
No positive counterexample found
EQ test took  0.188950777053833  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'c', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x1 | (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  1.773155927658081  s
EQ test took  0.240584135055542  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 6.822817802429199
overall guided extraction time took: 0.22000000000002728
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.22130703926086426
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         6.822818          None            None  [a, , b, c, db, dc]          0         0         4            2                    100.0                                    100.0               0.221307         True      0.1   0.05
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11648130416870117  s
No positive counterexample found
EQ test took  0.012682437896728516  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11839914321899414  s
EQ test took  0.0015649795532226562  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1817777156829834  s
No positive counterexample found
EQ test took  0.061051368713378906  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.35570454597473145  s
No positive counterexample found
EQ test took  0.14017796516418457  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0809311866760254  s
No positive counterexample found
EQ test took  0.2086658477783203  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (x0 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (c | (a | (F b))))
Learning took:  2.1640801429748535  s
No positive counterexample found
EQ test took  0.24169063568115234  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  1.9863076210021973  s
EQ test took  0.3433725833892822  s


epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 7.022935628890991
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.010469198226928711
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         7.022936          None            None  [c, , a, b, db, dc]          0         0         4            2                    100.0                                    100.0               0.010469         True     0.05    0.5
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13028812408447266  s
No positive counterexample found
EQ test took  0.017031431198120117  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11043119430541992  s
EQ test took  0.0016112327575683594  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17986607551574707  s
No positive counterexample found
EQ test took  0.05478835105895996  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35490870475769043  s
No positive counterexample found
EQ test took  0.14444518089294434  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.1166486740112305  s
No positive counterexample found
EQ test took  0.21063566207885742  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'c', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (F (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (F (a | b))))
Learning took:  2.489973306655884  s
EQ test took  0.27647924423217773  s
new counterexample: ddaabd  should be accepted by implementation


positive traces---> 
['', 'ddaabd']


negative traces---> 
['b', 'a', 'c', 'db']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F ((x1 | x0) | x2)) U (! (F ((x1 | x0) | x2))))
Learning formula with depth 5
learned LTL formula: ((F (c | (a | b))) U (~ (F (c | (a | b)))))
Learning took:  11.144402027130127  s
EQ test took  0.05989503860473633  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'ddaabd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad']



6  iteration complete



start formula depth: 8
Before normalization: ((x0 -> x1) & ((x2 | ((x0 -> x1) U x1)) -> x0))
Learning formula with depth 5
learned LTL formula: ((a -> b) & ((c | ((a -> b) U b)) -> a))
Learning took:  3.958249568939209  s
No positive counterexample found
EQ test took  0.33626747131347656  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'ddaabd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad', 'da']



7  iteration complete



start formula depth: 8
Before normalization: (! (((x1 | x0) | x2) | (X (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ ((c | (a | b)) | (X (a | b))))
Learning took:  4.722638130187988  s
No positive counterexample found
EQ test took  0.4119069576263428  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'ddaabd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad', 'da', 'dc']



8  iteration complete



start formula depth: 8
Before normalization: (! (((x2 | x0) | x1) | (X ((x2 | x0) | x1))))
Learning formula with depth 5
learned LTL formula: (~ ((b | (a | c)) | (X (b | (a | c)))))
Learning took:  28.007745027542114  s
EQ test took  0.13959383964538574  s
new counterexample: daaabbd  should be accepted by implementation


positive traces---> 
['', 'ddaabd', 'daaabbd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad', 'da', 'dc']



9  iteration complete



start formula depth: 8
increasing formula depth to  9
Before normalization: ((F ((x1 | x0) | x2)) -> (X (X (x1 | x0))))
Learning formula with depth 4
learned LTL formula: ((F (c | (a | b))) -> (X (X (a | b))))
Learning took:  222.0733823776245  s
EQ test took  0.27805495262145996  s
new counterexample: baa  should be rejected by implementation


positive traces---> 
['', 'ddaabd', 'daaabbd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad', 'da', 'dc', 'baa']



10  iteration complete



start formula depth: 9
Before normalization: ((F x1) U (G (! (x1 | (x2 | x0)))))
Learning formula with depth 5
learned LTL formula: ((F b) U (G (~ (b | (a | c)))))
Learning took:  10.07707142829895  s
No positive counterexample found
EQ test took  0.21377110481262207  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'ddaabd', 'daaabbd']


negative traces---> 
['b', 'a', 'c', 'db', 'ad', 'da', 'dc', 'baa', 'bd']



11  iteration complete





epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: ~F(c)
final ltl:  ((F b) U (G (~ (b | (a | c)))))
incomplete formula
Number of samples: 195
Number of counterexamples returned: 193
17114.999762150175 5.61700244909351

Time taken to extract ltl: 401.11543679237366
overall guided extraction time took: 0.029999999999972715
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.03508591651916504
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 83.84
RNN matches ground truth: 100.0
Explanation matches ground truth: 83.84
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query                      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  ((F b) U (G (~ (b | (a | c)))))  False          100.0      100.0              83.84                              83.84       401.115437   17114.999762         5.617002  [b, , a, c, db, ddaabd, ad, da, dc, daaabbd, b...          0         0         5            2                    100.0                                    100.0               0.035086         True     0.05   0.25
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1257309913635254  s
No positive counterexample found
EQ test took  0.02068018913269043  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12319207191467285  s
EQ test took  0.0016264915466308594  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17648100852966309  s
No positive counterexample found
EQ test took  0.0753333568572998  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3441038131713867  s
No positive counterexample found
EQ test took  0.17577862739562988  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.03304123878479  s
No positive counterexample found
EQ test took  0.2591269016265869  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (! (x2 | (x0 | (F x1))))
Learning formula with depth 4
learned LTL formula: (~ (c | (a | (F b))))
Learning took:  2.0701797008514404  s
No positive counterexample found
EQ test took  0.33147168159484863  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'db', 'dc']



5  iteration complete



start formula depth: 7
Before normalization: (G (! (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (G (~ (a | (b | c))))
Learning took:  1.9457263946533203  s
EQ test took  0.4106144905090332  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (a | (b | c))))

Time taken to extract ltl: 7.1020731925964355
overall guided extraction time took: 0.07999999999992724
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.08428645133972168
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (a | (b | c))))   True          100.0      100.0              100.0                              100.0         7.102073          None            None  [c, , a, b, db, dc]          0         0         4            2                    100.0                                    100.0               0.084286         True     0.05    0.1
target: alternating bit protocol
query: ~F(c)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12405776977539062  s
No positive counterexample found
EQ test took  0.021823644638061523  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11594772338867188  s
EQ test took  0.001634359359741211  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18568205833435059  s
No positive counterexample found
EQ test took  0.09972262382507324  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x1))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.3509080410003662  s
No positive counterexample found
EQ test took  0.1687629222869873  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x1 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | b)))
Learning took:  1.0761337280273438  s
No positive counterexample found
EQ test took  0.29023241996765137  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c', 'a', 'dc']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (G (! ((x2 | x0) | x1)))
Learning formula with depth 4
learned LTL formula: (G (~ (b | (a | c))))
Learning took:  2.652658462524414  s
EQ test took  0.4228181838989258  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: ~F(c)
final ltl:  (G (~ (b | (a | c))))

Time taken to extract ltl: 5.518171787261963
overall guided extraction time took: 0.21000000000003638
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.211578369140625
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query            explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(c)  (G (~ (b | (a | c))))   True          100.0      100.0              100.0                              100.0         5.518172          None            None  [b, , c, a, dc]          0         0         4            2                    100.0                                    100.0               0.211578         True     0.05   0.05
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1247868537902832  s
No positive counterexample found
EQ test took  0.00299835205078125  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.125518798828125  s
EQ test took  0.0016071796417236328  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18149781227111816  s
No positive counterexample found
EQ test took  0.004040956497192383  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35389137268066406  s
No positive counterexample found
EQ test took  0.027672529220581055  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'd']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x3)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | d)))
Learning took:  1.042454719543457  s
No positive counterexample found
EQ test took  0.03589487075805664  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a', 'd', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (x1 | (x0 | (x2 | x3))))
Learning formula with depth 4
learned LTL formula: (~ (b | (a | (c | d))))
Learning took:  8.269258499145508  s
EQ test took  0.04278135299682617  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (b | (a | (c | d))))

Time taken to extract ltl: 10.22175407409668
overall guided extraction time took: 0.009999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))

<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.009876489639282227
number of states of the dfa: 2
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': ''}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (b | (a | (c | d))))   True          100.0      100.0              100.0                              100.0        10.221754          None            None  [b, , a, d, c]          0         0         4            2                    100.0                                    100.0               0.009876         True      0.5    0.5
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1219182014465332  s
No positive counterexample found
EQ test took  0.0036482810974121094  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12984395027160645  s
EQ test took  0.0016016960144042969  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18107318878173828  s
No positive counterexample found
EQ test took  0.021727323532104492  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | b))
Learning took:  0.35228562355041504  s
No positive counterexample found
EQ test took  0.024794816970825195  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'd']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x3)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | d)))
Learning took:  1.028183937072754  s
No positive counterexample found
EQ test took  0.03983449935913086  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'b', 'd', 'c']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! ((x2 | x1) | (x3 | x0)))
Learning formula with depth 3
learned LTL formula: (~ ((a | d) | (b | c)))
Learning took:  8.016935586929321  s
EQ test took  0.0442502498626709  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: ~F(d)
final ltl:  (~ ((a | d) | (b | c)))

Time taken to extract ltl: 9.975214719772339
overall guided extraction time took: 0.060000000000172804
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.020000000000209184)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.0631403923034668
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ ((a | d) | (b | c)))   True          100.0      100.0              100.0                              100.0         9.975215          None            None  [a, , b, d, c]          0         0         3            4                    100.0                                    100.0                0.06314         True      0.5   0.25
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12447762489318848  s
No positive counterexample found
EQ test took  0.004022359848022461  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12072300910949707  s
EQ test took  0.0015940666198730469  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18068933486938477  s
No positive counterexample found
EQ test took  0.019727468490600586  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3499579429626465  s
EQ test took  0.014813423156738281  s
new counterexample: aaccbb  should be accepted by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((x0 | x2) -> (X x0))
Learning formula with depth 2
learned LTL formula: ((a | c) -> (X a))
Learning took:  0.915259838104248  s
EQ test took  0.019517183303833008  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
increasing formula depth to  7
Before normalization: ((x0 | x2) U (! ((x0 | x2) | x3)))
Learning formula with depth 4
learned LTL formula: ((a | c) U (~ (d | (a | c))))
Learning took:  3.604383707046509  s
No positive counterexample found
EQ test took  0.028536081314086914  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b']



5  iteration complete



start formula depth: 7
increasing formula depth to  8
increasing formula depth to  9
Before normalization: ((x3 | (x0 | (x1 | x2))) -> (X (x0 | (x1 | x2))))
Learning formula with depth 4
learned LTL formula: ((d | (a | (b | c))) -> (X (a | (b | c))))
Learning took:  66.4618616104126  s
No positive counterexample found
EQ test took  0.022088050842285156  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b', 'cc']



6  iteration complete



start formula depth: 9
Before normalization: ((((x0 | x1) | x3) | x2) -> (X x0))
Learning formula with depth 4
learned LTL formula: ((c | (d | (a | b))) -> (X a))
Learning took:  5.00628662109375  s
No positive counterexample found
EQ test took  0.04836845397949219  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b', 'cc', 'ca']



7  iteration complete



start formula depth: 9
Before normalization: (! ((x3 | x2) | ((G x0) | x1)))
Learning formula with depth 4
learned LTL formula: (~ ((c | d) | (b | (G a))))
Learning took:  9.342275381088257  s
No positive counterexample found
EQ test took  0.04771065711975098  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b', 'cc', 'ca', 'ac']



8  iteration complete



start formula depth: 9
Before normalization: (! ((x3 | x1) | (G (x2 | x0))))
Learning formula with depth 4
learned LTL formula: (~ ((b | d) | (G (a | c))))
Learning took:  15.149792909622192  s
No positive counterexample found
EQ test took  0.04712653160095215  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b', 'cc', 'ca', 'ac', 'ad']



9  iteration complete



start formula depth: 9
Before normalization: (! (x1 | (G (x2 | (x0 | x3)))))
Learning formula with depth 5
learned LTL formula: (~ (b | (G (c | (a | d)))))
Learning took:  14.730957508087158  s
No positive counterexample found
EQ test took  0.027315855026245117  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'aaccbb']


negative traces---> 
['c', 'a', 'd', 'b', 'cc', 'ca', 'ac', 'ad', 'db']



10  iteration complete





epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (b | (G (c | (a | d)))))
incomplete formula
Number of samples: 20
Number of counterexamples returned: 17
254.36838256921 3.1137895447941957

Time taken to extract ltl: 401.11579632759094
overall guided extraction time took: 0.2999999999999545
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.07999999999992724)
('dd', 0.10000000000013642)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.29854512214660645
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 47.52
RNN matches ground truth: 100.0
Explanation matches ground truth: 47.52
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query                  explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                             counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (b | (G (c | (a | d)))))  False          100.0      100.0              47.52                              47.52       401.115796     254.368383          3.11379  [c, , a, aaccbb, d, b, cc, ca, ac, ad, db]          0         0         5            4                    100.0                                    100.0               0.298545         True      0.5    0.1
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12057352066040039  s
No positive counterexample found
EQ test took  0.004690408706665039  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1203920841217041  s
EQ test took  0.001631021499633789  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.1686689853668213  s
No positive counterexample found
EQ test took  0.014505624771118164  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3567187786102295  s
No positive counterexample found
EQ test took  0.026089191436767578  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x0 | (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (a | (b | c)))
Learning took:  1.0439479351043701  s
No positive counterexample found
EQ test took  0.030529022216796875  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'b', 'd']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (x1 | (x0 | (x2 | x3))))
Learning formula with depth 4
learned LTL formula: (~ (b | (a | (c | d))))
Learning took:  8.357047080993652  s
EQ test took  0.05433201789855957  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (b | (a | (c | d))))

Time taken to extract ltl: 10.30883240699768
overall guided extraction time took: 28.1400000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.17000000000007276)
('acbbbbb', 0.20000000000004547)
('dd', 0.20000000000004547)
('bcbd', 0.22000000000002728)
('aacccbd', 0.33999999999991815)
('acccbb', 0.36999999999989086)
('acbd', 0.4199999999998454)
('dacbd', 0.43000000000006366)
('accbd', 0.5)
('acbdd', 0.5299999999999727)

Time taken to extract lstar-dfa: 28.13572883605957
number of states of the dfa: 324
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'b', 'd': 'd'}, 'b': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbbbbbd': {'a': 'acbbbbbda', 'b': 'acbbbbbdb', 'c': 'acbbbbdddcc', 'd': 'acbbbbbdd'}, 'aaccb': {'a': 'aa', 'b': 'aacccbb', 'c': 'aaccbc', 'd': 'aaccbd'}, 'acbbbbddacbbbbbddacddd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'acbbbbdddcdd'}, 'aacbcacbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'accbd'}, 'acbbbbddaccbdaabd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'acbbbbddacbbdad'}, 'dacbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbddacbbbbbdacbbbb': {'a': 'acbbbbddacbbbbbdacbbbba', 'b': 'acbbbbddacbbbbb', 'c': 'acbbbbddacbbbbbc', 'd': 'acbbbbddacbbbbd'}, 'acbbbbddaccbb': {'a': 'aa', 'b': 'acbbbbddacbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbddacbbd'}, 'acbbbbddacbbbbb': {'a': 'acbbbbddacbbbbba', 'b': 'acbbbbddacbbbbb', 'c': 'acbbbbddacbbbbbc', 'd': 'acbbbbddacbbbbbd'}, 'acbbbbbddc': {'a': 'b', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'b'}, 'acbbbbdddcbbbdddaaab': {'a': 'aa', 'b': 'acbbbbdddcbbbdddaaabb', 'c': 'acbbbbdddcbbbdddaaabc', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbdddcb': {'a': 'b', 'b': 'acbbbbdddcbb', 'c': 'b', 'd': 'acbbbbdddcbd'}, 'aaccbcaaacc': {'a': 'aaccbca', 'b': 'aaccbcaaaccb', 'c': 'accc', 'd': 'b'}, 'acbbbbddacbbbbbdd': {'a': 'acbbbbddacbbbbbdda', 'b': 'acbbbbddacbbbbbddb', 'c': 'acbbbbddacbbbbbddc', 'd': 'acbbbbddacbbbbbddd'}, 'acbbbbddacbc': {'a': 'aacccbba', 'b': 'acbbbbddacbcb', 'c': 'acbbbbddacbcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcac': {'a': 'aaccbcaa', 'b': 'acbbbbdddcc', 'c': 'acbbbbdddcacc', 'd': 'b'}, 'da': {'a': 'aa', 'b': 'b', 'c': 'dac', 'd': 'b'}, 'acbbbbddacbbbbba': {'a': 'acbbbbddacbbbbbaa', 'b': 'b', 'c': 'acbbbbdddcc', 'd': 'dd'}, 'aaccbcac': {'a': 'aaccbcaca', 'b': 'acbb', 'c': 'aaccbcac', 'd': 'b'}, 'aacbcacb': {'a': 'b', 'b': 'acbb', 'c': 'b', 'd': 'aacbcacbd'}, 'aacccbca': {'a': 'aacbca', 'b': 'b', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddacbbbbddacabb': {'a': 'acbbbbddacbbbbbaaa', 'b': 'acbbbbdddcbbbdddaaabbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acccb': {'a': 'acccba', 'b': 'acccbb', 'c': 'b', 'd': 'acbdd'}, 'acbbbbdddcbbbdddaa': {'a': 'acbbbbdddcbbbdddaaa', 'b': 'acbbbbdddcbbbdddaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbdddcbbbdddaaad'}, 'acbbbbdddcbbbdddaabbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'b', 'd': 'dacbbbbd'}, 'acbbbbddacbbbbbcbbd': {'a': 'acbbbbddaccbdc', 'b': 'acbbbbddacbbbbbcbbdb', 'c': 'b', 'd': 'acbbbbdddcbbbddd'}, 'aaccbcaaac': {'a': 'aaccbcaa', 'b': 'acb', 'c': 'aaccbcaaacc', 'd': 'b'}, 'acbbbbdddcbbbdddaaaaabb': {'a': 'aa', 'b': 'acbbbbdddcbbbdddaaaaabbb', 'c': 'acbbbbdddcbbbdddaaaaabbc', 'd': 'aaccbd'}, 'acbbbbbdacbbdd': {'a': 'acbbbbddda', 'b': 'acbbbbdddb', 'c': 'acbbbbbdacbbddc', 'd': 'acbbbbddacbbbbbddddd'}, 'acbbbbddacbbbbbddaaacabbbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'acbbbbdddcc', 'd': 'aacccbbbbd'}, 'aca': {'a': 'aca', 'b': 'b', 'c': 'acac', 'd': 'b'}, 'acbb': {'a': 'aacd', 'b': 'acbbb', 'c': 'b', 'd': 'acbdd'}, 'aacbcccc': {'a': 'b', 'b': 'acbb', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddaccbdccc': {'a': 'b', 'b': 'aacccbbbacb', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddacbbbd': {'a': 'acbbbbddda', 'b': 'acbbbbbdb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddd'}, 'aacccbbbdb': {'a': 'aacd', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'dd'}, 'acbbbbddacc': {'a': 'aa', 'b': 'acbbbbddaccb', 'c': 'acbbbbddaccc', 'd': 'acbbbbddaccd'}, 'aacbccb': {'a': 'b', 'b': 'acbb', 'c': 'b', 'd': 'acbdd'}, 'accccb': {'a': 'accccba', 'b': 'accccbb', 'c': 'aaccbcaca', 'd': 'aacccbcbd'}, 'aacbcb': {'a': 'b', 'b': 'aacccbbbacb', 'c': 'b', 'd': 'aacbcbd'}, 'acbbbbddacbbbbbdacbb': {'a': 'acbbbbddaccbdc', 'b': 'acbbbbddacbbbbbdacbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcbbbdddaaaaabbbbd'}, 'acbbbbbdacb': {'a': 'acbbbbddacbbbbbaaa', 'b': 'acbbbbbdacbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbddacbbdc': {'a': 'aacccbba', 'b': 'aacccbbbacb', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'aacccb': {'a': 'aa', 'b': 'aacccbb', 'c': 'aacccbc', 'd': 'aacccbd'}, 'd': {'a': 'da', 'b': 'b', 'c': 'b', 'd': 'dd'}, 'acbbbbdddcbbbdddaaaaabbbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcbbbdddaaaaabbbbd'}, 'aacbcac': {'a': 'aaccbcaca', 'b': 'aacbcacb', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddacbbbbddacddd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcd', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbdddb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddbd'}, 'aaccbcbbbdb': {'a': 'b', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'dd'}, 'acbbbbddacbbbbbdcd': {'a': 'acbbbbddacbbbbbdaba', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbddaaab': {'a': 'aa', 'b': 'acbbbbddacbbbbbddaaabb', 'c': 'acbbbbbdacc', 'd': 'acbbbbddacbbbbbddaaabd'}, 'accb': {'a': 'acccba', 'b': 'acbbbbddacbbbbbddacbcb', 'c': 'b', 'd': 'accbd'}, 'acbbbbbdacbbddcbb': {'a': 'b', 'b': 'acbbbbdddcbbb', 'c': 'b', 'd': 'acbbbbdddcbd'}, 'acbbbbdddcacc': {'a': 'aaccbcaa', 'b': 'aacccbbbacb', 'c': 'aaccbcaaacc', 'd': 'b'}, 'acbbbbddacbbbbbddacbd': {'a': 'acbbbbddaccbda', 'b': 'acbbbbddacbbbbbddacbdb', 'c': 'aacccbbbddc', 'd': 'acbbbbddacbbbbbddacbd'}, 'acbbbbbdacbbddc': {'a': 'acbbbbddacbbbbbaaa', 'b': 'acbbbbbdacbbddcb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdb': {'a': 'b', 'b': 'acbbbbdddcbb', 'c': 'b', 'd': 'acbbbbdddbd'}, 'acbbbbddacbbbbbddb': {'a': 'b', 'b': 'acbbbbdb', 'c': 'b', 'd': 'acbbbbdddcbbbd'}, 'acbbbbddacbbbbbaaacba': {'a': 'dacbba', 'b': 'b', 'c': 'aaccbcaa', 'd': 'b'}, 'aacbb': {'a': 'dacbba', 'b': 'dacbbb', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbddacbbbbbddddc': {'a': 'acbbbbddddca', 'b': 'acbbbbdddcbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbddc': {'a': 'acbbbbdddca', 'b': 'acbbbbddacbbbbbcbbdbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbb': {'a': 'b', 'b': 'acbbbbb', 'c': 'b', 'd': 'acbbbbdddcbbbbd'}, 'acbbbbbdacbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'b', 'd': 'acbbbbbdacbbd'}, 'acb': {'a': 'aacd', 'b': 'acbb', 'c': 'b', 'd': 'acbd'}, 'acbbbbb': {'a': 'b', 'b': 'acbbbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbbd'}, 'aa': {'a': 'aa', 'b': 'b', 'c': 'aac', 'd': 'b'}, 'bc': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbbbbddacbbbbbddacdd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'acbbbbddacbbbbbddacddd'}, 'acbbbbdddcbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'dd'}, 'dacb': {'a': 'aa', 'b': 'dacbb', 'c': 'acacba', 'd': 'dacbd'}, 'acbbbbddacbbbbbaaac': {'a': 'da', 'b': 'acbbbbddacbbbbbaaacb', 'c': 'acbbbbdddcbbbdddaaabc', 'd': 'aacd'}, 'acbbbbddacbbbbbddddda': {'a': 'acbbbbddacbbbbddac', 'b': 'acbbbbddacbbbbbdddddab', 'c': 'acbbbbddaccb', 'd': 'aacccbbd'}, 'acbbbbddacbbbbbdacbbbba': {'a': 'acbbbbddacbbbbbdacbbbbaa', 'b': 'b', 'c': 'acbbbbdddcc', 'd': 'dd'}, 'acbbbbdda': {'a': 'acbbbbdddcbbbdddaa', 'b': 'acbbbbdddcdd', 'c': 'acbbbbddac', 'd': 'acbbbbddad'}, 'acbbbbdddcbbbdddaaaaaba': {'a': 'acbbbbdddcbbbdddaaaa', 'b': 'acbbbbdddcbbbdddaaaaabab', 'c': 'acbbbbddaccc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbdddaaaaabd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbcba', 'd': 'acbbbbddacbbbbbddacddd'}, 'acc': {'a': 'acaca', 'b': 'accb', 'c': 'accc', 'd': 'b'}, 'aacccbcbb': {'a': 'acbbbbdddcd', 'b': 'aacccbcbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'aacccbcbbb': {'a': 'b', 'b': 'acbbbbb', 'c': 'b', 'd': 'acbbbbdd'}, 'acbbbbddacbbbbbdddddab': {'a': 'aa', 'b': 'acbbbbddacbbbbbdddddabb', 'c': 'acbbbbdddcdd', 'd': 'dd'}, 'acbbbbdddcbbbdddaab': {'a': 'aa', 'b': 'acbbbbdddcbbbdddaabb', 'c': 'acbbbbddddca', 'd': 'acbdd'}, 'aacc': {'a': 'aa', 'b': 'aaccb', 'c': 'aaccc', 'd': 'acbbbbddacbcba'}, 'acbbbbddda': {'a': 'acbbbbddacbbbbbddaa', 'b': 'acbbbbddacbbdc', 'c': 'acbbbbddacbbbbddac', 'd': 'aacccbd'}, 'acbbb': {'a': 'b', 'b': 'acbbbb', 'c': 'b', 'd': 'acbdd'}, 'aacccbc': {'a': 'aacccbca', 'b': 'aacccbcb', 'c': 'aaccbcac', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbb': {'a': 'b', 'b': 'acbbbbdddcbbbb', 'c': 'b', 'd': 'acbbbbdddcbbbd'}, 'acbbbbdddcbbbdddaaaaababc': {'a': 'acacba', 'b': 'acbbbbdddcb', 'c': 'acbbbbddacbcc', 'd': 'acbbbbdddcd'}, 'acbbbbddaccb': {'a': 'aa', 'b': 'acbbbbddaccbb', 'c': 'acbbbbddaccbc', 'd': 'acbbbbddaccbd'}, 'acbbbbddacbbbbddabb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbdddcbbb', 'c': 'b', 'd': 'ddd'}, 'aacccbb': {'a': 'aacccbba', 'b': 'aacccbbb', 'c': 'b', 'd': 'aacccbbd'}, 'acccba': {'a': 'acccbaa', 'b': 'b', 'c': 'acccbac', 'd': 'b'}, 'aacccbbbddc': {'a': 'aacccbba', 'b': 'acbbbbdddcc', 'c': 'acb', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcd': {'a': 'a', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'aaccbcacaaa': {'a': 'aaccbcaa', 'b': 'b', 'c': 'aaccbcaa', 'd': 'b'}, 'acbbbbbdacbbd': {'a': 'acbbbbddacbbda', 'b': 'acbbbbdb', 'c': 'b', 'd': 'acbbbbbdacbbdd'}, 'acbbbbbdacc': {'a': 'aa', 'b': 'acbbbbbdaccb', 'c': 'acbbbbbdacc', 'd': 'acbbbbdddcdd'}, 'aaccbcaaaccba': {'a': 'aaccbcaaaccbaa', 'b': 'b', 'c': 'acccbac', 'd': 'b'}, 'aaccbcb': {'a': 'aacd', 'b': 'aaccbcbb', 'c': 'b', 'd': 'dacbd'}, 'aaccbcbb': {'a': 'aacd', 'b': 'aaccbcbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbdd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbddacb': {'a': 'aa', 'b': 'acbbbbddacbb', 'c': 'acbbbbddacbc', 'd': 'aacccbbd'}, 'acbbbbddacbbbbbddaaabb': {'a': 'aa', 'b': 'acbbbbddaccbcbb', 'c': 'b', 'd': 'aaccbd'}, 'acbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbdd'}, 'dac': {'a': 'aa', 'b': 'dacb', 'c': 'aacccc', 'd': 'aacd'}, 'acbbbbddaccbdaabb': {'a': 'aa', 'b': 'dacbbb', 'c': 'b', 'd': 'aaccbd'}, 'accc': {'a': 'aaccbca', 'b': 'acccb', 'c': 'acccc', 'd': 'b'}, 'acbbbbddacbbbbbddaacd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddaccbdc', 'd': 'acbbbbddacbbbbbddacddd'}, 'aacccbbbacc': {'a': 'b', 'b': 'aacccbbbacb', 'c': 'acccbac', 'd': 'b'}, 'aacccbbbacbb': {'a': 'b', 'b': 'acbbbbdddcbbb', 'c': 'b', 'd': 'acbdd'}, 'aacbcc': {'a': 'b', 'b': 'aacbccb', 'c': 'aacbccc', 'd': 'b'}, 'acbbbbddddcacb': {'a': 'acbbbbddacbcba', 'b': 'acbbb', 'c': 'b', 'd': 'accbd'}, 'acbbbbddd': {'a': 'acbbbbddda', 'b': 'acbbbbdddb', 'c': 'acbbbbdddc', 'd': 'acbbbbdddd'}, 'acbbbbddacbbbbddacab': {'a': 'aa', 'b': 'acbbbbddacbbbbddacabb', 'c': 'acbbbbddacbbbbddacabc', 'd': 'acbbbbdddcdd'}, 'acbbbbbda': {'a': 'aa', 'b': 'b', 'c': 'acbbbbbdac', 'd': 'acbbbbdddcdd'}, 'aacbccc': {'a': 'b', 'b': 'acbb', 'c': 'aacbcccc', 'd': 'b'}, 'aaccbc': {'a': 'aaccbca', 'b': 'aaccbcb', 'c': 'aaccbcac', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbdddaaabb': {'a': 'aa', 'b': 'acbbbbdddcbbbdddaaabbb', 'c': 'b', 'd': 'dacbd'}, 'acccbac': {'a': 'b', 'b': 'acbbbbdddcc', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddacbbbbbddaaabdd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'acbbbbddacbbbbbdaba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc', 'd': 'b'}, 'aaccbcaaaccb': {'a': 'aaccbcaaaccba', 'b': 'acbbbbddacbbbbbddacbcb', 'c': 'b', 'd': 'acbdd'}, 'acbbbbddaccbcbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'b', 'd': 'aacccbbbd'}, 'acbbbbddacbbbba': {'a': 'aacccbba', 'b': 'b', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcdd'}, 'aacbca': {'a': 'aaccbcaa', 'b': 'b', 'c': 'aacbcac', 'd': 'b'}, 'acbbbbddacbbbbbdaba': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcac', 'd': 'aacd'}, 'acbbbbddacbbbbbdda': {'a': 'acbbbbddacbbbbbddaa', 'b': 'acbbbbddacbbbbbddab', 'c': 'acbbbbddacbbbbbddac', 'd': 'aaccbd'}, 'acbbbbddacbb': {'a': 'aa', 'b': 'acbbbbddacbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbddacbbd'}, 'aaccbcbbb': {'a': 'b', 'b': 'acbbbbdddcbbbb', 'c': 'b', 'd': 'aaccbcbbbd'}, 'acbbbbddacbbbb': {'a': 'acbbbbddacbbbba', 'b': 'acbbbbddacbbbbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbddacbbbbd'}, 'acbbbbdddcbbbdddaaaaabcb': {'a': 'aacccbba', 'b': 'acbbbbddaccbcbb', 'c': 'acbbbbdddcc', 'd': 'aacccbcbd'}, 'acccbaa': {'a': 'aca', 'b': 'b', 'c': 'aaccbcaaaccbaac', 'd': 'b'}, 'acbbbbddacbbbbbdab': {'a': 'acbbbbddacbbbbbdaba', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbdddaabb': {'a': 'aacccbba', 'b': 'acbbbbdddcbbbdddaabbb', 'c': 'b', 'd': 'acbdd'}, 'acbbbbbdd': {'a': 'acbbbbddacbbbbbda', 'b': 'acbbbbdddb', 'c': 'acbbbbbddc', 'd': 'acbbbbbddd'}, 'acacba': {'a': 'aaccbcaa', 'b': 'b', 'c': 'acacbac', 'd': 'b'}, 'aaccbcaaaaac': {'a': 'aa', 'b': 'aaccbcaaaaacb', 'c': 'acbbbbbdacc', 'd': 'b'}, 'acbbbbddacbbbbddaca': {'a': 'acbbbbdddcbbbdddaaaa', 'b': 'acbbbbddacbbbbddacab', 'c': 'acbbbbddaccc', 'd': 'acbbbbddacbbbbbdaba'}, 'bcbd': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbbbbdddcbbbddd': {'a': 'acbbbbdddcbbbddda', 'b': 'acbbbbdddb', 'c': 'b', 'd': 'acbbbbdddcbbbddd'}, 'acbbbbddaccbcbbbb': {'a': 'acbbbbddacbbbbbddacbdb', 'b': 'acbbbbddaccbcbbbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbddacbbbbbd'}, 'aaccccbc': {'a': 'aaccbca', 'b': 'aacccbcb', 'c': 'aaccbcac', 'd': 'acbbbbdddcdd'}, 'acbbbbddaccbc': {'a': 'aacccbba', 'b': 'acbbbbddaccbcb', 'c': 'acbbbbddaccbcc', 'd': 'acbbbbddaccbcd'}, 'dacbbbbd': {'a': 'aa', 'b': 'acbbbbdb', 'c': 'b', 'd': 'aacccbbbd'}, 'acbbbbddacbbda': {'a': 'acbbbbddacbbdaa', 'b': 'acbbbbddacbbdc', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbddacbbdad'}, 'acbbbbddacbbbbbdddddabbb': {'a': 'b', 'b': 'acbbbb', 'c': 'b', 'd': 'ddd'}, 'acac': {'a': 'acaca', 'b': 'acacb', 'c': 'acbbbbbdacc', 'd': 'b'}, 'acbbbbddacbbbbbdaabb': {'a': 'acbbbbdddcdd', 'b': 'acbbb', 'c': 'b', 'd': 'acbdd'}, 'acbbbbdddbd': {'a': 'aacccbbba', 'b': 'b', 'c': 'b', 'd': 'acbbbbddaccd'}, 'aaccbcacaa': {'a': 'aaccbcacaaa', 'b': 'b', 'c': 'aaccbcaa', 'd': 'b'}, 'acbbbbddaccbdcc': {'a': 'acacba', 'b': 'acbb', 'c': 'acbbbbddaccbdccc', 'd': 'b'}, 'acbbbbddacbbdd': {'a': 'acbbbbddda', 'b': 'acbbbbdddb', 'c': 'acbbbbddacbbddc', 'd': 'acbbbbddacbbbbbddddd'}, 'acbbbbdddcc': {'a': 'b', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'b'}, 'acbbbbddac': {'a': 'aa', 'b': 'acbbbbddacb', 'c': 'acbbbbddacc', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbddacbbbbdd': {'a': 'acbbbbddacbbbbdda', 'b': 'acbbbbddacbbbbbcbbdb', 'c': 'acbbbbddacbbbbddc', 'd': 'acbbbbddacbbbbbddddd'}, 'acbbbbbdb': {'a': 'b', 'b': 'acbbbbbdb', 'c': 'b', 'd': 'acbbbbdddb'}, 'aacccbbbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddaccbcbbb', 'c': 'b', 'd': 'aacccbbbbd'}, 'acbbbbdddcbbbdddaaaab': {'a': 'aa', 'b': 'acbbbbddacbbbbbddaaabb', 'c': 'acbbbbbdacc', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbdddcdd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbbbbddacbcba'}, 'aaccbcaaaccbaac': {'a': 'aaccbcaa', 'b': 'aacbccb', 'c': 'aaccbcaaacc', 'd': 'b'}, 'acbbbbddacbbbbda': {'a': 'acbbbbdddcbbbdddaa', 'b': 'acbbbbddacbbbbdab', 'c': 'acbbbbddaccc', 'd': 'aacccbcbd'}, 'acbbbbdddcbbbdddad': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbddacbbbbbddddd': {'a': 'acbbbbddacbbbbbddddda', 'b': 'acbbbbdddb', 'c': 'acbbbbddacbbbbbdddddc', 'd': 'acbbbbddacbbbbbdddd'}, 'acbbbbddaccbcd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'aacbcbd'}, 'acbbbbddaccbdab': {'a': 'aa', 'b': 'acbbbbddddcacb', 'c': 'aacd', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbdddaaaaabbc': {'a': 'aaccbca', 'b': 'aacccbbbacb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbdddaaabc': {'a': 'aa', 'b': 'aaccbcaaaccb', 'c': 'acbbbbbdacc', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbddab': {'a': 'aa', 'b': 'acbbbbddacbbbbddabb', 'c': 'b', 'd': 'acbbbbdddcbd'}, 'acbbbbdddcbbbbd': {'a': 'acbbbbddaccbdc', 'b': 'acbbbbbdb', 'c': 'b', 'd': 'acbbbbdddcbbbddd'}, 'acbbbbdddcbbbdddaaaaa': {'a': 'acbbbbdddcbbbdddaaaaa', 'b': 'acbbbbdddcbbbdddaaaaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbddacbbbbbddaaacd'}, 'acbbbbddacbbb': {'a': 'acbbbbddacbbba', 'b': 'acbbbbddacbbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbddacbbbd'}, 'acbbbbdddcbbbdddaaaaabbbbd': {'a': 'acbbbbddacbbda', 'b': 'acbbbbdb', 'c': 'acbbbbdddcc', 'd': 'acbbbbbdacbbdd'}, 'acbbbbddacbbbbbddaaaa': {'a': 'acbbbbdddcbbbdddaaaaa', 'b': 'acbbbbddacbbbbbddaaaca', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbddacbbbbbddaaacd'}, 'acbbbbdddcbbbddda': {'a': 'acbbbbdddcbbbdddaa', 'b': 'acbbbbdddcdd', 'c': 'acbbbbddac', 'd': 'acbbbbdddcbbbdddad'}, 'acbbbbddacbbddc': {'a': 'aa', 'b': 'acbbbbbdacbbddcb', 'c': 'acb', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbaaacb': {'a': 'acbbbbddacbbbbbaaacba', 'b': 'acbb', 'c': 'b', 'd': 'aacbcbd'}, 'aaccbcaaa': {'a': 'aaccbcaaaa', 'b': 'b', 'c': 'aaccbcaaac', 'd': 'b'}, 'acbbbbddacbbd': {'a': 'acbbbbddacbbda', 'b': 'acbbbbdb', 'c': 'acbbbbddacbbdc', 'd': 'acbbbbddacbbdd'}, 'aaccccb': {'a': 'aa', 'b': 'aacccbb', 'c': 'aaccccbc', 'd': 'aaccbd'}, 'acbbbbbdaccb': {'a': 'aacccbba', 'b': 'acbbbbddaccbcbb', 'c': 'b', 'd': 'aacccbcbd'}, 'aac': {'a': 'aa', 'b': 'aacb', 'c': 'aacc', 'd': 'aacd'}, 'acbbbbddddcac': {'a': 'da', 'b': 'acbbbbddddcacb', 'c': 'acbbbbdddcbbbdddaaabc', 'd': 'aacd'}, 'aacccbbbd': {'a': 'acbbbbddacbbda', 'b': 'aacccbbbdb', 'c': 'acbbbbddacbbbbbdcd', 'd': 'aacccbbbdd'}, 'aaccbcaa': {'a': 'aaccbcaaa', 'b': 'b', 'c': 'aaccbcaaac', 'd': 'b'}, 'acbbbbddacbbbbbddaaac': {'a': 'acbbbbddacbbbbbddaaaca', 'b': 'acbbbbddaccb', 'c': 'acbbbbddac', 'd': 'acbbbbddacbbbbbddaaacd'}, 'aacccbcb': {'a': 'acbbbbddacbcba', 'b': 'aacccbcbb', 'c': 'b', 'd': 'aacccbcbd'}, 'aaccbcaaaa': {'a': 'aaccbcaaaaa', 'b': 'b', 'c': 'aa', 'd': 'b'}, 'acbbbbddad': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbbbbddacbbbbbddaaabdd'}, 'acbbbbddacbbba': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbdc': {'a': 'b', 'b': 'acbbbbdddcbb', 'c': 'b', 'd': 'acbbbbddacbbbbbdcd'}, 'acaca': {'a': 'aaccbcaaaccbaa', 'b': 'b', 'c': 'aaccbcaaaccbaac', 'd': 'b'}, 'acbbbbddacbbbbbdac': {'a': 'aa', 'b': 'acbbbbddacbbbbbdacb', 'c': 'acbbbbddacc', 'd': 'acbbbbdddcdd'}, 'aacccbd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'aaccbd'}, 'acbbbbddacbbbbbaa': {'a': 'acbbbbddacbbbbbaaa', 'b': 'b', 'c': 'aaccbcaa', 'd': 'acbbbbddacbbbbbdcd'}, 'acbbbbddacbbbbbddaaabd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcd', 'd': 'acbbbbddacbbbbbddaaabdd'}, 'acbbbbddacbbbbbdddddc': {'a': 'aa', 'b': 'acbbbbddacbbbbbcbbdbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbdddcdd'}, 'a': {'a': 'aa', 'b': 'b', 'c': 'ac', 'd': 'b'}, 'aacccbbbac': {'a': 'aaccbcaa', 'b': 'aacccbbbacb', 'c': 'aacccbbbacc', 'd': 'aacd'}, 'acbbbbddaccbdaa': {'a': 'acbbbbdddcbbbdddaaaa', 'b': 'acbbbbddaccbdaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'a'}, 'aacccbbb': {'a': 'aacccbbba', 'b': 'aacccbbbb', 'c': 'b', 'd': 'aacccbbbd'}, 'acbbbbdddcbbbdddaaad': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbbbbbdaba', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbbdac': {'a': 'aa', 'b': 'acbbbbbdacb', 'c': 'acbbbbbdacc', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbddacd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbbbbbdaba', 'd': 'acbbbbddacbbbbddacdd'}, 'acbbbbddacbbbbbddac': {'a': 'aa', 'b': 'acbbbbddacbbbbbddacb', 'c': 'acbbbbddacbbbbbddacc', 'd': 'acbbbbddacbbbbbddacd'}, 'acbbbbdddcbbbdd': {'a': 'aa', 'b': 'acbbbbddacbbbbbddacbdb', 'c': 'b', 'd': 'acbbbbdddcbbbddd'}, 'acbbbbdddcbbbdddaaaaab': {'a': 'acbbbbdddcbbbdddaaaaaba', 'b': 'acbbbbdddcbbbdddaaaaabb', 'c': 'acbbbbdddcbbbdddaaaaabc', 'd': 'acbbbbdddcbbbdddaaaaabd'}, 'acbbbbddaccbdaab': {'a': 'aa', 'b': 'acbbbbddaccbdaabb', 'c': 'dac', 'd': 'acbbbbddaccbdaabd'}, 'aacccbbbdd': {'a': 'acbbbbddda', 'b': 'acbbbbdddb', 'c': 'aacccbbbddc', 'd': 'acbbbbddacbbdd'}, 'bcb': {'a': 'b', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbbbbddddc': {'a': 'acbbbbddddca', 'b': 'acbbbbdddcb', 'c': 'acb', 'd': 'acbbbbdddcdd'}, 'acccc': {'a': 'aaccbca', 'b': 'accccb', 'c': 'acccc', 'd': 'b'}, 'acbbbbddacbbbbbcbbdb': {'a': 'b', 'b': 'acbbbbddacbbbbbcbbdbb', 'c': 'b', 'd': 'acbbbbdddb'}, 'aaccbcbbbd': {'a': 'aa', 'b': 'aaccbcbbbdb', 'c': 'b', 'd': 'aacccbbbd'}, 'acbbbbddaccbcbbba': {'a': 'acbbbbddddca', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'acacb': {'a': 'acacba', 'b': 'acbb', 'c': 'b', 'd': 'aacbcacbd'}, 'aacccbbbacb': {'a': 'b', 'b': 'aacccbbbacbb', 'c': 'b', 'd': 'aacbcbd'}, 'acbbbbdddcbb': {'a': 'b', 'b': 'acbbbbdddcbbb', 'c': 'b', 'd': 'acbbbbdddcbbbd'}, 'acbbbbddaccbd': {'a': 'acbbbbddaccbda', 'b': 'acbbbbddacbbbbbdcd', 'c': 'acbbbbddaccbdc', 'd': 'acbbbbddaccbd'}, 'acbbbbddacbbbbbdacbbbbaa': {'a': 'acbbbbddacbbbbbdacbbbbaaa', 'b': 'b', 'c': 'acbbbbddacbbbbbdacbbbbaac', 'd': 'acbbbbdddcd'}, 'ddd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbdd'}, 'acbbbbddacbcc': {'a': 'b', 'b': 'aacccbbbacb', 'c': 'aacbccc', 'd': 'b'}, 'acbbbbddacbbbbbddd': {'a': 'acbbbbddacbbbbbdda', 'b': 'acbbbbddacbbbbbddb', 'c': 'acbbbbddacbbbbbdddc', 'd': 'acbbbbddacbbbbbdddd'}, 'dacbb': {'a': 'dacbba', 'b': 'dacbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbddaccbcbbbd': {'a': 'acbbbbdda', 'b': 'acbbbbbdb', 'c': 'acbbbbdddcc', 'd': 'acbbbbddd'}, 'acbbbbddacbbbbbddacc': {'a': 'aa', 'b': 'acbbbbddacbbbbbddacb', 'c': 'acbbbbddaccc', 'd': 'acbbbbddacbbbbbddaccd'}, 'acbbbbddacbbbbbddaad': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbbbbbdaba', 'd': 'acbbbbddacbbbbbddaaabdd'}, 'acacbac': {'a': 'b', 'b': 'b', 'c': 'aacbcac', 'd': 'b'}, 'acbbbbddaccbda': {'a': 'acbbbbddaccbdaa', 'b': 'acbbbbddaccbdab', 'c': 'acbbbbddac', 'd': 'acbbbbddacbbbbbdaba'}, 'acbbbbddacbbbbbdddddabb': {'a': 'acbbbbddacbbbbbdaba', 'b': 'acbbbbddacbbbbbdddddabbb', 'c': 'b', 'd': 'dd'}, 'dacbbb': {'a': 'acbbbbdddcdd', 'b': 'dacbbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbbddda': {'a': 'acbbbbddacbbbbbddaa', 'b': 'acbbbbddacbbdc', 'c': 'acbbbbddacbbbbddac', 'd': 'acbbbbddacbbbbddacdd'}, 'acccbbb': {'a': 'acbbbbdddcd', 'b': 'dacbbbb', 'c': 'b', 'd': 'acbbbbdd'}, 'acbbbbddacbbbbbddacbcc': {'a': 'acacba', 'b': 'acbb', 'c': 'aacbccc', 'd': 'aacd'}, 'acbbbbdddca': {'a': 'da', 'b': 'b', 'c': 'acbbbbdddcac', 'd': 'b'}, 'acbbbbddacbbbbbddaccd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'acbbbbddaccd'}, 'acbbbbddaccbcbbb': {'a': 'acbbbbddaccbcbbba', 'b': 'acbbbbddaccbcbbbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbddaccbcbbbd'}, 'acbbbbdddc': {'a': 'acbbbbdddca', 'b': 'acbbbbdddcb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbdad': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbbbbbaa', 'd': 'acbbbbddacbbbbbddaaabd'}, 'acbbbbddacbbbbbdddc': {'a': 'aacccbbba', 'b': 'acbbbbdddcbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbdddcdd'}, 'acbbbbdd': {'a': 'acbbbbdda', 'b': 'acbbbbdddb', 'c': 'b', 'd': 'acbbbbddd'}, 'acbbbbddaccc': {'a': 'aa', 'b': 'acbbbbddaccb', 'c': 'acbbbbddaccc', 'd': 'acbbbbdddcdd'}, 'aacccbba': {'a': 'aa', 'b': 'b', 'c': 'aaccbcac', 'd': 'acbbbbdddcdd'}, 'acbbbbddddca': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddddcac', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbbbbddacbcb': {'a': 'acbbbbdddcdd', 'b': 'aaccbcbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbddacbbbbbddaaacab': {'a': 'aa', 'b': 'acbbbbddacbbbbbddaaacabb', 'c': 'acbbbbbdacc', 'd': 'acbbbbddacbbbbbddaccd'}, 'acbbbbddacbbbbbda': {'a': 'acbbbbddacbbbbbdaa', 'b': 'acbbbbddacbbbbbdab', 'c': 'acbbbbddacbbbbbdac', 'd': 'dd'}, 'acbbbbdddcbbbdddaaaa': {'a': 'acbbbbdddcbbbdddaaaaa', 'b': 'acbbbbdddcbbbdddaaaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'a'}, 'acbbbbddacbcba': {'a': 'dacbba', 'b': 'b', 'c': 'b', 'd': 'b'}, 'aacccbbda': {'a': 'acbbbbddacbbbbbdaa', 'b': 'acbbbbdddcdd', 'c': 'acbbbbddac', 'd': 'acbbbbddacbbbbbddaaabdd'}, 'acbbbbddacbbdaa': {'a': 'acbbbbddacbbbbbddaaa', 'b': 'acbbbbddaccbdaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbdddcbbbdddaaad'}, 'acbbbbddacbbbbbc': {'a': 'b', 'b': 'acbbbbddacbbbbbcb', 'c': 'b', 'd': 'acbbbbdddb'}, 'aacccbbd': {'a': 'aacccbbda', 'b': 'b', 'c': 'acbbbbdddcdd', 'd': 'acbbbbddacbbbbbddacbd'}, 'acbbbbddaccbdc': {'a': 'aa', 'b': 'aacbcb', 'c': 'acbbbbddaccbdcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddd': {'a': 'acbbbbddda', 'b': 'acbbbbdddb', 'c': 'acbbbbddddc', 'd': 'acbbbbdddd'}, 'aacbcbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'dacbd'}, 'acbbbbdddcbbbdddaaabbb': {'a': 'acbbbbdddcdd', 'b': 'aacccbcbbb', 'c': 'b', 'd': 'acbdd'}, 'acbbbbddacbbbbbddaac': {'a': 'acbbbbdddcbbbdddaaaa', 'b': 'acbbbbddaccb', 'c': 'acbbbbddac', 'd': 'acbbbbddacbbbbbddaacd'}, 'accccbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbbdacbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbbddd': {'a': 'acbbbbbddda', 'b': 'acbbbbdddb', 'c': 'acbbbbdddc', 'd': 'acbbbbddd'}, 'acbbbbdddcbbbdddaaa': {'a': 'acbbbbdddcbbbdddaaaa', 'b': 'acbbbbdddcbbbdddaaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbdddcbbbdddaaad'}, 'dacbbbb': {'a': 'b', 'b': 'acbbbbb', 'c': 'b', 'd': 'dacbbbbd'}, 'acbbbbddacbbbbdda': {'a': 'acbbbbddacbbbbbddaa', 'b': 'acbbbbddacbbbbddab', 'c': 'acbbbbddacbbbbddac', 'd': 'aaccbd'}, 'aacd': {'a': 'aaccbcaa', 'b': 'b', 'c': 'b', 'd': 'b'}, 'acbbbbddacbbbbbddaa': {'a': 'acbbbbddacbbbbbddaaa', 'b': 'aaccb', 'c': 'acbbbbddacbbbbbddaac', 'd': 'acbbbbddacbbbbbddaad'}, 'acbbbbddacbbbbddacdd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcd', 'd': 'acbbbbddacbbbbddacddd'}, 'acbbbbddaccd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbddacbdb': {'a': 'acbbbbdddcd', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'accccba': {'a': 'acccbaa', 'b': 'b', 'c': 'aaccbca', 'd': 'aacd'}, 'acbbbbddacbbbbbddaaaca': {'a': 'acbbbbddacbbbbbddaaaca', 'b': 'acbbbbddacbbbbbddaaacab', 'c': 'acbbbbddac', 'd': 'a'}, 'acbbbbddacbbbbbddacbc': {'a': 'aacccbba', 'b': 'acbbbbddacbbbbbddacbcb', 'c': 'acbbbbddacbbbbbddacbcc', 'd': 'acbbbbdddcdd'}, 'acbbbbdddcbbbd': {'a': 'acbbbbddaccbdc', 'b': 'b', 'c': 'b', 'd': 'acbbbbdddcbbbdd'}, 'acbbbbddacbbbbbddaaa': {'a': 'acbbbbddacbbbbbddaaaa', 'b': 'acbbbbddacbbbbbddaaab', 'c': 'acbbbbddacbbbbbddaaac', 'd': 'acbbbbddacbbbbbddaaacd'}, 'acbbbbddaccbcb': {'a': 'acbbbbddacbbbbbaaa', 'b': 'acbbbbddaccbcbb', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbdddcbbbdddaaaaabab': {'a': 'aa', 'b': 'acbbbbddacbbbbbdaabb', 'c': 'acbbbbdddcbbbdddaaaaababc', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbddaaacabbb': {'a': 'acbbbbddacbbba', 'b': 'acbbbbddacbbbbbddaaacabbbb', 'c': 'b', 'd': 'aacccbbbd'}, 'aaccbca': {'a': 'aaccbcaa', 'b': 'b', 'c': 'aaccbcac', 'd': 'b'}, 'acbbbbddacbbbbbcbb': {'a': 'b', 'b': 'acbbbbdddcbbbb', 'c': 'b', 'd': 'acbbbbddacbbbbbcbbd'}, 'aaccbcaaaccbaa': {'a': 'aaccbcaaaa', 'b': 'b', 'c': 'aaccbcaaaccbaac', 'd': 'b'}, 'aacb': {'a': 'aa', 'b': 'aacbb', 'c': 'aacbc', 'd': 'aacccbcbd'}, 'acbbbbddacbbbbbdacbbbbaac': {'a': 'aaccbcaa', 'b': 'aacccbbbacb', 'c': 'aaccbca', 'd': 'aacd'}, 'aacccbbbbd': {'a': 'acbbbbddacbbda', 'b': 'acbbbbdb', 'c': 'acbbbbdddcc', 'd': 'acbbbbddd'}, 'aacbc': {'a': 'aacbca', 'b': 'aacbcb', 'c': 'aacbcc', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbbbbdaab': {'a': 'aa', 'b': 'acbbbbddacbbbbbdaabb', 'c': 'b', 'd': 'dd'}, 'acbbbbddacbcb': {'a': 'acbbbbddacbcba', 'b': 'acbbb', 'c': 'b', 'd': 'dacbd'}, 'acbbbbddacbbbbbddacd': {'a': 'aa', 'b': 'b', 'c': 'acbbbbdddcd', 'd': 'acbbbbddacbbbbbddacdd'}, 'acbbbbbdacbbddcb': {'a': 'b', 'b': 'acbbbbbdacbbddcbb', 'c': 'b', 'd': 'acbbbbdddcbd'}, 'aacccc': {'a': 'aa', 'b': 'aaccccb', 'c': 'aacccc', 'd': 'acbbbbddacbcba'}, 'aaccbd': {'a': 'aa', 'b': 'b', 'c': 'aacd', 'd': 'aaccbd'}, 'acbbbbddacbbbbbcb': {'a': 'b', 'b': 'acbbbbddacbbbbbcbb', 'c': 'b', 'd': 'acbbbbdddbd'}, 'acbbbbddacbbbbdab': {'a': 'acbbbbddddca', 'b': 'acbbbbdddcb', 'c': 'b', 'd': 'acbbbbdddcdd'}, 'aaccc': {'a': 'aa', 'b': 'aacccb', 'c': 'aacccc', 'd': 'acbbbbddacbcba'}, 'acbbbbddacbbbbbd': {'a': 'acbbbbddacbbbbbda', 'b': 'acbbbbbdb', 'c': 'acbbbbddacbbbbbdc', 'd': 'acbbbbddacbbbbbdd'}, 'acbbbbd': {'a': 'aa', 'b': 'acbbbbdb', 'c': 'b', 'd': 'acbbbbdd'}, 'acbbbb': {'a': 'b', 'b': 'acbbbbb', 'c': 'b', 'd': 'acbbbbd'}, 'acbbbbddacbbbbd': {'a': 'acbbbbddacbbbbda', 'b': 'acbbbbbdb', 'c': 'acbbbbddacbbbbbdc', 'd': 'acbbbbddacbbbbdd'}, 'acbbbbddacbbbbbddc': {'a': 'aacd', 'b': 'acbbbbdddcbb', 'c': 'acbbbbdddcc', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbbbddac': {'a': 'acbbbbddacbbbbddaca', 'b': 'acbbbbddaccb', 'c': 'acbbbbddacbbbbbddacc', 'd': 'acbbbbddacbbbbddacd'}, 'acccbb': {'a': 'acbbbbdddcdd', 'b': 'acccbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbddacbbbbbdddd': {'a': 'acbbbbddacbbbbbdda', 'b': 'acbbbbdddb', 'c': 'acbbbbddacbbbbbddddc', 'd': 'acbbbbddacbbbbbddddd'}, 'accbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'aacccbcbd'}, 'dd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'ddd'}, 'acbbbbddacbbbbbddaaacd': {'a': 'aa', 'b': 'b', 'c': 'aacccbba', 'd': 'acbbbbddacbbbbbdaba'}, 'aacccbcbd': {'a': 'aa', 'b': 'b', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbddacbbbbbddacb': {'a': 'acbbbbbda', 'b': 'acbbbbddaccbb', 'c': 'acbbbbddacbbbbbddacbc', 'd': 'acbbbbddacbbbbbddacbd'}, 'aaccbcaaaaa': {'a': 'aa', 'b': 'b', 'c': 'aaccbcaaaaac', 'd': 'b'}, 'acbbbbddacbbbbbdacbbbbaaa': {'a': 'aa', 'b': 'b', 'c': 'aa', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbbbddacabc': {'a': 'aacccbba', 'b': 'aacccbbbacb', 'c': 'acbbbbddacbbbbbddacbcc', 'd': 'acbbbbddacbcba'}, 'acbbbbdddcbbbdddaaaaabbb': {'a': 'aacccbba', 'b': 'acbbbbdddcbbbdddaaaaabbbb', 'c': 'b', 'd': 'aacccbcbd'}, 'acbbbbdddcbbbdddaaaaabc': {'a': 'aa', 'b': 'acbbbbdddcbbbdddaaaaabcb', 'c': 'aacccc', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbaaa': {'a': 'aa', 'b': 'b', 'c': 'acbbbbddacbbbbbaaac', 'd': 'aacd'}, 'aaccbcaaaaacb': {'a': 'acbbbbddacbbbbbaaa', 'b': 'aacccbcb', 'c': 'b', 'd': 'aacbcacbd'}, 'aacccbbba': {'a': 'aa', 'b': 'b', 'c': 'aacccbbbac', 'd': 'acbbbbdddcdd'}, 'acbbbbddacbbbbbcbbdbb': {'a': 'b', 'b': 'acbbbbdddcbb', 'c': 'b', 'd': 'acbbbbdddb'}, 'acbbbbddacbbbbbddab': {'a': 'aa', 'b': 'acbbbbdddcbb', 'c': 'b', 'd': 'dd'}, 'acbbbbddaccbcc': {'a': 'aaccbcaa', 'b': 'acbbbbddacbbbbbddacbcb', 'c': 'acbbbbddaccbcc', 'd': 'acbbbbdddcd'}, 'acbbbbddacbbbbbdaa': {'a': 'acbbbbddaccbda', 'b': 'acbbbbddacbbbbbdaab', 'c': 'acbbbbddaccc', 'd': 'acbbbbddacbbbbbdaba'}, 'dacbba': {'a': 'aa', 'b': 'b', 'c': 'aacbcac', 'd': 'aacd'}, 'aaccbcaca': {'a': 'aaccbcacaa', 'b': 'b', 'c': 'acccbac', 'd': 'b'}, 'acbbbbddacbbbbbddaaacabb': {'a': 'aa', 'b': 'acbbbbddacbbbbbddaaacabbb', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbddacbbbbbdacb': {'a': 'aa', 'b': 'acbbbbddacbbbbbdacbb', 'c': 'b', 'd': 'aaccbd'}, 'acbbbbddacbbbbbdacbbb': {'a': 'acbbbbdddcdd', 'b': 'acbbbbddacbbbbbdacbbbb', 'c': 'acbbbbdddcb', 'd': 'acbbbbddacbbbbd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (b | (a | (c | d))))   True          100.0      100.0              100.0                              100.0        10.308832          None            None  [a, , c, b, d]          0         0         4          324                    100.0                                    100.0              28.135729         True      0.5   0.05
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12863922119140625  s
No positive counterexample found
EQ test took  0.003973960876464844  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11978888511657715  s
EQ test took  0.0016200542449951172  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.18251681327819824  s
No positive counterexample found
EQ test took  0.022513151168823242  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3515496253967285  s
No positive counterexample found
EQ test took  0.022122621536254883  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'd']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x3 | (x2 | x0)))
Learning formula with depth 3
learned LTL formula: (~ (d | (a | c)))
Learning took:  1.047034740447998  s
No positive counterexample found
EQ test took  0.053732872009277344  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'c', 'd', 'b']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (x2 | (x3 | (x1 | x0))))
Learning formula with depth 4
learned LTL formula: (~ (c | (d | (a | b))))
Learning took:  7.465870380401611  s
EQ test took  0.06451940536499023  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (c | (d | (a | b))))

Time taken to extract ltl: 9.472514390945435
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.0)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.025120019912719727
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (c | (d | (a | b))))   True          100.0      100.0              100.0                              100.0         9.472514          None            None  [a, , c, d, b]          0         0         4            4                    100.0                                    100.0                0.02512         True     0.25    0.5
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12057948112487793  s
No positive counterexample found
EQ test took  0.00489497184753418  s
new counterexample: d  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['d']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12045502662658691  s
EQ test took  0.0015606880187988281  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['d']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x3)
Learning formula with depth 1
learned LTL formula: (~ d)
Learning took:  0.17748761177062988  s
No positive counterexample found
EQ test took  0.03596377372741699  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x3))
Learning formula with depth 2
learned LTL formula: (~ (c | d))
Learning took:  0.3477654457092285  s
No positive counterexample found
EQ test took  0.0283353328704834  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x2 | x3) | x1))
Learning formula with depth 3
learned LTL formula: (~ (b | (c | d)))
Learning took:  1.1054062843322754  s
No positive counterexample found
EQ test took  0.05529975891113281  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c', 'b', 'a']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (((x1 | x0) | x3) | x2))
Learning formula with depth 4
learned LTL formula: (~ (c | (d | (a | b))))
Learning took:  8.139522314071655  s
EQ test took  0.07309079170227051  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (c | (d | (a | b))))

Time taken to extract ltl: 10.218630313873291
overall guided extraction time took: 0.05999999999994543
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.01999999999998181)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.058443546295166016
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (c | (d | (a | b))))   True          100.0      100.0              100.0                              100.0         10.21863          None            None  [d, , c, b, a]          0         0         4            4                    100.0                                    100.0               0.058444         True     0.25   0.25
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12723660469055176  s
No positive counterexample found
EQ test took  0.005940437316894531  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12305736541748047  s
EQ test took  0.0015528202056884766  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17637300491333008  s
No positive counterexample found
EQ test took  0.022855043411254883  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x1 | x2))
Learning formula with depth 2
learned LTL formula: (~ (b | c))
Learning took:  0.35996246337890625  s
No positive counterexample found
EQ test took  0.04439806938171387  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'd']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x2 | (x3 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (c | (b | d)))
Learning took:  1.2254104614257812  s
No positive counterexample found
EQ test took  0.062354087829589844  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'd', 'a']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! ((x3 | x2) | (x1 | x0)))
Learning formula with depth 3
learned LTL formula: (~ ((a | b) | (c | d)))
Learning took:  7.74640679359436  s
EQ test took  0.08757591247558594  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: ~F(d)
final ltl:  (~ ((a | b) | (c | d)))

Time taken to extract ltl: 9.99126935005188
overall guided extraction time took: 0.2999999999999545
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.06999999999993634)
('dd', 0.09999999999990905)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.29935312271118164
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ ((a | b) | (c | d)))   True          100.0      100.0              100.0                              100.0         9.991269          None            None  [c, , b, d, a]          0         0         3            4                    100.0                                    100.0               0.299353         True     0.25    0.1
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12333297729492188  s
No positive counterexample found
EQ test took  0.00683283805847168  s
new counterexample: d  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['d']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1113424301147461  s
EQ test took  0.0015747547149658203  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['d']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x3)
Learning formula with depth 1
learned LTL formula: (~ d)
Learning took:  0.17622041702270508  s
No positive counterexample found
EQ test took  0.0264279842376709  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x2 | x3))
Learning formula with depth 2
learned LTL formula: (~ (c | d))
Learning took:  0.3478424549102783  s
No positive counterexample found
EQ test took  0.049121856689453125  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x2 | x3) | x1))
Learning formula with depth 3
learned LTL formula: (~ (b | (c | d)))
Learning took:  1.1051650047302246  s
No positive counterexample found
EQ test took  0.06983709335327148  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'c', 'b', 'a']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (((x1 | x0) | x3) | x2))
Learning formula with depth 4
learned LTL formula: (~ (c | (d | (a | b))))
Learning took:  8.189096689224243  s
EQ test took  0.09323477745056152  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (c | (d | (a | b))))

Time taken to extract ltl: 10.308416366577148
overall guided extraction time took: 0.6299999999998818
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.13999999999987267)
('dd', 0.2300000000000182)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.6335828304290771
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (c | (d | (a | b))))   True          100.0      100.0              100.0                              100.0        10.308416          None            None  [d, , c, b, a]          0         0         4            4                    100.0                                    100.0               0.633583         True     0.25   0.05
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12648653984069824  s
No positive counterexample found
EQ test took  0.006533384323120117  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1315758228302002  s
EQ test took  0.0015642642974853516  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ a)
Learning took:  0.17943716049194336  s
No positive counterexample found
EQ test took  0.04094076156616211  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'd']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x3 | x0))
Learning formula with depth 2
learned LTL formula: (~ (a | d))
Learning took:  0.3423044681549072  s
No positive counterexample found
EQ test took  0.0762939453125  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'd', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x3 | x2) | x0))
Learning formula with depth 3
learned LTL formula: (~ (a | (c | d)))
Learning took:  1.00223708152771  s
No positive counterexample found
EQ test took  0.10397148132324219  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['a', 'd', 'c', 'b']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (x2 | (x0 | (x3 | x1))))
Learning formula with depth 4
learned LTL formula: (~ (c | (a | (b | d))))
Learning took:  8.871411085128784  s
EQ test took  0.1525864601135254  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (c | (a | (b | d))))

Time taken to extract ltl: 11.044187307357788
overall guided extraction time took: 0.01999999999998181
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.0)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.02615809440612793
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (c | (a | (b | d))))   True          100.0      100.0              100.0                              100.0        11.044187          None            None  [a, , d, c, b]          0         0         4            4                    100.0                                    100.0               0.026158         True      0.1    0.5
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12513041496276855  s
No positive counterexample found
EQ test took  0.00891566276550293  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12475037574768066  s
EQ test took  0.0015475749969482422  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1876506805419922  s
No positive counterexample found
EQ test took  0.031181812286376953  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'd']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x3 | x2))
Learning formula with depth 2
learned LTL formula: (~ (c | d))
Learning took:  0.3550529479980469  s
No positive counterexample found
EQ test took  0.0707850456237793  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'd', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x2 | (x3 | x1)))
Learning formula with depth 3
learned LTL formula: (~ (c | (b | d)))
Learning took:  1.0547757148742676  s
No positive counterexample found
EQ test took  0.1369493007659912  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'd', 'b', 'a']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! ((x0 | x2) | (x1 | x3)))
Learning formula with depth 3
learned LTL formula: (~ ((a | c) | (b | d)))
Learning took:  8.215895414352417  s
EQ test took  0.1765003204345703  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: ~F(d)
final ltl:  (~ ((a | c) | (b | d)))

Time taken to extract ltl: 10.499524354934692
overall guided extraction time took: 0.09999999999990905
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.01999999999998181)
('dd', 0.03999999999996362)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.09653329849243164
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ ((a | c) | (b | d)))   True          100.0      100.0              100.0                              100.0        10.499524          None            None  [c, , d, b, a]          0         0         3            4                    100.0                                    100.0               0.096533         True      0.1   0.25
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12361836433410645  s
No positive counterexample found
EQ test took  0.011583805084228516  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12337446212768555  s
EQ test took  0.0015916824340820312  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.18231439590454102  s
No positive counterexample found
EQ test took  0.0708773136138916  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x2))
Learning formula with depth 2
learned LTL formula: (~ (a | c))
Learning took:  0.3621697425842285  s
No positive counterexample found
EQ test took  0.09431099891662598  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! (x1 | (x0 | x2)))
Learning formula with depth 3
learned LTL formula: (~ (b | (a | c)))
Learning took:  1.0543904304504395  s
No positive counterexample found
EQ test took  0.15256738662719727  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a', 'b', 'd']



4  iteration complete



start formula depth: 6
increasing formula depth to  7
increasing formula depth to  8
Before normalization: (! (x3 | ((x1 | x2) | x0)))
Learning formula with depth 4
learned LTL formula: (~ (d | (a | (b | c))))
Learning took:  7.902591705322266  s
EQ test took  0.20044207572937012  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: ~F(d)
final ltl:  (~ (d | (a | (b | c))))

Time taken to extract ltl: 10.288589477539062
overall guided extraction time took: 0.3000000000001819
generated counterexamples were: (format: (counterexample, counterexample generation time))
('d', 0.07000000000016371)
('dd', 0.09999999999990905)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3031437397003174
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'd'}, 'd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}, 'a': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'a'}, 'dd': {'a': 'a', 'b': 'a', 'c': 'a', 'd': 'dd'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target  query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
alternating bit protocol  ~F(d)  (~ (d | (a | (b | c))))   True          100.0      100.0              100.0                              100.0        10.288589          None            None  [c, , a, b, d]          0         0         4            4                    100.0                                    100.0               0.303144         True      0.1    0.1
target: alternating bit protocol
query: ~F(d)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13039183616638184  s
No positive counterexample found
EQ test took  0.013654470443725586  s
new counterexample: d  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['d']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11769437789916992  s
EQ test took  0.0015530586242675781  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['d']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x3)
Learning formula with depth 1
learned LTL formula: (~ d)
Learning took:  0.17551660537719727  s
No positive counterexample found
EQ test took  0.03615283966064453  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'a']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x3))
Learning formula with depth 2
learned LTL formula: (~ (a | d))
Learning took:  0.35735130310058594  s
No positive counterexample found
EQ test took  0.08277153968811035  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'a', 'c']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((x3 | x0) | x2))
Learning formula with depth 3
learned LTL formula: (~ (c | (a | d)))
Learning took:  1.2610969543457031  s
No positive counterexample found
EQ test took  0.18222332000732422  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['d', 'a', 'c', 'b']



4  iteration complete



