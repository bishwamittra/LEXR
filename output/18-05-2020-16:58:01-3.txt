made train set of size: 6145 , of which positive examples: 3548
out of  6145  sequences 3548  are positive. (percent:  0.577379983726607 )
examples per length: [0, 3, 9, 27, 52, 84, 148, 276, 532, 1044, 1080, 702, 474, 342, 218, 134, 130, 90, 72, 54, 44, 22, 38, 22, 22, 24, 20, 22, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20, 20]
size of train set: 5530
size of test set: 615
The dy.parameter(...) call is now DEPRECATED.
        There is no longer need to explicitly add parameters to the computation graph.
        Any used parameter will be added automatically.
classification loss on last batch was: 0.00038338304377103817
testing on train set, i.e. test set is train set
rnn score against target on test set:                              615 (100.0)
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12980055809020996  s
No positive counterexample found
EQ test took  0.03874373435974121  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11831259727478027  s
EQ test took  0.0014920234680175781  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.1695089340209961  s
EQ test took  0.029080629348754883  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ca']


negative traces---> 
['c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x2 U (! x2))
Learning formula with depth 2
learned LTL formula: (c U (~ c))
Learning took:  0.2429046630859375  s
EQ test took  0.08254408836364746  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ca']


negative traces---> 
['c', 'b']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (! ((G x2) | x1))
Learning formula with depth 3
learned LTL formula: (~ (b | (G c)))
Learning took:  0.6820757389068604  s
EQ test took  0.033899784088134766  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ca', 'ba']


negative traces---> 
['c', 'b']



4  iteration complete



start formula depth: 5
Before normalization: ((x2 | x1) U (! (x2 | x1)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5546205043792725  s
EQ test took  0.20484161376953125  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 2.2958319187164307
overall guided extraction time took: 0.12000000000000455
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.010000000000005116)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.1255640983581543
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'ac': {'a': 'ac', 'b': 'ac', 'c': 'ac'}, 'b': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ac', 'b': 'ac', 'c': 'ac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0         2.295832          None            None  [c, , ca, b, ba]          0         0         3            4                    100.0                                    100.0               0.125564         True      0.1    0.1
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1184849739074707  s
No positive counterexample found
EQ test took  0.04726910591125488  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11264204978942871  s
EQ test took  0.0015003681182861328  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17475104331970215  s
EQ test took  0.018801212310791016  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.24827098846435547  s
EQ test took  0.10677003860473633  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6919765472412109  s
EQ test took  0.12067484855651855  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5788195133209229  s
EQ test took  0.2256333827972412  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 2.453280210494995
overall guided extraction time took: 0.28999999999999204
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.01999999999998181)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.2911643981933594
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'ac': {'a': 'ac', 'b': 'ac', 'c': 'ac'}, 'b': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ac', 'b': 'ac', 'c': 'ac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0          2.45328          None            None  [b, , ba, c, ca]          0         0         3            4                    100.0                                    100.0               0.291164         True      0.1   0.05
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11659955978393555  s
No positive counterexample found
EQ test took  0.06844305992126465  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11181306838989258  s
EQ test took  0.0015020370483398438  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1748805046081543  s
EQ test took  0.024698495864868164  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.2510843276977539  s
EQ test took  0.11745572090148926  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6817970275878906  s
EQ test took  0.12176918983459473  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5567996501922607  s
EQ test took  0.2732865810394287  s


epsilon= 0.1 delta= 0.01 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 2.5080082416534424
overall guided extraction time took: 1.9399999999999977
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.15000000000000568)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 1.9333748817443848
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'ac': {'a': 'ac', 'b': 'ac', 'c': 'ac'}, 'b': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ac', 'b': 'ac', 'c': 'ac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0         2.508008          None            None  [b, , ba, c, ca]          0         0         3            4                    100.0                                    100.0               1.933375         True      0.1   0.01
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11738181114196777  s
No positive counterexample found
EQ test took  0.06774783134460449  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11241722106933594  s
EQ test took  0.0014688968658447266  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17332768440246582  s
EQ test took  0.03236794471740723  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.24786901473999023  s
EQ test took  0.17257380485534668  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.665302038192749  s
EQ test took  0.22381997108459473  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5700056552886963  s
EQ test took  0.3954806327819824  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 2.7878828048706055
overall guided extraction time took: 0.11999999999997613
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.009999999999990905)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.12551450729370117
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'ac': {'a': 'ac', 'b': 'ac', 'c': 'ac'}, 'b': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ac', 'b': 'ac', 'c': 'ac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0         2.787883          None            None  [b, , ba, c, ca]          0         0         3            4                    100.0                                    100.0               0.125515         True     0.05    0.1
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10448312759399414  s
No positive counterexample found
EQ test took  0.08494973182678223  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.09486246109008789  s
EQ test took  0.000986337661743164  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.18038630485534668  s
EQ test took  0.02245807647705078  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.24114775657653809  s
EQ test took  0.17877626419067383  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6853921413421631  s
EQ test took  0.19853591918945312  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5704255104064941  s
EQ test took  0.4334139823913574  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 2.80385422706604
overall guided extraction time took: 0.28999999999999204
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ab', 0.030000000000001137)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.2922382354736328
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'ab': {'a': 'ab', 'b': 'ab', 'c': 'ab'}, 'b': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ab', 'b': 'ab', 'c': 'ab'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0         2.803854          None            None  [b, , ba, c, ca]          0         0         3            4                    100.0                                    100.0               0.292238         True     0.05   0.05
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12044525146484375  s
No positive counterexample found
EQ test took  0.1060333251953125  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11395692825317383  s
EQ test took  0.0015118122100830078  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17663908004760742  s
EQ test took  0.031610727310180664  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.24086284637451172  s
EQ test took  0.22905468940734863  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6806333065032959  s
EQ test took  0.2849903106689453  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5587477684020996  s
EQ test took  0.5357317924499512  s


epsilon= 0.05 delta= 0.01 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 3.088169813156128
overall guided extraction time took: 97.74000000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.18000000000000682)
('cbabbbccbbbccbbcbccbcbcccb', 1.7699999999999818)
('cbcbbabbcccbccbcbbbcbcbbbbcb', 2.1500000000000057)
('bbbbbabbccbabacbbcccbccccbbccbccbccbbcc', 2.230000000000018)

Time taken to extract lstar-dfa: 97.75109028816223
number of states of the dfa: 306
returned flag: True
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'cbabbbccbbbcc': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbbccb', 'c': 'cbabbbccbbbccc'}, 'cbcbbac': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbab', 'c': 'cbabb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbcc'}, 'cbabbbccbbbccbbcbcc': {'a': 'cbabb', 'b': 'cbabbbccbbbccbbcbccb', 'c': 'cbabbbccbbbccbbcbccc'}, 'cbcbbabbcccbccbcbba': {'a': 'bbbbbabbccbabac', 'b': 'cbabb', 'c': 'cbcbbabbcccbccbcbbac'}, 'bbbbbabbccbabacbbcccbccccbbbccbbbbcb': {'a': 'cbabbb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbccbbbbcb'}, 'bbbbbabbccbabacbbcccbccccbbbbbba': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbab', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbac'}, 'cbcbbabbccc': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccb', 'c': 'cbcbbabbcccc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbabbbccbbbccbbcbcccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbc'}, 'cbabbbccbbbccbbcbccb': {'a': 'bbbbbab', 'b': 'cbabbbccbbbccbbcbccbb', 'c': 'cbabbbccbbbccbbcbccbc'}, 'bbbbbabbccbabacbbcccbcccca': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbbcccbccccbba', 'c': 'bbbbbabbccbabacbbcccbcccca'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb'}, 'cbcbbabbcccbccbcbbbb': {'a': 'cbcbbab', 'b': 'cbcbbabbcccbccbcbbbbb', 'c': 'cbcbbabbcccbccbcbbbcb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbcacb': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbab'}, 'cbcbbabbcccbccbcbbcc': {'a': 'cbcbbabbcccbccbcbbcca', 'b': 'cbabbbccbbbccbbcbc', 'c': 'cbcbbabbcccbccbcbbccc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbb', 'c': 'cbabbbccbbbccbbbbb'}, 'cbabbbccc': {'a': 'bbbbbabbccbabacbb', 'b': 'cbabbbcccb', 'c': 'cbabbbcccc'}, 'cbcbbabbcccbccbcbbbcbcbbbbca': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcab', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcac'}, 'bbbbbabbccbabacbbcccbccccbbbbbbab': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabcc': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabccb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabb'}, 'cbabbbccbbbccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'cbabbbccbbbccbb', 'c': 'cbabbbccbbbccbc'}, 'cbabbbccbb': {'a': 'bbbbbabbccbab', 'b': 'cbabbbccbbb', 'c': 'cbabbbccbbc'}, 'bbbbbabbccba': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbab', 'c': 'bbbbbabbccba'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbac': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbacb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac'}, 'cbabbbccbbbccbbcbccccb': {'a': 'bbbbbab', 'b': 'cbabbbccbbbccbbcbccbcbc', 'c': 'cbabbbccbbbccbbcbccccbc'}, 'cbabbbccbbbccbbcbccbcbcccca': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'c': 'cbabbbccbbbccbbcbccccbcba'}, 'cbcbbabbcccbccbcbbbcbcbbbbcb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbccccc': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcccc'}, 'bbbbbabbccbabacbbcccbc': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbccc', 'c': 'bbbbbabbccbabacbbcccbcc'}, 'cbcbbabbcccbccbcbbbcbcbcbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbb', 'c': 'cbabbbccbbbccbbcbccbcbccb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbc': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbb'}, 'c': {'a': 'cba', 'b': 'cb', 'c': 'cc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbb': {'a': 'a', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcb', 'c': 'cbabbbccbbbccbbcbccbcbcccbb'}, 'cbcbbabbcccc': {'a': 'bbbbbabbccbabacbb', 'b': 'cbcbbabbcccbc', 'c': 'cbcbbabbccccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbb': {'a': 'cbabbbc', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbabbbccbbbccbbcbccccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcc'}, 'cbcbbabbcccbccbcbb': {'a': 'cbcbbabbcccbccbcbba', 'b': 'cbcbbabbcccbccbcbbb', 'c': 'cbcbbabbcccbccbcbbc'}, 'cbabbbccbbbccbbcbccbcbcccc': {'a': 'cbabbbccbbbccbbcbccbcbcccca', 'b': 'cbabbbccbbbccbbcbccbcbcccbc', 'c': 'cbabbbccbbbccbbcbccbcbcccc'}, 'cbcbbabbcccbccbcbbbcbc': {'a': 'cbcbbab', 'b': 'cbcbbabbcccbccbcbbbcbcb', 'c': 'cbabbbccbbbccbbcbcccc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcabc': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcabcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabc'}, 'bbbbbab': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabb', 'c': 'cbabbb'}, 'bbbbbabbccbabacbbcccbccccb': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbb', 'c': 'bbbbbabbccbabacbbcccbccccbc'}, 'bbbbbabbccbabacbbcccbccccbbccccc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbcccbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbb'}, 'bbbbbabbccbabacbbcccbccccbbccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbc'}, 'cbcbbab': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabb', 'c': 'cbabbb'}, 'cbabbbccbbbccbbcbcccccc': {'a': 'cbabbbccbbbccbbcbcccccca', 'b': 'cbabbbccbbbccbbcbccccccb', 'c': 'cbabbbccbbbccbbcbccccccc'}, 'cbcbbbb': {'a': 'cbcbbbba', 'b': 'cbabbbccbbbccbbcbccbcbcccbc', 'c': 'cbcbbbb'}, 'bbbbbabbccbabacbbcccbccccbbbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbc'}, 'cbabbb': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbc', 'c': 'cbabbbc'}, 'cbabbbccbbbccbbcbccca': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'c': 'cbcbbab'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbbbb': {'a': 'bbbbbabbc', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcbb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcb': {'a': 'cbcbbabbcccbccbcbbcca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbc'}, 'cbcbbb': {'a': 'cbcbbba', 'b': 'cbcbbbb', 'c': 'cbcbbb'}, 'bbbbbabbccbabacbbcccbccccbbbccbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbccbbbbc'}, 'cbcbbabbcccbccbcbbc': {'a': 'ac', 'b': 'cbabbbccbbbccbbcbc', 'c': 'cbcbbabbcccbccbcbbcc'}, 'bbbbbabbccb': {'a': 'bbbbbabbccba', 'b': 'cbcbbabbcccbcc', 'c': 'cbcbbabbcccb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbb', 'c': 'cbabbbccbbbccbbb'}, 'cbcbba': {'a': 'bbbbbabbccbaba', 'b': 'cbcbbab', 'c': 'cbcbbac'}, 'bbbbbabbccbabacbbcccbccccbbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbccc'}, 'cbabbbcb': {'a': 'bbbbbabbccbabacbb', 'b': 'cbabbbccbb', 'c': 'cbabbbccb'}, 'cbabbbccbbbccbbcbccbc': {'a': 'bbbbbab', 'b': 'cbabbbccbbbccbbcbccbcb', 'c': 'cbabbbccbbbccbbcbccccb'}, 'bbbbbabbccbabacbbcccbccccbbccbbab': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbabb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbcacb'}, 'cbabbbccbbbccbbcbccccbc': {'a': 'cbcbbbba', 'b': 'cbabbbccbbbccbbcbccccbcb', 'c': 'cbabbbccbbbccbbcbccccccb'}, 'bbbb': {'a': 'cbcbbabbcccbccbcbbcca', 'b': 'bbbbb', 'c': 'bbbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbccc': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbcccc'}, 'bbbbbabbccbabacbbc': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbbccc', 'c': 'bbbbbabbccbabacbbcc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccba': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac'}, 'cbabbbccbbbccbbcbcccccca': {'a': 'bbbbbabbccbaba', 'b': 'cbabbbccbbbccbbcbccccbcba', 'c': 'cbcbbab'}, 'ac': {'a': 'bbbbbabbccbaba', 'b': 'acb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbca'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabb': {'a': 'bbbbbabbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbc'}, 'cbabbbccbbbccbbcbccccbcbc': {'a': 'cbabbbccbbbccbbcbccccbcbca', 'b': 'cbabbbccbbbccbbcbccbcbcccb', 'c': 'cbabbbccbbbccbbcbccbcbcccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbb': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbb', 'c': 'cbabbbcccb'}, 'cbab': {'a': 'bbbbbabbccbabac', 'b': 'cbabb', 'c': 'acb'}, 'bbbbbabbccbabacbbcccbccccbbccbbabb': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbcccccccc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabc'}, 'cbabbbccbbc': {'a': 'bbbbbabbccbab', 'b': 'cbabbbccbbcb', 'c': 'cbabbbccbbb'}, 'bbbbbabbccbabac': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacb', 'c': 'bbbbbabbccbabacb'}, 'cbabbbccbbbccbbcbc': {'a': 'cbabb', 'b': 'cbabbbccbbbccbbcbcb', 'c': 'cbabbbccbbbccbbcbcc'}, 'cbabbbccbbcb': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbbccb', 'c': 'cbabbbccbbcbc'}, 'cbcbb': {'a': 'cbcbba', 'b': 'cbcbbb', 'c': 'bbbbb'}, 'bbbbbabbccbabacb': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbb', 'c': 'bbbbbabbccbabacbb'}, 'cbabbbccbbbccbbcbccbcbccb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbabbbccbbbccbbcbccbcbcccbb', 'c': 'cbabbbccbbbccbbcbccbcbcccb'}, 'cbabbbccbbbccbbcbcccccccc': {'a': 'cbabbbccbbbccbbcbcccccca', 'b': 'cbcbbbb', 'c': 'cbcbbb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba': {'a': 'bbbbbabbccbaba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'c': 'cbcbbba'}, 'cbcbbabbcccbccbcbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccba', 'b': 'cbcbbabbcccbccbcbbbcb', 'c': 'cbcbbabbcccbccbcbbbc'}, 'cbabbbc': {'a': 'bbbbbabbccbabacb', 'b': 'cbabbbcb', 'c': 'cbabbbcc'}, 'cbcbbabbcccbccb': {'a': 'bbbbbabbccbab', 'b': 'cbabbbccbbbccc', 'c': 'cbcbbabbcccbccbc'}, 'cbcbbabbcccbccbcbbbbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'b': 'cbabbbccbbbccbbcbcbbbb', 'c': 'cbabbbccbbbccbbcbccbbb'}, 'cbabbbccb': {'a': 'bbbbbabbccba', 'b': 'cbabbbccbb', 'c': 'cbabbbcccb'}, 'cbabbbccbbbccbbcbccbcbcb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbc', 'c': 'cbabbbccbbbccbbcbccbcbccb'}, 'cbabbbccbbbccbbcbccccbcb': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbabbbccbbbccbbcbccbcbccb', 'c': 'cbabbbccbbbccbbcbccccbcbc'}, 'bbbbbabb': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbccc', 'c': 'bbbbbabbc'}, 'cbabbbccbbbcb': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'cbabbbccbbbcbb', 'c': 'cbabbbccbbbcbc'}, 'bbbbbabbccbab': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbbcccbccccbbccba', 'c': 'bbbbbabbccbab'}, 'ccc': {'a': 'cba', 'b': 'cbcb', 'c': 'bbb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbca': {'a': 'bbbbbabbccbaba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcab', 'c': 'ac'}, 'cba': {'a': 'bbbbbabbccbaba', 'b': 'cbab', 'c': 'cbac'}, 'bbbbbabbccbabacbbcccbccccbbccbccc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbcccc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbabbbccbbbccbbcbcccccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbccc'}, 'cbcbbabbcccbccbcbbbcbcb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'b': 'cbcbbabbcccbccbcbbbcbcbb', 'c': 'cbcbbabbcccbccbcbbbcbcbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbab': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabc'}, 'cbabbbccbbbccbbbbbbb': {'a': 'cbabbbccbbbccbbbbbbba', 'b': 'cbcbbabbcccbccbcbbbbbbb', 'c': 'cbabbbccbbbccbbcbcbbbb'}, 'cbabbbccbbbccbbcbccbb': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbabbbccbbbccbbcbccbbb', 'c': 'cbabbbccbbbccbbcbccbcb'}, 'bbbbbabbccbabacbbcccbcc': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbcccc', 'c': 'bbbbbabbccbabacbbcccbccc'}, 'cbabbbccbbbccbbcbccccbcbca': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'c': 'cbabbbccbbbccbbcbccbcbccba'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbb': {'a': 'bbbbba', 'b': 'cbcbbabbcccbccbcbbbcbc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccb', 'c': 'cbabbbccbbbcbb'}, 'cbcbbabbcccbccbcbbbcbcbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbc'}, 'bbbbbabbccbabacbbcccbccccbc': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbc', 'c': 'bbbbbabbccbabacbbcccbccccbcc'}, 'bbbbbabbccbabacbbcccbccccbbbccbbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbbbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbbccbbbbc'}, 'cbabbbccbbbcca': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'c': 'cbabbbccbbbcca'}, 'cbabbbccccc': {'a': 'bbbbbabbccba', 'b': 'cbcbbabbcccbc', 'c': 'cbabbbccbb'}, 'cbcbbabbcccbccbcbbbcbcbc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'b': 'cbcbbabbcccbccbcbbbcbcbcb', 'c': 'cbabbbccbbbccbbcbccccbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbcc': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbccc'}, 'bbbbbabbccbabacbbcccbcccccc': {'a': 'bbbbbabbccbabacbbcccbcccca', 'b': 'bbbbbabbccbabacbbcccbccccbcc', 'c': 'bbbbbabbccbabacbbcccbccccccc'}, 'cbcbbabbcccbccbcbbbcbcbb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbcbbabbcccbccbcbbbcbcbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbb': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbc': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbcc'}, 'bbbbbabbccbabacbbcccbccccbb': {'a': 'bbbbbabbccbabacbbcccbccccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbc'}, 'cbcbbabbcccbc': {'a': 'bbbbbabbccba', 'b': 'cbabbbccbbbc', 'c': 'cbcbbabbcccbcc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbca': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbcac'}, 'bbbbbabbccbabacbbcccbccccc': {'a': 'bbbbbabbccbabacbbcccbcccca', 'b': 'bbbbbabbccbabacbbcccbccccbc', 'c': 'bbbbbabbccbabacbbcccbcccccc'}, 'bbbbbabbccbabacbbcccbccccccc': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbc', 'c': 'bbbbbabbccbabacbbcccbcccccccc'}, 'cbcbbabbcccbccbcbbcccc': {'a': 'cbcbba', 'b': 'cbabbbccbbbccbbcbccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbc'}, 'cbabb': {'a': 'bbbbbabbccbabac', 'b': 'cbabbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba'}, 'cbabbbccbbbccbbcbccccccbc': {'a': 'cbcbbbba', 'b': 'cbabbbccbbbccbbcbccbcbcccbc', 'c': 'cbcbbbb'}, 'cbabbbcccb': {'a': 'bbbbbabbccba', 'b': 'cbabbbccbbc', 'c': 'cbabbbccbb'}, 'cbcbbabbcccbccbcbbbcbcbcb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbcbbabbcccbccbcbbbcbcbcbb', 'c': 'cbabbbccbbbccbbcbccccbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbbab', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcabcb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcabcbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcb'}, 'bbbbbabbccbabacbbcccbcccb': {'a': 'bbbbbabbccbabacbbcccbcccca', 'b': 'bbbbbabbccbabacbbcccbccccb', 'c': 'bbbbbabbccbabacbbcccbccccb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbc': {'a': 'bbbbbabbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbb'}, 'bbbbbabbccbabacbbcccbcccc': {'a': 'bbbbbabbccbabacbbcccbcccca', 'b': 'bbbbbabbccbabacbbcccbccccb', 'c': 'bbbbbabbccbabacbbcccbccccc'}, 'bbbbbabbccbabacbbcccbccccbbccbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccb'}, 'bbbbbabbccbabacbbcccbccccbbbba': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbab', 'c': 'bbbbbabbccbabacbbcccbccccbbccbba'}, 'cbcbbba': {'a': 'bbbbbabbccbabac', 'b': 'cbabbbccbbbccbbcbccccbcba', 'c': 'cbcbbab'}, 'cbcbbabbcccbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba', 'b': 'cbcbbabbcccbccbc', 'c': 'cbcbbabbcccbccb'}, 'bbbbbabbccbabacbbcccbccccbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbc'}, 'bbbbbabbccbabacbbcccbccccbba': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccba'}, 'cbabbbccbbbcbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'cbabbbccbbbcbcb', 'c': 'cbabbbccbbbccbc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbbb': {'a': 'cbabbbccbbbcca', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbb', 'c': 'cbabbbccbbc'}, 'bbbbbabbccbabacbbcccbccccbbccbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbc'}, 'cbabbbccbbbccbbcbccccccb': {'a': 'cbcbbbba', 'b': 'cbabbbccbbbccbbcbccccbcbc', 'c': 'cbabbbccbbbccbbcbccccccbc'}, 'bbbbbabbccbabacbbcccbccccbbbbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbcc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbbccbbbbcb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbccccc': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbcbccbcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbcbb'}, 'cbabbbccbbbccc': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbbccbc', 'c': 'cbabbbccbbbcccc'}, 'cbabbbccbbbccbbb': {'a': 'cbabb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbc', 'c': 'cbabbbccbbbccbbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabc': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabb'}, 'cbabbbccbbbcbcb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'cbabbbccbbbccbbcb', 'c': 'cbabbbccbbbccbbc'}, 'cbabbbccbbbcbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'cbabbbccbbbccbbb', 'c': 'cbabbbccbbbcbcb'}, 'bbbbbabbc': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccb', 'c': 'bbbbbabbcc'}, 'cbcbbabbcccb': {'a': 'bbbbbabbccba', 'b': 'cbcbbabbcccbb', 'c': 'cbcbbabbcccbc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabccb': {'a': 'bbbbbabbccbabacbbcccbcccca', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbb'}, 'bbbbbabbccbabacbbcccbccccbbcccbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbcccc'}, 'cbabbbcc': {'a': 'bbbbbabbccbabacb', 'b': 'cbabbbccb', 'c': 'cbabbbccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcb': {'a': 'cbcbbabb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbb'}, 'cbcbbabbcccbccbcbbbbbb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbcbbabbcccbccbcbbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbbb'}, 'bbbbbabbccbabacbbcccbccccbbbbabb': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbccccbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbabb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbbc'}, 'bbbbbabbccbabacbbcccbccccbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbc'}, 'cbabbbccbbbccbbcb': {'a': 'cbabb', 'b': 'cbabbbccbbbccbbcbb', 'c': 'cbabbbccbbbccbbcbc'}, 'bbbbbabbccbabacbb': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacbbcc', 'c': 'bbbbbabbccbabacbbc'}, 'cbcbbabbcccbccbcbbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'b': 'cbcbbabbcccbccbcbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbb'}, 'cbac': {'a': 'bbbbbabbccbaba', 'b': 'cbcbbabbcccbccbcbbac', 'c': 'cbcbbabbcccbccbcbba'}, 'bbbbbabbccbabacbbcccbccccbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbcc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbb': {'a': 'ac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbbb': {'a': 'cbabbbccbbbccbbbbbbba', 'b': 'cbabbbccbbbccbbbbbbb', 'c': 'cbcbbabbcccbccbcbbbbbbb'}, 'bbbbbabbccbabacbbcccbccc': {'a': 'bbbbbabbccba', 'b': 'bbbbbabbccbabacbbcccbcccb', 'c': 'bbbbbabbccbabacbbcccbcccc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbba': {'a': 'bbbbbabbccbabacb', 'b': 'cbabbbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba'}, 'bbbbbabbccbaba': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbabbccbabacb', 'c': 'bbbbbabbccbabac'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbcbb': {'a': 'cbcbbba', 'b': 'cbabbbccbbbccbbcbccbcbc', 'c': 'cbabbbccbbbccbbcbcccccc'}, 'cbabbbccbbbccbbcbcb': {'a': 'bbbbbab', 'b': 'cbabbbccbbbccbbcbcbb', 'c': 'cbabbbccbbbccbbcbccb'}, 'cbabbbccbbbc': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbbcb', 'c': 'cbabbbccbbbcc'}, 'bbbbbabbccbabacbbcccbccccbbccba': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbba', 'c': 'bbbbbabbccbabacbbcccbccccbbccbac'}, 'bbbbc': {'a': 'cbcbba', 'b': 'bbbbb', 'c': 'cbcbb'}, 'cbabbbccbbbccbbcbcbb': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbabbbccbbbccbbcbcbbb', 'c': 'cbabbbccbbbccbbcbccbb'}, 'cbcbbabbcccbccbcbbbcbcbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbcbb'}, 'b': {'a': 'a', 'b': 'bb', 'c': 'cb'}, 'cbcb': {'a': 'ac', 'b': 'cbcbb', 'c': 'bbbb'}, 'cbcbbabbc': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccc', 'c': 'bbbbbabbcc'}, 'cbabbbccbbbccbbbbbbbac': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcabc', 'c': 'cbcbbabbccc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbcccc': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbcbccbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbccccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcab': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbab', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccba'}, 'cbabbbccbbbccbbcbccbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbabbbccbbbccbbcbccbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbcb'}, 'cbabbbccbbbccbbcbcbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'b': 'cbabbbccbbbccbbcbccbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbb'}, 'cbcbbabbcccbccbcbbbcbcbbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcc', 'c': 'cbabbbccbbbccb'}, 'bbbbbabbccbabacbbcccbccccbcc': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbc'}, 'cbcbbabbcccbccbcbbbcb': {'a': 'cbcbbab', 'b': 'cbcbbabbcccbccbcbbbcbb', 'c': 'cbcbbabbcccbccbcbbbcbc'}, 'bbbbbabbccbabacbbcccbccccbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbc'}, 'cbcbbabbcccbccbcbbcca': {'a': 'bbbbbabbccbaba', 'b': 'cbabb', 'c': 'acb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbcac': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcacb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbba'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbcb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbcbb', 'c': 'cbabbbccbbbccbbcbccccc'}, 'bbbbbabbccbabacbbcccbccccbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbbcc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbc': {'a': 'cbcbbabbcccbccbcbbcca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbcc'}, 'cbcbbabb': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbcc', 'c': 'cbcbbabbc'}, 'bbbbb': {'a': 'bbbbba', 'b': 'cbcbbb', 'c': 'bbbbb'}, 'cbcbbabbcccbccbcb': {'a': 'cbabbbccbbbcca', 'b': 'cbcbbabbcccbccbcbb', 'c': 'cbcbbabbcccbccbcbc'}, 'cbcbbabbcccbccbcbc': {'a': 'ac', 'b': 'cbcbbabbcccbccbcbbc', 'c': 'cbcbbabbcccbccbcbb'}, 'cbc': {'a': 'a', 'b': 'cbcb', 'c': 'cbcb'}, 'cbabbbccbbbccbbcbb': {'a': 'bbbbbab', 'b': 'cbabbbccbbbccbbcbbb', 'c': 'cbabbbccbbbccbbcbcb'}, 'cc': {'a': 'cba', 'b': 'bbb', 'c': 'ccc'}, 'cbabbbccbbbccbbcbccbcb': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbcbbabbcccbccbcbbbcbcbbb', 'c': 'cbabbbccbbbccbbcbccbcbc'}, 'cbabbbccbbbccbbcbccc': {'a': 'cbabbbccbbbccbbcbccca', 'b': 'cbabbbccbbbccbbcbccbc', 'c': 'cbabbbccbbbccbbcbcccc'}, 'bbbbbabbccbabacbbcccbccccbbccbba': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbab', 'c': 'bbbbbabbccbabacbbcccbccccbbccbba'}, 'bbbbbabbccbabacbbcccbccccbbbccbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbcac', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbcb'}, 'bbbbbabbccbabacbbcccbccccbbbccbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccb'}, 'cbabbbccbbbccbbbbbb': {'a': 'bbbbbabb', 'b': 'cbabbbccbbbccbbbbbbb', 'c': 'cbabbbccbbbccbbcbcbbb'}, 'cbabbbccbbbcccc': {'a': 'cbabbbccbbbcca', 'b': 'cbcbbabbcccbccbcbb', 'c': 'cbcbbabbcccbccbcb'}, 'bb': {'a': 'a', 'b': 'bbb', 'c': 'bbb'}, 'cbabbbccbbbccbbcbcbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbabbbccbbbccbbcbcbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbb'}, 'cbcbbabbcccbccbcbbbcbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab', 'b': 'cbcbbabbcccbccbcbbbcbbb', 'c': 'cbcbbabbcccbccbcbbbcbcb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbc'}, 'bbbbbabbccbabacbbccc': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccb', 'c': 'bbbbbabbccbabacbbcccbccccbba'}, 'bbbbbabbccbabacbbcccbccccbbbbab': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbabb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbab'}, 'cbabbbccbbbccbbcbcccc': {'a': 'cbcbbba', 'b': 'cbabbbccbbbccbbcbccccb', 'c': 'cbabbbccbbbccbbcbccccc'}, 'cbabbbccbbbccbbbbbbba': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcabc', 'c': 'cbabbbccbbbccbbbbbbbac'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbb': {'a': 'cba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbb'}, 'bbbbbabbccbabacbbcccbccccbbcccbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbcccbcc'}, 'cbabbbccbbcbc': {'a': 'cbabbbccbbbcca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbc', 'c': 'cbabbbccbbbccc'}, 'cbabbbccbbbccbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'cbabbbccbbbccbbc', 'c': 'cbcbbabbcccbccbcbb'}, 'cbcbbabbcccbccbcc': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbbcbc', 'c': 'cbabbbccbbbcccc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcccc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbabbbccbbbccbbcbcccccccc', 'c': 'cbabbbccbbbccbbcbcccccccc'}, 'bbbbbabbccbabacbbcccbccccbbccc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbcccb', 'c': 'bbbbbabbccbabacbbcccbccccbbcccc'}, 'cbcbbabbcccbcc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba', 'b': 'cbcbbabbcccbccb', 'c': 'cbcbbabbcccbb'}, 'cbcbbabbcccbccbcbbbcbcbbbbcba': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbab', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcac'}, 'bbbbbabbccbabacbbcccbccccbbccbcc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccc'}, 'cbabbbccbbbccbbcbccbcbcccb': {'a': 'cbabbbccbbbccbbcbccbcbcccba', 'b': 'cbabbbccbbbccbbcbccbcbcccbb', 'c': 'cbabbbccbbbccbbcbccbcbcccbc'}, 'cbabbbccbbbccbbcbccccccc': {'a': 'cbabbbccbbbccbbcbcccccca', 'b': 'cbabbbccbbbccbbcbccccccbc', 'c': 'cbabbbccbbbccbbcbcccccccc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbb': {'a': 'bbbbbabb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbbb', 'c': 'cbabbbccbbbccbbbbbb'}, 'bbbbbabbccbabacbbcccbccccbbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbcc'}, 'bbbbbabbccbabacbbcc': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbccccbba', 'c': 'bbbbbabbccbabacbbccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabc': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbabbc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabcc'}, 'cbcbbabbcccbccbcbbac': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac', 'c': 'acb'}, 'bbbbbabbccbabacbbcccb': {'a': 'bbbbbabbccbabacbb', 'b': 'bbbbbabbccbabacbbcccbcc', 'c': 'bbbbbabbccbabacbbcccbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcab': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcabc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbac': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbab', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbcacb'}, 'cbabbbccbbbccbbcbccccc': {'a': 'cbcbbba', 'b': 'cbabbbccbbbccbbcbccccbc', 'c': 'cbabbbccbbbccbbcbcccccc'}, 'cbcbbabbcccbccbc': {'a': 'cbabbbccbbbcca', 'b': 'cbcbbabbcccbccbcb', 'c': 'cbcbbabbcccbccbcc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbca': {'a': 'bbbbbabbccbaba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba', 'c': 'bbbbbabbccba'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbccc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbba', 'b': 'cbabbbccbbbccbbcbccccccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbcccc'}, 'a': {'a': 'bbbbbabbccbaba', 'b': 'cbab', 'c': 'ac'}, 'cbcbbabbcccbccbcbbbcbcbbbbcac': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbab', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcab'}, 'bbbbbabbcc': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccb', 'c': 'cbcbbabbccc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbacb': {'a': 'bbbbbabbccbabacb', 'b': 'cbabbbccc', 'c': 'cbabbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb'}, 'cbabbbcccc': {'a': 'bbbbbabbccba', 'b': 'cbabbbccbb', 'c': 'cbabbbccccc'}, 'cbabbbccbbbccbbbb': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbcc'}, 'cb': {'a': 'cba', 'b': 'bbb', 'c': 'cbc'}, 'cbabbbccbbbccbbcbccbcbcc': {'a': 'cbabbbccbbbccbbcbccbcbcccca', 'b': 'cbabbbccbbbccbbcbccbcbccb', 'c': 'cbabbbccbbbccbbcbccbcbccc'}, 'cbabbbccbbbccbbcbccccbcba': {'a': 'bbbbbabbccbabac', 'b': 'cbabbbccbbbccbbbbbbbac', 'c': 'cbabbbccbbbccbbcbccbcbccba'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabb': {'a': 'bbbbbabbccbabacb', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbb'}, 'bbbbbabbccbabacbbcccbccccbbccbcccc': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbc'}, 'bbbbbabbccbabacbbcccbccccbbbccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbc'}, 'bbbbbabbccbabacbbcccbccccbbcccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbcccbc'}, 'cbabbbccbbbccbbcbccbcbccc': {'a': 'cbabbbccbbbccbbcbccbcbcccca', 'b': 'cbabbbccbbbccbbcbccbcbcccb', 'c': 'cbabbbccbbbccbbcbccbcbcccc'}, 'cbabbbccbbbccbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbba', 'b': 'cbabbbccbbbccbbbbbb', 'c': 'cbabbbccbbbccbbcbbb'}, 'bbbbbabbccbabacbbcccbccccbbcccc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbcccbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccccc'}, 'bbbbbabbccbabacbbcccbccccbbccbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbcb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbbb'}, 'cbcbbabbcc': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccb', 'c': 'cbcbbabbccc'}, 'cbabbbccbbbccbbcbccbcbcccbc': {'a': 'cbabbbccbbbccbbcbccccbcbca', 'b': 'cbabbbccbbbccbbcbccbcbcccb', 'c': 'cbabbbccbbbccbbcbccbcbcccbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabb', 'c': 'cbcbbabb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcbb': {'a': 'bbbbbabbc', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbbbb', 'c': 'cbabbbccbbbccbbbbbb'}, 'cbabbbccbbbccbbcbccbbbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbcbb'}, 'cbcbbbba': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbab'}, 'cbabbbccbbbccbbcbccbcbcccbb': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcb', 'c': 'cbabbbccbbbccbbcbccbcbcccb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbcb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbbbc', 'c': 'cbabbbccbbbccbbb'}, 'bbb': {'a': 'ac', 'b': 'bbbb', 'c': 'cbcb'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbbbcc'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbccc': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbcbcbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbcccc'}, 'cbcbbabbcccbccbcbbbcbbb': {'a': 'cbabbbccbbbccbbcbccbcbccba', 'b': 'cbabbbccbbbccbbcbccbbb', 'c': 'cbcbbabbcccbccbcbbbcbcbb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbbccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbcb'}, 'cbcbbabbcccbccbcbbb': {'a': 'acb', 'b': 'cbcbbabbcccbccbcbbbb', 'c': 'cbcbbabbcccbccbcbbbc'}, 'cbabbbccbbb': {'a': 'cbabbbccbbbcca', 'b': 'cbabbbccbbcbc', 'c': 'cbabbbccbbbc'}, 'cbabbbccbbbccbbcbbb': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbcbbabbcccbccbcbbbbbb', 'c': 'cbabbbccbbbccbbcbcbb'}, 'bbbbbabbccbabacbbcccbccccbbccbccb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbca', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcabcbb': {'a': 'bbbbbabbccba', 'b': 'cbcbbabbcccbccbc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbb'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbcc': {'a': 'cbcbbab', 'b': 'cbabbbccbbbccbbcbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbccc'}, 'cbabbbccbbbccbbcbccbcbcccba': {'a': 'bbbbbabbccbabac', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcac', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbca'}, 'bbbbbabbccbabacbbcccbccccbbccbbcb': {'a': 'bbbbbabbccbabacbbcccbccccbbbbbba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbb'}, 'bbbbbabbccbabacbbcccbccccbbccbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbac', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbbbb'}, 'cbcbbabbcccbccbcbbccc': {'a': 'cbcbba', 'b': 'cbabbbccbbbccbbcbcc', 'c': 'cbcbbabbcccbccbcbbcccc'}, 'bbbbbabbccbabacbbcccbccccbbbbbbbbbb': {'a': 'cbcbbabbc', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbbb', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcb'}, 'cbabbbccbbbccbbc': {'a': 'acb', 'b': 'cbabbbccbbbccbbcb', 'c': 'cbcbbabbcccbccbcbbb'}, 'acb': {'a': 'bbbbbabbccbabac', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbccbba', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbac'}, 'bbbbbabbccbabacbbcccbccccbbccbccbccbbba': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbccbccbbba'}, 'bbbbba': {'a': 'bbbbbabbccbaba', 'b': 'bbbbbab', 'c': 'cbabbbccbbbccbbcbccca'}, 'cbabbbccbbbccbbcbccbcbccba': {'a': 'bbbbbabbccbabac', 'b': 'cbabbbccbbbccbbbbbbbac', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbca'}, 'bbbbbabbccbabacbbcccbcccccccc': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbccc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbc'}, 'cbabbbccbbbccbbcbccbcbc': {'a': 'cbabbbccbbbccbbcbccccbcba', 'b': 'cbabbbccbbbccbbcbccbcbcb', 'c': 'cbabbbccbbbccbbcbccbcbcc'}, 'cbcbbabbccccc': {'a': 'bbbbbabbccba', 'b': 'cbcbbabbcccbcc', 'c': 'cbcbbabbcccbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbc': {'a': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbca', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcb', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbb'}, 'bbbbbabbccbabacbbcccbccccbbccbac': {'a': 'bbbbbabbccbabacb', 'b': 'bbbbbabbccbabacbbcccbccccbbccbccbcac', 'c': 'bbbbbabbccbabacbbcccbccccbbccbba'}, 'bbbbbabbccbabacbbcccbccccbbbbbbabbcb': {'a': 'bbbbbabbccbab', 'b': 'bbbbbabbccbabacbbcccbccccbbccccc', 'c': 'bbbbbabbccbabacbbcccbccccbbbbbbabbbb'}, 'cbabbbccbbbccbb': {'a': 'cbcbbabbcccbccbcbbac', 'b': 'cbabbbccbbbccbbb', 'c': 'cbabbbccbbbccbbc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba': {'a': 'bbbbbabbccbaba', 'b': 'cbabbbccbbbcca', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbba'}, 'bbbbbabbccbabacbbcccbccccbbbccbbbbb': {'a': 'bbbbbabbccbabacbbcccbccccbbccbccbccbacb', 'b': 'bbbbbabbccbabacbbcccbccccbbbbbbbbbcb', 'c': 'bbbbbabbccbabacbbcccbccccbbbccbbbbcb'}, 'bbbbbabbccbabacbbcccbccccbbccbc': {'a': 'bbbbbabbccbabacbbcccbccccbbccba', 'b': 'bbbbbabbccbabacbbcccbccccbbccbbc', 'c': 'bbbbbabbccbabacbbcccbccccbbccbcc'}, 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbcccc': {'a': 'cbcbba', 'b': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbbbbccc', 'c': 'cbcbbabbcccbccbcbbbcbcbbbbcbabcbbbbbcbccccc'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0          3.08817          None            None  [b, , ba, c, ca]          0         0         3          306                    100.0                                    100.0               97.75109         True     0.05   0.01
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.0954446792602539  s
No positive counterexample found
EQ test took  0.3398869037628174  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11582827568054199  s
EQ test took  0.0015959739685058594  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x2)
Learning formula with depth 1
learned LTL formula: (~ c)
Learning took:  0.17207860946655273  s
EQ test took  0.061029911041259766  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ca']


negative traces---> 
['c']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x2 U (! x2))
Learning formula with depth 2
learned LTL formula: (c U (~ c))
Learning took:  0.2480015754699707  s
EQ test took  0.9484748840332031  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ca']


negative traces---> 
['c', 'b']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (! ((G x2) | x1))
Learning formula with depth 3
learned LTL formula: (~ (b | (G c)))
Learning took:  0.7007086277008057  s
EQ test took  0.09216666221618652  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ca', 'ba']


negative traces---> 
['c', 'b']



4  iteration complete



start formula depth: 5
Before normalization: ((x2 | x1) U (! (x2 | x1)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5765063762664795  s
EQ test took  1.8725273609161377  s


epsilon= 0.01 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 5.232241630554199
overall guided extraction time took: 0.1199999999999477
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ac', 0.009999999999990905)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.1216132640838623
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'ac': {'a': 'ac', 'b': 'ac', 'c': 'ac'}, 'b': {'a': 'ac', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ac', 'b': 'ac', 'c': 'ac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0         5.232242          None            None  [c, , ca, b, ba]          0         0         3            4                    100.0                                    100.0               0.121613         True     0.01    0.1
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.09793829917907715  s
No positive counterexample found
EQ test took  0.4535090923309326  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1043243408203125  s
EQ test took  0.0015187263488769531  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.1873607635498047  s
EQ test took  0.08986473083496094  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.24890422821044922  s
EQ test took  0.9905476570129395  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6839056015014648  s
EQ test took  1.1465532779693604  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.565497636795044  s
EQ test took  2.3151166439056396  s


epsilon= 0.01 delta= 0.05 max_trace_length= 50
query: true
final ltl:  ((b | c) U (~ (b | c)))

Time taken to extract ltl: 6.893779754638672
overall guided extraction time took: 0.3199999999999932
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ab', 0.03000000000002956)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.3166792392730713
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'ab': {'a': 'ab', 'b': 'ab', 'c': 'ab'}, 'b': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ab', 'b': 'ab', 'c': 'ab'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query              explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon   counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | c) U (~ (b | c)))   True          100.0      100.0              100.0                              100.0          6.89378          None            None  [b, , ba, c, ca]          0         0         3            4                    100.0                                    100.0               0.316679         True     0.01   0.05
target: F(a)
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.09874701499938965  s
No positive counterexample found
EQ test took  0.5972661972045898  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11244654655456543  s
EQ test took  0.0015859603881835938  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ b)
Learning took:  0.17464995384216309  s
EQ test took  0.10474586486816406  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x1 U (! x1))
Learning formula with depth 2
learned LTL formula: (b U (~ b))
Learning took:  0.2371528148651123  s
EQ test took  1.2629508972167969  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ba']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (x1 U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: (b U (~ (b | c)))
Learning took:  0.6785199642181396  s
EQ test took  1.371340036392212  s
new counterexample: ca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c']



4  iteration complete



start formula depth: 5
Before normalization: ((x1 | x2) U (! (x1 | x2)))
Learning formula with depth 3
learned LTL formula: ((b | c) U (~ (b | c)))
Learning took:  0.5779604911804199  s
EQ test took  2.6213290691375732  s
new counterexample: cccbbccbccbcbbbbcbbbba  should be rejected by implementation


positive traces---> 
['', 'ba', 'ca']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba']



5  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: ((X (! (x1 | x2))) U (! (x1 | x2)))
Learning formula with depth 4
learned LTL formula: ((X (~ (b | c))) U (~ (b | c)))
Learning took:  9.299670457839966  s
EQ test took  1.7593016624450684  s
new counterexample: cca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba']



6  iteration complete



start formula depth: 6
Before normalization: (x2 U (x1 U (! (x2 | x1))))
Learning formula with depth 4
learned LTL formula: (c U (b U (~ (b | c))))
Learning took:  6.473778963088989  s
No negative counterexample found
EQ test took  2.623739719390869  s
new counterexample: bca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba']



7  iteration complete



start formula depth: 6
Before normalization: (x1 U (x2 U (! (x1 | x2))))
Learning formula with depth 4
learned LTL formula: (b U (c U (~ (b | c))))
Learning took:  6.3510332107543945  s
No negative counterexample found
EQ test took  2.4986884593963623  s
new counterexample: cba  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba']



8  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (x2 U (x1 U (x2 U (! (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (c U (b U (c U (~ (b | c)))))
Learning took:  24.511892795562744  s
No negative counterexample found
EQ test took  3.3604185581207275  s
new counterexample: bcba  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba', 'bcba']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba']



9  iteration complete



start formula depth: 7
Before normalization: ((x2 | x1) -> (X (! (X x2))))
Learning formula with depth 4
learned LTL formula: ((b | c) -> (X (~ (X c))))
Learning took:  15.5027916431427  s
EQ test took  0.16690897941589355  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba', 'bcba']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba', 'cc']



10  iteration complete



start formula depth: 7
Before normalization: (((X x1) -> x2) U (! (x2 | x1)))
Learning formula with depth 3
learned LTL formula: (((X b) -> c) U (~ (b | c)))
Learning took:  20.401304960250854  s
EQ test took  3.066995143890381  s
new counterexample: bba  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba', 'bcba', 'bba']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba', 'cc']



11  iteration complete



start formula depth: 7
Before normalization: (x1 U (x2 U (x1 U (! (x1 | x2)))))
Learning formula with depth 5
learned LTL formula: (b U (c U (b U (~ (b | c)))))
Learning took:  38.102550983428955  s
No negative counterexample found
EQ test took  3.608198642730713  s
new counterexample: cbca  should be accepted by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba', 'bcba', 'bba', 'cbca']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba', 'cc']



12  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((x1 | (X x1)) U (x2 U (! (x1 | x2))))
Learning formula with depth 4
learned LTL formula: ((b | (X b)) U (c U (~ (b | c))))
Learning took:  193.34564518928528  s
EQ test took  4.041007041931152  s
new counterexample: babcccbbccbbcbccccbcccbbbcb  should be rejected by implementation


positive traces---> 
['', 'ba', 'ca', 'cca', 'bca', 'cba', 'bcba', 'bba', 'cbca']


negative traces---> 
['b', 'c', 'cccbbccbccbcbbbbcbbbba', 'cc', 'babcccbbccbbcbccccbcccbbbcb']



13  iteration complete





epsilon= 0.01 delta= 0.01 max_trace_length= 50
query: true
final ltl:  ((b | (X b)) U (c U (~ (b | c))))
incomplete formula
Number of samples: 1431
Number of counterexamples returned: 141
9.244042964509268e+192 0.35800425378377737

Time taken to extract ltl: 401.0735595226288
overall guided extraction time took: 1.9500000000000455
generated counterexamples were: (format: (counterexample, counterexample generation time))
('ab', 0.18000000000000682)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 1.9580836296081543
number of states of the dfa: 4
returned flag: True
transitions:->
{'': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'ab': {'a': 'ab', 'b': 'ab', 'c': 'ab'}, 'b': {'a': 'ab', 'b': 'b', 'c': 'b'}, 'a': {'a': 'ab', 'b': 'ab', 'c': 'ab'}}
Explanation matches RNN: 95.29
RNN matches ground truth: 100.0
Explanation matches ground truth: 95.29
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query                        explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  true  ((b | (X b)) U (c U (~ (b | c))))  False          100.0      100.0              95.29                              95.29        401.07356  9.244043e+192         0.358004  [b, , ba, c, ca, cccbbccbccbcbbbbcbbbba, cca, ...          0         0         4            4                    100.0                                    100.0               1.958084         True     0.01   0.01
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10554122924804688  s
EQ test took  0.0006792545318603516  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10546040534973145  s
EQ test took  0.12858843803405762  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3435065746307373
Interrupted due to time limit
overall guided extraction time took: 401.26
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.009999999999990905)
('ab', 0.009999999999990905)
('ca', 0.01999999999998181)
('ba', 0.020000000000038654)
('aa', 0.01999999999998181)
('ac', 0.01999999999998181)
('caa', 0.03000000000002956)
('aba', 0.029999999999972715)
('aca', 0.03000000000002956)
('bba', 0.040000000000020464)
('aab', 0.040000000000020464)
('cab', 0.03999999999996362)
('aaa', 0.040000000000020464)
('bca', 0.040000000000020464)
('acb', 0.05000000000001137)
('abc', 0.05000000000001137)
('cca', 0.05000000000001137)
('aac', 0.060000000000002274)
('abb', 0.060000000000002274)
('cac', 0.060000000000002274)
('acc', 0.060000000000002274)
('cba', 0.060000000000002274)
('caac', 0.06999999999999318)
('acab', 0.06999999999999318)
('acbb', 0.06999999999999318)
('acbc', 0.06999999999999318)
('aabc', 0.07999999999998408)
('bcca', 0.07999999999998408)
('abbb', 0.07999999999998408)
('cabb', 0.07999999999998408)
('abca', 0.07999999999998408)
('abcb', 0.08999999999997499)
('bcaa', 0.09000000000003183)
('ccaa', 0.08999999999997499)
('aaac', 0.1099999999999568)
('cbac', 0.0999999999999659)
('bbba', 0.10000000000002274)
('aacb', 0.1099999999999568)
('ccac', 0.1099999999999568)
('accb', 0.11000000000001364)
('abbc', 0.11000000000001364)
('bbac', 0.12000000000000455)
('abba', 0.12000000000000455)
('cbba', 0.12000000000000455)
('caab', 0.13999999999998636)
('bbab', 0.12999999999999545)
('cabc', 0.13999999999998636)
('abac', 0.1500000000000341)
('aabb', 0.1400000000000432)
('abaa', 0.14999999999997726)
('acaa', 0.15999999999996817)
('bcac', 0.15999999999996817)
('aaca', 0.160000000000025)
('caca', 0.160000000000025)
('cbab', 0.160000000000025)
('ccab', 0.160000000000025)
('ccca', 0.17000000000001592)
('caaa', 0.15999999999996817)
('acba', 0.18000000000000682)
('acac', 0.17000000000001592)
('ccba', 0.160000000000025)
('aaaa', 0.160000000000025)
('abab', 0.17000000000001592)
('cbaa', 0.16999999999995907)
('cbca', 0.18000000000000682)
('bcab', 0.18000000000000682)
('cacb', 0.17999999999994998)
('bbaa', 0.18000000000000682)
('aaba', 0.18000000000000682)
('acca', 0.18999999999999773)
('cacc', 0.20000000000004547)
('aaab', 0.19000000000005457)
('abcc', 0.20000000000004547)
('bcba', 0.21000000000003638)
('bbca', 0.21000000000003638)
('accc', 0.19999999999998863)
('aacc', 0.22999999999996135)
('caba', 0.2300000000000182)
('cacca', 0.2300000000000182)
('acbcc', 0.23999999999995225)
('bbcab', 0.2400000000000091)
('aabab', 0.22000000000002728)
('aabcb', 0.22999999999996135)
('caacb', 0.2300000000000182)
('ccbaa', 0.21999999999997044)
('acbba', 0.2300000000000182)
('ccaab', 0.2400000000000091)
('abaac', 0.25)
('cbaaa', 0.2599999999999909)
('bcbac', 0.2599999999999909)
('aaccc', 0.2699999999999818)
('aacba', 0.2699999999999818)
('acbbc', 0.27000000000003865)
('cacba', 0.2799999999999727)
('bbacb', 0.28000000000002956)
('bcaaa', 0.28000000000002956)
('bbacc', 0.2899999999999636)
('abbbb', 0.29000000000002046)
('abbaa', 0.29000000000002046)
('bcabb', 0.30000000000001137)
('aabba', 0.30000000000001137)
('bbaaa', 0.30000000000001137)
('cbbac', 0.30000000000001137)
('aaabb', 0.2799999999999727)
('cbacc', 0.2999999999999545)
('aabbc', 0.3199999999999932)
('cbcaa', 0.3199999999999932)
('bcacb', 0.3199999999999932)
('cabab', 0.339999999999975)
('cbabb', 0.32000000000005)
('acbca', 0.3299999999999841)
('abbcb', 0.3300000000000409)
('cbcac', 0.3199999999999932)
('abacb', 0.34000000000003183)
('accab', 0.34000000000003183)
('abccc', 0.339999999999975)
('acacc', 0.339999999999975)
('abcba', 0.3499999999999659)
('cacab', 0.3499999999999659)
('bbbac', 0.3599999999999568)
('bccca', 0.3499999999999659)
('abacc', 0.3599999999999568)
('cbaab', 0.37000000000000455)
('caaac', 0.37000000000000455)
('aaaac', 0.37999999999999545)
('acabb', 0.3699999999999477)
('ccacb', 0.37999999999999545)
('aacbc', 0.37999999999999545)
('acacb', 0.38999999999998636)
('bcabc', 0.37999999999999545)
('ccabc', 0.3900000000000432)
('cbbca', 0.38999999999998636)
('caccb', 0.38999999999998636)
('cccaa', 0.4000000000000341)
('abaab', 0.38999999999998636)
('cccac', 0.4000000000000341)
('accba', 0.39999999999997726)
('bcbca', 0.40999999999996817)
('cabba', 0.4199999999999591)
('cacac', 0.4200000000000159)
('ccacc', 0.4199999999999591)
('abcac', 0.4200000000000159)
('abaaa', 0.38999999999998636)
('aabac', 0.410000000000025)
('acccc', 0.40999999999996817)
('bbaba', 0.4200000000000159)
('bbcaa', 0.4199999999999591)
('aaacb', 0.4199999999999591)
('aaaaa', 0.4200000000000159)
('cbabc', 0.4300000000000068)
('abbca', 0.4300000000000068)
('bcaab', 0.4300000000000068)
('cbaba', 0.4300000000000068)
('abbbc', 0.4300000000000068)
('bbaac', 0.4399999999999977)
('bbaab', 0.44999999999998863)
('cccca', 0.46999999999997044)
('aabca', 0.4800000000000182)
('bcbab', 0.4800000000000182)
('ccbab', 0.47999999999996135)
('bcaac', 0.4900000000000091)
('acaba', 0.47999999999996135)
('aacac', 0.4900000000000091)
('bcbba', 0.48999999999995225)
('abcab', 0.5)
('abccb', 0.5099999999999909)
('acbbb', 0.5)
('acbac', 0.5)
('bbcba', 0.5)
('ccabb', 0.5199999999999818)
('abbab', 0.5099999999999909)
('caacc', 0.5199999999999818)
('bbcac', 0.5199999999999818)
('bbabc', 0.5300000000000296)
('aaaab', 0.5300000000000296)
('acbcb', 0.5300000000000296)
('bccab', 0.5400000000000205)
('bcaba', 0.5399999999999636)
('caaca', 0.5400000000000205)
('cccab', 0.5400000000000205)
('aacaa', 0.5499999999999545)
('aaaca', 0.5500000000000114)
('abbac', 0.5600000000000023)
('cbcab', 0.5500000000000114)
('ccbca', 0.5600000000000023)
('abbba', 0.5600000000000023)
('caaba', 0.57000000000005)
('acaac', 0.5699999999999932)
('cbcca', 0.5799999999999841)
('cbcba', 0.5799999999999841)
('ccaaa', 0.5799999999999841)
('aacbb', 0.5900000000000318)
('aaccb', 0.6000000000000227)
('cabaa', 0.5900000000000318)
('bbbab', 0.6000000000000227)
('caabb', 0.589999999999975)
('cbaca', 0.5999999999999659)
('bbbba', 0.6100000000000136)
('aabaa', 0.6100000000000136)
('cbacb', 0.6299999999999955)
('abaca', 0.6000000000000227)
('aaabc', 0.6100000000000136)
('cabac', 0.6100000000000136)
('abcaa', 0.6200000000000045)
('cabbc', 0.6299999999999955)
('cabca', 0.6200000000000045)
('caabc', 0.6299999999999955)
('aacca', 0.6299999999999955)
('acaab', 0.6499999999999773)
('acccb', 0.6399999999999864)
('ccaca', 0.6499999999999773)
('cbbab', 0.6499999999999773)
('ababb', 0.6599999999999682)
('cbbaa', 0.6499999999999773)
('cabbb', 0.660000000000025)
('accca', 0.6699999999999591)
('ccbba', 0.6700000000000159)
('bbbaa', 0.6699999999999591)
('acbab', 0.67999999999995)
('bbaca', 0.6800000000000068)
('cbbba', 0.6800000000000068)
('accac', 0.6899999999999977)
('aabcc', 0.6999999999999886)
('cabcc', 0.6999999999999886)
('abcbc', 0.7199999999999704)
('cacbc', 0.7200000000000273)
('caccc', 0.6599999999999682)
('caaaa', 0.6500000000000341)
('ababc', 0.6599999999999682)
('bcacc', 0.6700000000000159)
('acaaa', 0.6500000000000341)
('accaa', 0.6700000000000159)
('cbaac', 0.6700000000000159)
('bcbaa', 0.6800000000000068)
('cacaa', 0.6800000000000068)
('aaacc', 0.6800000000000068)
('abcca', 0.6800000000000068)
('bcaca', 0.6800000000000068)
('ababa', 0.6899999999999977)
('bccac', 0.6999999999999886)
('bccaa', 0.6899999999999977)
('acaca', 0.7000000000000455)
('aabbb', 0.7199999999999704)
('abcbb', 0.7099999999999795)
('accbb', 0.7099999999999795)
('bbabb', 0.7099999999999795)
('cabcb', 0.7099999999999795)
('caaab', 0.7200000000000273)
('ccaba', 0.7199999999999704)
('cacbb', 0.7400000000000091)
('abbcc', 0.7300000000000182)
('aaaba', 0.7300000000000182)
('acabc', 0.7300000000000182)
('accbc', 0.7399999999999523)
('ccaac', 0.75)
('aacab', 0.7400000000000091)
('acbaa', 0.75)
('ccbac', 0.7600000000000477)
('abbbaa', 0.75)
('bbbca', 0.7399999999999523)
('bccba', 0.75)
('bbcca', 0.7400000000000091)
('cccba', 0.75)
('abbcbb', 0.75)
('caccac', 0.7599999999999909)
('caaabb', 0.75)
('cbacac', 0.7599999999999909)
('abcbac', 0.7699999999999818)
('bcbaaa', 0.7700000000000387)
('acbbaa', 0.7799999999999727)
('ccbabc', 0.7800000000000296)
('bbacbc', 0.7699999999999818)
('bccacc', 0.7900000000000205)
('acacab', 0.8000000000000114)
('cacccb', 0.7800000000000296)
('bccbab', 0.7799999999999727)
('abccac', 0.7899999999999636)
('aabbaa', 0.8000000000000114)
('cbaaba', 0.8000000000000114)
('bbaaab', 0.7999999999999545)
('cabccb', 0.8100000000000023)
('bbabca', 0.8000000000000114)
('cbaabb', 0.8000000000000114)
('bbabaa', 0.82000000000005)
('cbbcaa', 0.8100000000000591)
('ababab', 0.8099999999999454)
('cabcba', 0.8199999999999363)
('caccaa', 0.8400000000000318)
('bcaccc', 0.8400000000000318)
('ccbbac', 0.8299999999999272)
('bcbcaa', 0.8400000000000318)
('bbaabb', 0.8400000000000318)
('accccb', 0.8400000000000318)
('aaaaab', 0.8400000000000318)
('bbabcb', 0.8399999999999181)
('abcbbc', 0.8500000000000227)
('ccaaaa', 0.8500000000000227)
('acbccc', 0.8500000000000227)
('caccba', 0.8700000000000045)
('aabcac', 0.8600000000000136)
('abaaab', 0.8700000000000045)
('acbabb', 0.8700000000000045)
('ccabca', 0.8700000000000045)
('bbabac', 0.8799999999999955)
('acbaac', 0.8799999999999955)
('bbbcaa', 0.8700000000000045)
('cabbaa', 0.8899999999999864)
('ccbaca', 0.8799999999999955)
('ccaabc', 0.8900000000001)
('abacba', 0.8999999999999773)
('aaacac', 0.8899999999999864)
('caaccb', 0.9099999999999682)
('cbbaaa', 0.9100000000000819)
('abcbca', 0.8900000000001)
('cbbacc', 0.9099999999999682)
('aacbcc', 0.9099999999999682)
('aaabaa', 0.900000000000091)
('aaabbc', 0.9199999999999591)
('accacb', 0.92999999999995)
('aabccc', 0.92999999999995)
('cabaaa', 0.9300000000000637)
('abcabc', 0.9400000000000546)
('acaacc', 0.9399999999999409)
('cababb', 0.92999999999995)
('cacabc', 0.9399999999999409)
('ababcc', 0.9400000000000546)
('bbbaba', 0.9400000000000546)
('acbacc', 0.9500000000000455)
('cabcbb', 0.9499999999999318)
('abcacc', 0.9500000000000455)
('cbabac', 0.9599999999999227)
('acaabb', 0.9600000000000364)
('cccabb', 0.9599999999999227)
('acabac', 0.9600000000000364)
('aaabbb', 0.9699999999999136)
('abaccc', 0.9599999999999227)
('abbcbc', 0.9900000000000091)
('acacaa', 0.9700000000000273)
('bbaacb', 0.9900000000000091)
('accabb', 0.9799999999999045)
('bbcbac', 0.9800000000000182)
('cabcaa', 1.0)
('cacabb', 1.0)
('abbbbc', 1.009999999999991)
('abaaba', 1.0)
('aaccaa', 1.009999999999991)
('cccaac', 1.009999999999991)
('ccbaab', 1.009999999999991)
('ccacaa', 1.009999999999991)
('caccbb', 1.0199999999999818)
('accbcc', 1.0199999999999818)
('acabca', 1.0199999999999818)
('abbbba', 1.0200000000000955)
('aababa', 1.0299999999999727)
('acbccb', 1.0299999999999727)
('bbcabc', 1.0399999999999636)
('cbcbca', 1.0299999999999727)
('aabcba', 1.0400000000000773)
('aaccab', 1.0499999999999545)
('ababcb', 1.0499999999999545)
('caaabc', 1.0600000000000591)
('bbccba', 1.0699999999999363)
('aabaac', 1.0600000000000591)
('abacca', 1.07000000000005)
('caccab', 1.07000000000005)
('abcaaa', 1.0799999999999272)
('cbacab', 1.0600000000000591)
('cbcbac', 1.080000000000041)

Time taken to extract lstar-dfa: 401.21150827407837
number of states of the dfa: 401
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'cabca', 'b': 'cabcb', 'c': 'cabcc'}, 'abcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacb': {'a': 'cbacab', 'b': 'cbacab', 'c': 'aacbc'}, 'cabccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'cbacab', 'b': 'cbacab', 'c': 'caacc'}, 'abbcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abcaa', 'b': 'abcab', 'c': 'abcac'}, 'caabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'accc': {'a': 'cbacab', 'b': 'cbacab', 'c': 'acccc'}, 'cabcc': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aaaaa': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'bbbb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abbcb': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'aabab': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bbbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aababa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abacc': {'a': 'cbacab', 'b': 'ba', 'c': 'cbacab'}, 'bbac': {'a': 'cbacab', 'b': 'bbacb', 'c': 'cbacab'}, 'ccabc': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'ccbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'abcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccac': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cabab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'abaaa', 'b': 'abaab', 'c': 'cbacab'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'cbacab', 'b': 'bbbb', 'c': 'ccbcb'}, 'bcab': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'bbca': {'a': 'cbacab', 'b': 'bbcab', 'c': 'cbacab'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'cbbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabb': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'bbbb'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbaab': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'caccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'cbacab', 'b': 'acaab', 'c': 'acaac'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'bcbaa', 'b': 'cbacab', 'c': 'cbacab'}, 'cbaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abac': {'a': 'cbacab', 'b': 'abacb', 'c': 'abacc'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbc'}, 'abab': {'a': 'ababa', 'b': 'cbacab', 'c': 'ababc'}, 'ccbb': {'a': 'ccbba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acca': {'a': 'cbacab', 'b': 'accab', 'c': 'accac'}, 'accac': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbc': {'a': 'cbacab', 'b': 'cbacab', 'c': 'acbcc'}, 'abcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcb': {'a': 'bcba', 'b': 'bbbb', 'c': 'bcbc'}, 'cacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'caccb', 'c': 'caccc'}, 'ccac': {'a': 'ccaca', 'b': 'cbacab', 'c': 'cbacab'}, 'bbaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'bbcb': {'a': 'bbcba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acaab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aabba': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'abbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'aaaba', 'b': 'aaabb', 'c': 'cbacab'}, 'bbaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbab': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'acbb': {'a': 'acbba', 'b': 'cbacab', 'c': 'cbacab'}, 'abcac': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaa': {'a': 'aaaaa', 'b': 'cbacab', 'c': 'cbacab'}, 'bcaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'cbbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'abaaa': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'bbabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'cbacab', 'b': 'cbaab', 'c': 'cbacab'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbcc'}, 'bbba': {'a': 'cbacab', 'b': 'bbbab', 'c': 'cbacab'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'bccac'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'bbaba', 'b': 'cbacab', 'c': 'bbabc'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbc': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'abcca', 'b': 'cbacab', 'c': 'cbacab'}, 'bcac': {'a': 'cbacab', 'b': 'cbacab', 'c': 'bcacc'}, 'bcbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'cbcb', 'c': 'bbbb'}, 'ccba': {'a': 'ccbaa', 'b': 'ccbab', 'c': 'ccbac'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'bcbaa': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'ccab': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ccabc'}, 'caaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcab': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'caaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'bbbc': {'a': 'bbbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'bcbca': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cabcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'bbcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'caaa': {'a': 'cbacab', 'b': 'caaab', 'c': 'cbacab'}, 'acbcc': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'abccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'abcbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'cccab', 'c': 'cbacab'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'cbbaa', 'b': 'cbacab', 'c': 'cbbac'}, 'aaabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'bbccb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'caccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabc': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'cbaba', 'b': 'cbacab', 'c': 'cbacab'}, 'cccc': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'caccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'abbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'bbabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'ccaa': {'a': 'ccaaa', 'b': 'ccaab', 'c': 'cbacab'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabb': {'a': 'cabba', 'b': 'cbacab', 'c': 'cbacab'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbac': {'a': 'cbaca', 'b': 'cbacab', 'c': 'cbacab'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'acabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'abbba', 'b': 'abbbb', 'c': 'cbacab'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'aabba', 'b': 'cbacab', 'c': 'cbacab'}, 'ccacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'cbacab', 'c': 'cbacab'}, 'aaaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcbc': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aaba': {'a': 'aabaa', 'b': 'aabab', 'c': 'cbacab'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'acabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'abbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'acbaa', 'b': 'acbab', 'c': 'acbac'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbc': {'a': 'bcbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acab': {'a': 'acaba', 'b': 'cbacab', 'c': 'acabc'}, 'bbabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'ccbac': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'abba': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'aabaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbba': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'caccb': {'a': 'cbacab', 'b': 'cbacab', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'cbacab', 'c': 'cbacab'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'bbaaa', 'b': 'bbaab', 'c': 'bbaac'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'cbacab', 'b': 'ba', 'c': 'cbacab'}, 'bbacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'abcba', 'b': 'abcbb', 'c': 'abcbc'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'cccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbc': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabaa': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'cbb': {'a': 'cbba', 'b': 'cccb', 'c': 'cbbc'}, 'cacabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccc': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'cabaa', 'b': 'cabab', 'c': 'cbacab'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabba': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'cabbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbab': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aabccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'bcc': {'a': 'bcca', 'b': 'bccb', 'c': 'bbbb'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'abcba': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'aaaba': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'ba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accb': {'a': 'cbacab', 'b': 'cbacab', 'c': 'accbc'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'bbbb', 'c': 'bbbb'}, 'cabcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'cbacab', 'c': 'ba'}, 'aacbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabc': {'a': 'aabca', 'b': 'aabcb', 'c': 'aabcc'}, 'bbaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'acaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'ccbb', 'c': 'bbbb'}, 'cbcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'cbacab', 'c': 'cbacab'}, 'ccbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'acbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'acbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'ccbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbc': {'a': 'cbacab', 'b': 'abbcb', 'c': 'cbacab'}, 'aabcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'cbacab', 'b': 'cbacab', 'c': 'cbacab'}, 'aaccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'cbacab'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'cbacab', 'b': 'cacab', 'c': 'cbacab'}, 'abaab': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'abacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'cbacab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbaba': {'a': 'cbacab', 'b': 'ba', 'c': 'cbacab'}, 'abaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'cbacab', 'c': 'cbacab'}, 'abacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabc': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'cbacab', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'bccba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'abcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.343507          None            None              []          0         0         0          401                    None                                    None             401.211508        False      0.1    0.1
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1097421646118164  s
EQ test took  0.0006716251373291016  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11464810371398926  s
EQ test took  0.13969683647155762  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3678419589996338
Interrupted due to time limit
overall guided extraction time took: 400.4200000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.01999999999998181)
('ba', 0.020000000000095497)
('ab', 0.029999999999972715)
('aa', 0.029999999999972715)
('ca', 0.03999999999996362)
('ac', 0.03999999999996362)
('acb', 0.03999999999996362)
('aba', 0.05000000000006821)
('cba', 0.05999999999994543)
('bca', 0.06000000000005912)
('aca', 0.05999999999994543)
('aab', 0.07000000000005002)
('cab', 0.07000000000005002)
('abb', 0.07999999999992724)
('aac', 0.09000000000003183)
('aaa', 0.09000000000003183)
('acc', 0.09000000000003183)
('cac', 0.10000000000002274)
('bba', 0.09999999999990905)
('cca', 0.10999999999989996)
('abc', 0.10999999999989996)
('caa', 0.12000000000000455)
('abca', 0.12999999999999545)
('bcac', 0.13999999999998636)
('accb', 0.13999999999998636)
('bbac', 0.14999999999997726)
('ccab', 0.14999999999997726)
('acca', 0.14999999999997726)
('bcba', 0.15000000000009095)
('abab', 0.15999999999996817)
('caab', 0.17000000000007276)
('abbc', 0.16999999999995907)
('bbaa', 0.18000000000006366)
('cacb', 0.18999999999994088)
('bcca', 0.19000000000005457)
('aaba', 0.19000000000005457)
('abcb', 0.1999999999999318)
('ccba', 0.1999999999999318)
('abcc', 0.21000000000003638)
('caaa', 0.22000000000002728)
('caca', 0.22000000000002728)
('cbca', 0.22000000000002728)
('abba', 0.2300000000000182)
('cbac', 0.2300000000000182)
('acbc', 0.2400000000000091)
('bbba', 0.2400000000000091)
('abaa', 0.25)
('caba', 0.2600000000001046)
('bcab', 0.2599999999999909)
('ccca', 0.2699999999999818)
('aaaa', 0.2699999999999818)
('acba', 0.2699999999999818)
('aabc', 0.2799999999999727)
('cacc', 0.2799999999999727)
('abbb', 0.2999999999999545)
('aaab', 0.2900000000000773)
('acab', 0.2999999999999545)
('cbba', 0.30999999999994543)
('aaac', 0.31999999999993634)
('caac', 0.32000000000005)
('accc', 0.3300000000000409)
('ccaa', 0.3300000000000409)
('acaa', 0.34000000000003183)
('bbca', 0.3300000000000409)
('acbb', 0.34000000000003183)
('cabc', 0.35000000000002274)
('ccac', 0.36999999999989086)
('acac', 0.37000000000000455)
('aaca', 0.37000000000000455)
('cabb', 0.37000000000000455)
('bbab', 0.37000000000000455)
('aacb', 0.37999999999999545)
('abac', 0.38999999999998636)
('bcaa', 0.38999999999998636)
('aacc', 0.39999999999997726)
('cbab', 0.39999999999997726)
('aabb', 0.41000000000008185)
('cbaa', 0.4199999999999591)
('acbcb', 0.4199999999999591)
('caaca', 0.43000000000006366)
('acccb', 0.44000000000005457)
('cccba', 0.4399999999999409)
('bcbca', 0.4499999999999318)
('cbaab', 0.4600000000000364)
('abcbc', 0.4600000000000364)
('cacaa', 0.4699999999999136)
('cabcb', 0.4700000000000273)
('acaaa', 0.4700000000000273)
('bcaca', 0.4700000000000273)
('cbbba', 0.4799999999999045)
('abacb', 0.4900000000000091)
('cabca', 0.4900000000000091)
('ccacc', 0.5)
('cacca', 0.5099999999999909)
('cbbaa', 0.5099999999999909)
('cbcab', 0.5200000000000955)
('cabbc', 0.5299999999999727)
('aacac', 0.5200000000000955)
('bbbba', 0.5299999999999727)
('caacb', 0.5400000000000773)
('bbaca', 0.5400000000000773)
('acaab', 0.5599999999999454)
('abbcb', 0.5599999999999454)
('abcca', 0.57000000000005)
('aaaab', 0.57000000000005)
('caaba', 0.5699999999999363)
('bbaac', 0.5799999999999272)
('bcaba', 0.5900000000000318)
('aaccc', 0.5900000000000318)
('abbbb', 0.5900000000000318)
('bcabc', 0.6000000000000227)
('bbbaa', 0.6100000000000136)
('cbcba', 0.6099999999999)
('aabab', 0.6200000000000045)
('abccc', 0.6200000000000045)
('cccaa', 0.6299999999999955)
('bcabb', 0.6299999999999955)
('cccca', 0.6399999999999864)
('ccbaa', 0.6499999999999773)
('bbabb', 0.6499999999999773)
('acbca', 0.6499999999999773)
('bccca', 0.6600000000000819)
('bcacb', 0.6699999999999591)
('cabac', 0.6800000000000637)
('cbabb', 0.6700000000000728)
('aacca', 0.6700000000000728)
('abcba', 0.6999999999999318)
('acccc', 0.7000000000000455)
('bbcba', 0.6999999999999318)
('caaac', 0.7100000000000364)
('aaccb', 0.7100000000000364)
('cbbac', 0.7200000000000273)
('aacbb', 0.7300000000000182)
('aaaaa', 0.7400000000000091)
('bbcaa', 0.7300000000000182)
('cbaac', 0.7399999999998954)
('caccb', 0.75)
('bcbab', 0.7599999999999909)
('ccbab', 0.7599999999999909)
('accaa', 0.7599999999999909)
('acbbb', 0.7699999999999818)
('bbcab', 0.7900000000000773)
('acacb', 0.7899999999999636)
('aacaa', 0.7899999999999636)
('aabcc', 0.7899999999999636)
('ccaca', 0.8100000000000591)
('accba', 0.7999999999999545)
('abbba', 0.7999999999999545)
('bbcca', 0.82000000000005)
('cacbb', 0.8100000000000591)
('caaab', 0.8300000000000409)
('ccbba', 0.8300000000000409)
('aabaa', 0.8400000000000318)
('acbac', 0.8400000000000318)
('bcaac', 0.849999999999909)
('aabac', 0.8500000000000227)
('bbacc', 0.8700000000000045)
('cbaca', 0.8700000000000045)
('abaac', 0.8700000000000045)
('aacba', 0.8700000000000045)
('acbbc', 0.8799999999999955)
('aabbc', 0.8899999999999864)
('ababb', 0.8899999999999864)
('acbaa', 0.900000000000091)
('accab', 0.8999999999999773)
('ccacb', 0.9199999999999591)
('cacab', 0.9199999999999591)
('acaba', 0.9399999999999409)
('caabb', 0.9300000000000637)
('ccaab', 0.9300000000000637)
('cbcaa', 0.9500000000000455)
('ccbac', 0.9500000000000455)
('accbc', 0.9600000000000364)
('acabb', 0.9600000000000364)
('ccabc', 0.9600000000000364)
('acaac', 0.9700000000000273)
('bbabc', 0.9800000000000182)
('ccabb', 0.9900000000000091)
('abbab', 1.0)
('bcacc', 1.0)
('cabba', 1.0)
('ccbca', 1.0199999999999818)
('caccc', 1.009999999999991)
('aaabb', 1.009999999999991)
('caaaa', 1.0199999999999818)
('aacab', 1.0199999999999818)
('bccac', 1.0299999999999727)
('cacba', 1.0299999999999727)
('cbacc', 1.0499999999999545)
('acacc', 1.0500000000000682)
('abbaa', 1.0699999999999363)
('abaca', 1.0699999999999363)
('abbca', 1.07000000000005)
('cbaaa', 1.080000000000041)
('acbcc', 1.080000000000041)
('aaacc', 1.080000000000041)
('bcbba', 1.0900000000000318)
('aaaca', 1.1299999999999955)
('ccaba', 1.1299999999999955)
('bbaab', 1.1399999999999864)
('aabca', 1.1299999999999955)
('acbab', 1.150000000000091)
('accac', 1.1499999999999773)
('cbcac', 1.1599999999999682)
('ccaaa', 1.1599999999999682)
('abcab', 1.17999999999995)
('cbacb', 1.17999999999995)
('ababc', 1.1900000000000546)
('ababa', 1.1900000000000546)
('cccac', 1.1999999999999318)
('aaabc', 1.2100000000000364)
('cacac', 1.2099999999999227)
('cbabc', 1.2100000000000364)
('bbbab', 1.2199999999999136)
('ccaac', 1.2300000000000182)
('abccb', 1.25)
('aabcb', 1.2300000000000182)
('abcaa', 1.25)
('abaaa', 1.25)
('cabaa', 1.25)
('acaca', 1.2699999999999818)
('acbba', 1.2699999999999818)
('bbaaa', 1.3199999999999363)
('cabcc', 1.2999999999999545)
('abacc', 1.3100000000000591)
('cacbc', 1.3000000000000682)
('cbbab', 1.3100000000000591)
('cccab', 1.3100000000000591)
('aaaac', 1.3400000000000318)
('aacbc', 1.3399999999999181)
('abbac', 1.3400000000000318)
('abcbb', 1.3600000000000136)
('bccab', 1.3500000000000227)
('cabbb', 1.349999999999909)
('bcaab', 1.3600000000000136)
('bcbaa', 1.3700000000000045)
('accbb', 1.3799999999999955)
('bbaba', 1.3899999999999864)
('acabc', 1.3999999999999773)
('abbbc', 1.400000000000091)
('aabbb', 1.4099999999999682)
('bbcac', 1.4099999999999682)
('accca', 1.4099999999999682)
('bcbac', 1.4200000000000728)
('abbcc', 1.42999999999995)
('caacc', 1.4399999999999409)
('abaab', 1.42999999999995)
('bbacb', 1.4499999999999318)
('bcaaa', 1.4599999999999227)
('caabc', 1.4600000000000364)
('aaacb', 1.4700000000000273)
('bbbac', 1.4699999999999136)
('cbaba', 1.4800000000000182)
('aabba', 1.4800000000000182)
('bccaa', 1.490000000000009)
('cabab', 1.509999999999991)
('aaaba', 1.509999999999991)
('abcac', 1.5100000000001046)
('cbacac', 1.5199999999999818)
('cabbab', 1.5199999999999818)
('aacaac', 1.5399999999999636)
('cabbca', 1.5400000000000773)
('cbbca', 1.509999999999991)
('bccba', 1.5199999999999818)
('cbcca', 1.5300000000000864)
('bbbca', 1.5299999999999727)
('acaccb', 1.5199999999999818)
('aaccac', 1.5499999999999545)
('cababa', 1.5499999999999545)
('bcabbc', 1.5599999999999454)
('cbabbb', 1.5600000000000591)
('caaaba', 1.57000000000005)
('accacb', 1.57000000000005)
('abbbac', 1.5900000000000318)
('caabaa', 1.5900000000000318)
('bcacaa', 1.580000000000041)
('caacba', 1.599999999999909)
('acabbc', 1.6499999999999773)
('bbcaca', 1.7100000000000364)
('cacacc', 1.6800000000000637)
('bbcaba', 1.669999999999959)
('acaaaa', 1.6999999999999318)
('bccabb', 1.7099999999999227)
('bbacab', 1.7799999999999727)
('cccbac', 1.8099999999999454)
('bbaaca', 1.7899999999999636)
('acbbcc', 1.8199999999999363)
('acccbc', 1.849999999999909)
('bbbacc', 1.8399999999999181)
('abacbc', 1.8200000000001637)
('abcaaa', 1.8700000000001182)
('aaaabc', 1.8199999999999363)
('bbabaa', 1.8099999999999454)
('cbaccc', 1.8199999999999363)
('bbcbaa', 1.759999999999991)
('caabab', 1.8900000000001)
('caaaca', 1.8899999999998727)
('abacab', 1.900000000000091)
('ccabbc', 1.8199999999999363)
('ccaaac', 1.9100000000000819)
('ababac', 1.7899999999999636)
('aabbba', 1.8099999999999454)
('cbaabb', 1.7999999999999545)
('caccbb', 1.8099999999999454)
('aabcbb', 1.8099999999999454)
('cbccba', 1.8200000000001637)
('acacaa', 1.8399999999999181)
('abaaca', 1.849999999999909)
('cabbac', 1.849999999999909)
('cbbcca', 1.8600000000001273)

Time taken to extract lstar-dfa: 400.3904821872711
number of states of the dfa: 342
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aacb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'ccaab', 'b': 'caacb', 'c': 'ccaab'}, 'aabbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abcaa', 'b': 'ccaab', 'c': 'ccaab'}, 'caabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'caaba', 'b': 'ccaab', 'c': 'ccaab'}, 'accc': {'a': 'ccaab', 'b': 'acccb', 'c': 'ccaab'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbac': {'a': 'bbaca', 'b': 'ccaab', 'c': 'ccaab'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'abcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'abaac'}, 'cbabb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcab': {'a': 'ccaab', 'b': 'bcabb', 'c': 'ccaab'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbca': {'a': 'ccaab', 'b': 'bbcab', 'c': 'bbcac'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbaab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'acaaa', 'b': 'ccaab', 'c': 'ccaab'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'cccba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abac': {'a': 'abaca', 'b': 'abacb', 'c': 'ccaab'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbcac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbb'}, 'abab': {'a': 'ababa', 'b': 'ccaab', 'c': 'ccaab'}, 'abacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'accac'}, 'acccbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcb': {'a': 'bcba', 'b': 'cbbc', 'c': 'bbbb'}, 'cacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'ccaab', 'b': 'caccb', 'c': 'ccaab'}, 'ccac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcb': {'a': 'bbcba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'acbbc'}, 'abcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'aaaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaa': {'a': 'ccaab', 'b': 'aaaab', 'c': 'ccaab'}, 'cacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cababa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'ccaab', 'b': 'cbaab', 'c': 'ccaab'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbbb'}, 'bbba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'bbbac'}, 'cabbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'ccaab', 'b': 'bccab', 'c': 'ccaab'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'bbaba', 'b': 'ccaab', 'c': 'ccaab'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcac': {'a': 'bcaca', 'b': 'ccaab', 'c': 'ccaab'}, 'abacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bbbb', 'c': 'cbcc'}, 'ccba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'ccaab', 'b': 'ccabb', 'c': 'ccaab'}, 'abcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'caaa': {'a': 'ccaab', 'b': 'caaab', 'c': 'caaac'}, 'acbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'bbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'ccaab', 'b': 'cbabb', 'c': 'ccaab'}, 'caabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'bbcba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ccaaa', 'b': 'ccaab', 'c': 'ccaab'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabb': {'a': 'cabba', 'b': 'ccaab', 'c': 'cabbc'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'cbaca', 'b': 'ccaab', 'c': 'cbacc'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'abbba', 'b': 'ccaab', 'c': 'ccaab'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'ccaab', 'b': 'aabbb', 'c': 'ccaab'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'ccaab', 'c': 'ccaab'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'abbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acab': {'a': 'ccaab', 'b': 'acabb', 'c': 'ccaab'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'acaca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caccb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ccaab', 'c': 'acacc'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'bbaac'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'ccbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbccb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbb': {'a': 'cbba', 'b': 'bbbb', 'c': 'bbbb'}, 'bccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'ccaab', 'b': 'cabab', 'c': 'ccaab'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cabba': {'a': 'ba', 'b': 'ccaab', 'c': 'ccaab'}, 'acbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bbbb', 'c': 'bbbb'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'ba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'cccb', 'c': 'bbbb'}, 'acbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bcabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'ccaab', 'b': 'bbbb', 'c': 'ccbcb'}, 'aabc': {'a': 'ccaab', 'b': 'aabcb', 'c': 'ccaab'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'ccabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'bbbb', 'c': 'bbbb'}, 'aaac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbcab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'abbc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aaca': {'a': 'aacaa', 'b': 'ccaab', 'c': 'ccaab'}, 'aabbb': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'bcbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'caca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cacac'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbaba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'aaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.367842          None            None              []          0         0         0          342                    None                                    None             400.390482        False      0.1   0.05
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11379432678222656  s
EQ test took  0.0006067752838134766  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1178593635559082  s
EQ test took  0.18979573249816895  s


epsilon= 0.1 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.4257071018218994
Interrupted due to time limit
overall guided extraction time took: 400.54999999999995
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.16000000000008185)
('ac', 0.1799999999998363)
('ab', 0.20000000000004547)
('aa', 0.2300000000000182)
('ca', 0.25)
('ba', 0.2899999999999636)
('aab', 0.290000000000191)
('aac', 0.31999999999993634)
('bba', 0.33999999999991815)
('cca', 0.37000000000011823)
('caa', 0.38999999999987267)
('aba', 0.42000000000007276)
('bca', 0.44000000000005457)
('cab', 0.4600000000000364)
('cba', 0.4800000000000182)
('aaa', 0.5)
('abb', 0.5399999999999636)
('aca', 0.5699999999999363)
('cac', 0.5900000000001455)
('acb', 0.6199999999998909)
('acc', 0.6800000000000637)
('abc', 0.7300000000000182)
('aaba', 0.7599999999999909)
('aaaa', 0.7400000000000091)
('accc', 0.7799999999999727)
('abaa', 0.8400000000001455)
('ccca', 0.8599999999999)
('aaca', 0.900000000000091)
('bcba', 0.9200000000000728)
('acba', 0.9800000000000182)
('bcac', 0.9099999999998545)
('aacc', 0.9300000000000637)
('bcaa', 0.9800000000000182)
('abbb', 1.0499999999999545)
('cbba', 1.0900000000001455)
('cbca', 1.0900000000001455)
('bbca', 1.0699999999999363)
('caac', 1.1600000000000819)
('acca', 1.2000000000000455)
('accb', 1.1700000000000728)
('caca', 1.1899999999998272)
('abac', 1.2799999999999727)
('caab', 1.259999999999991)
('aabb', 1.3399999999999181)
('aaac', 1.3700000000001182)
('aabc', 1.3699999999998909)
('acab', 1.3700000000001182)
('cabb', 1.3799999999998818)
('abbc', 1.4299999999998363)
('cbab', 1.4500000000000455)
('ccab', 1.4500000000000455)
('cbac', 1.5399999999999636)
('abca', 1.490000000000009)
('acbc', 1.5299999999999727)
('bbaa', 1.5399999999999636)
('caaa', 1.6000000000001364)
('cabc', 1.6399999999998727)
('cacc', 1.75)
('acaa', 1.7899999999999636)
('acac', 1.7999999999999545)
('cacb', 1.7899999999999636)
('bcca', 1.8900000000001)
('ccba', 1.900000000000091)
('acbb', 1.9300000000000637)
('aacb', 1.9700000000000273)
('abcc', 1.990000000000009)
('bcab', 2.0299999999999727)
('abab', 2.0399999999999636)
('abba', 2.0299999999999727)
('bbab', 2.0799999999999272)
('caba', 2.1400000000001)
('cbaa', 2.1700000000000728)
('bbac', 2.2100000000000364)
('abcb', 2.25)
('aaab', 2.2899999999999636)
('ccac', 2.3099999999999454)
('ccaa', 2.3599999999999)
('bbba', 2.369999999999891)
('bbabb', 2.4299999999998363)
('bbbac', 2.3799999999998818)
('caaaa', 2.480000000000018)
('ababc', 2.3600000000001273)
('cbbaa', 2.410000000000082)
('ccaac', 2.5)
('acbcc', 2.5599999999999454)
('acbbc', 2.6099999999999)
('acbac', 2.5799999999999272)
('bbcaa', 2.6400000000001)
('bbbca', 2.5399999999999636)
('cabcc', 2.5699999999999363)
('bbabc', 2.5799999999999272)
('cbcca', 2.6200000000001182)
('abaac', 2.6499999999998636)
('abcca', 2.6800000000000637)
('aaabc', 2.7000000000000455)
('cabbc', 2.730000000000018)
('bbacc', 2.759999999999991)
('cbacc', 2.7799999999999727)
('aabba', 2.8300000000001546)
('abbab', 2.839999999999918)
('caabb', 2.8900000000001)
('bbbba', 2.900000000000091)
('caccc', 2.9300000000000637)
('bcaaa', 2.9600000000000364)
('bbcac', 2.980000000000018)
('abbba', 3.019999999999982)
('aacbc', 3.0499999999999545)
('abbca', 3.0699999999999363)
('bbbaa', 3.1099999999999)
('caacc', 3.1400000000001)
('cacbc', 3.209999999999809)
('cabca', 3.1700000000000728)
('aabbb', 3.25)
('cbaca', 3.25)
('aacab', 3.269999999999982)
('abacc', 3.3299999999999272)
('aacba', 3.339999999999918)
('accbc', 3.3700000000001182)
('bccab', 3.410000000000082)
('bcacb', 3.439999999999827)
('bcaba', 3.480000000000018)
('ccabc', 3.480000000000018)
('cbaba', 3.509999999999991)
('caccb', 3.5699999999999363)
('cacca', 3.589999999999918)
('aabab', 3.6399999999998727)
('abbbb', 3.630000000000109)
('cbabb', 3.660000000000082)
('bcbaa', 3.6800000000000637)
('ccaab', 3.7200000000000273)
('bbacb', 3.75)
('acbbb', 3.769999999999982)
('bbaca', 3.810000000000173)
('cbcaa', 3.8400000000001455)
('acacc', 3.8600000000001273)
('aabca', 3.8999999999998636)
('accbb', 3.9200000000000728)
('bcaca', 3.9299999999998363)
('abbac', 3.980000000000018)
('acbcb', 4.0)
('cacab', 4.039999999999964)
('aaaca', 4.079999999999927)
('abcbb', 4.110000000000127)
('caaca', 4.129999999999882)
('bcbac', 4.170000000000073)
('aaccc', 4.190000000000055)
('cccaa', 4.210000000000036)
('cbbab', 4.220000000000027)
('aabcc', 4.289999999999964)
('accba', 4.2999999999999545)
('aabcb', 4.310000000000173)
('bccaa', 4.370000000000118)
('aacbb', 4.370000000000118)
('caaab', 4.399999999999864)
('ccbab', 4.420000000000073)
('ccacb', 4.490000000000009)
('cbaac', 4.529999999999973)
('acbab', 4.5499999999999545)
('ababb', 4.559999999999945)
('ccbaa', 4.599999999999909)
('abcaa', 4.629999999999882)
('cbbac', 4.649999999999864)

Time taken to extract lstar-dfa: 400.5395522117615
number of states of the dfa: 180
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'acbc': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'caaa': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'abcb': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'acbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcb': {'a': 'bcba', 'b': 'bcbb', 'c': 'bcbb'}, 'cacc': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acbcc'}, 'ccac': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbb': {'a': 'cbba', 'b': 'bcbb', 'c': 'bcbb'}, 'cabc': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacb': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acbcc'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'acbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'accc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bcbb', 'c': 'bcbb'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'acbb': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'bbbb': {'a': 'acbcc', 'b': 'bcbb', 'c': 'bcbb'}, 'bbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'aaa': {'a': 'acbcc', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accb': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acbcc'}, 'bbac': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acbcc'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'ccc': {'a': 'ccca', 'b': 'bcbb', 'c': 'bcbb'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'acbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'aaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'acbcc', 'b': 'bcbb', 'c': 'bcbb'}, 'aabc': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acbcc'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcab': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'cabb': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'bbca': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'bbc': {'a': 'bbca', 'b': 'bcbb', 'c': 'bcbb'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'bcbb', 'c': 'bcbb'}, 'bbba': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'aaac': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'cacb': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'abbb': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'acaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcac': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'bba': {'a': 'acbcc', 'b': 'bbab', 'c': 'bbac'}, 'aca': {'a': 'acbcc', 'b': 'acbcc', 'c': 'acac'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bcbb', 'c': 'bbbb'}, 'ccba': {'a': 'acbcc', 'b': 'acbcc', 'c': 'ba'}, 'bcba': {'a': 'acbcc', 'b': 'ba', 'c': 'acbcc'}, 'abbc': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'bcaa': {'a': 'acbcc', 'b': 'ba', 'c': 'ba'}, 'bcbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'caaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acbcc', 'b': 'accb', 'c': 'acbcc'}, 'abac': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'bcbb': {'a': 'ba', 'b': 'bcbb', 'c': 'bcbb'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'caca': {'a': 'ba', 'b': 'acbcc', 'c': 'ba'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'acbcc', 'b': 'cabb', 'c': 'cabc'}, 'bbbc': {'a': 'acbcc', 'b': 'bcbb', 'c': 'bcbb'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'bbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbb'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abab': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'ba', 'b': 'acbcc', 'c': 'acbcc'}, 'acca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'acac': {'a': 'ba', 'b': 'ba', 'c': 'acbcc'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.425707          None            None              []          0         0         0          180                    None                                    None             400.539552        False      0.1   0.01
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.126800537109375  s
EQ test took  0.0006210803985595703  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1284782886505127  s
EQ test took  0.23085546493530273  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.49033427238464355
Interrupted due to time limit
overall guided extraction time took: 400.18000000000006
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.009999999999990905)
('aa', 0.009999999999990905)
('ca', 0.009999999999990905)
('ab', 0.01999999999998181)
('ac', 0.01999999999998181)
('ba', 0.01999999999998181)
('acb', 0.01999999999998181)
('acc', 0.029999999999972715)
('cac', 0.03000000000020009)
('bba', 0.03999999999996362)
('bca', 0.029999999999972715)
('cba', 0.029999999999972715)
('cca', 0.03999999999996362)
('aba', 0.040000000000190994)
('cab', 0.03999999999996362)
('aca', 0.03999999999996362)
('abb', 0.049999999999954525)
('caa', 0.049999999999954525)
('aac', 0.0500000000001819)
('aaa', 0.05999999999994543)
('aab', 0.05999999999994543)
('abc', 0.06999999999993634)
('cacc', 0.07000000000016371)
('bcba', 0.05999999999994543)
('cacb', 0.07000000000016371)
('abbb', 0.06999999999993634)
('ccca', 0.06999999999993634)
('aacc', 0.07999999999992724)
('aaaa', 0.07999999999992724)
('caaa', 0.08000000000015461)
('bcca', 0.07999999999992724)
('cbba', 0.09000000000014552)
('bbab', 0.08999999999991815)
('bbac', 0.09000000000014552)
('ccba', 0.08999999999991815)
('acca', 0.09000000000014552)
('bbca', 0.09999999999990905)
('ccac', 0.10000000000013642)
('bcac', 0.09999999999990905)
('abcc', 0.11000000000012733)
('aaba', 0.10999999999989996)
('abba', 0.11000000000012733)
('acbc', 0.11999999999989086)
('ccaa', 0.10999999999989996)
('aaab', 0.12000000000011823)
('abcb', 0.12999999999988177)
('bbba', 0.13000000000010914)
('abac', 0.12999999999988177)
('aabb', 0.12999999999988177)
('aacb', 0.13000000000010914)
('abbc', 0.13999999999987267)
('caac', 0.13999999999987267)
('accc', 0.14000000000010004)
('caca', 0.14000000000010004)
('acab', 0.14999999999986358)
('aabc', 0.15000000000009095)
('acbb', 0.15000000000009095)
('caab', 0.15000000000009095)
('cbac', 0.15999999999985448)
('cbaa', 0.15999999999985448)
('acaa', 0.16000000000008185)
('cbca', 0.16000000000008185)
('abca', 0.17000000000007276)
('cabb', 0.17000000000007276)
('bbaa', 0.18000000000006366)
('cbab', 0.18000000000006366)
('caba', 0.1799999999998363)
('acac', 0.1799999999998363)
('cabc', 0.1799999999998363)
('bcab', 0.19000000000005457)
('abab', 0.19000000000005457)
('abaa', 0.19000000000005457)
('aaac', 0.20000000000004547)
('ccab', 0.20000000000004547)
('bcaa', 0.20000000000004547)
('aaca', 0.21000000000003638)
('acba', 0.209999999999809)
('accb', 0.22000000000002728)
('accab', 0.22000000000002728)
('cbcac', 0.21000000000003638)
('bbcab', 0.2300000000000182)
('bbacb', 0.22000000000002728)
('cbbca', 0.2300000000000182)
('aaaab', 0.2300000000000182)
('ccabc', 0.2300000000000182)
('aacac', 0.2400000000000091)
('aacaa', 0.2400000000000091)
('acbab', 0.2400000000000091)
('ccabb', 0.2400000000000091)
('caacc', 0.25)
('aabbb', 0.2400000000000091)
('cabba', 0.25)
('acaca', 0.2599999999999909)
('aabcb', 0.2599999999999909)
('bcacb', 0.2599999999999909)
('aaabb', 0.2699999999999818)
('cbaba', 0.2599999999999909)
('abbbc', 0.2699999999999818)
('abbca', 0.2699999999999818)
('cacaa', 0.2800000000002001)
('cbaab', 0.2799999999999727)
('bcaba', 0.2899999999999636)
('cbcca', 0.2799999999999727)
('aacbb', 0.2799999999999727)
('aabca', 0.2899999999999636)
('ccbac', 0.3000000000001819)
('abacc', 0.2899999999999636)
('bcbac', 0.2999999999999545)
('ccbab', 0.3000000000001819)
('abbcb', 0.2999999999999545)
('acaac', 0.3100000000001728)
('bbaaa', 0.3200000000001637)
('acaaa', 0.30999999999994543)
('abbcc', 0.30999999999994543)
('bcaca', 0.3200000000001637)
('ccbaa', 0.31999999999993634)
('cbacc', 0.32999999999992724)
('bbabc', 0.31999999999993634)
('abbba', 0.31999999999993634)
('bccac', 0.3300000000001546)
('cbbab', 0.33999999999991815)
('abaab', 0.33999999999991815)
('acbcb', 0.33999999999991815)
('accbc', 0.34999999999990905)
('acbaa', 0.33999999999991815)
('ccaac', 0.35999999999989996)
('ababb', 0.35999999999989996)
('abbaa', 0.3500000000001364)
('bccca', 0.36000000000012733)
('cacac', 0.36999999999989086)
('bccab', 0.36000000000012733)
('abbab', 0.37000000000011823)
('cbbba', 0.37000000000011823)
('ccbba', 0.37999999999988177)
('aaccb', 0.37999999999988177)
('acbac', 0.38000000000010914)
('aacca', 0.39000000000010004)
('aabcc', 0.38000000000010914)
('cacbc', 0.38000000000010914)
('aacab', 0.38999999999987267)
('aabab', 0.39000000000010004)
('aaaac', 0.40000000000009095)
('cacab', 0.3999999999998636)
('cabcb', 0.3999999999998636)
('bccaa', 0.41000000000008185)
('bcbca', 0.4099999999998545)
('cbabc', 0.40000000000009095)
('aabbc', 0.42000000000007276)
('caabc', 0.4299999999998363)
('bbcac', 0.42000000000007276)
('acaba', 0.4199999999998454)
('cabbb', 0.4299999999998363)
('abcaa', 0.42000000000007276)
('caaca', 0.4600000000000364)
('aabac', 0.43000000000006366)
('accac', 0.4399999999998272)
('cbcba', 0.4600000000000364)
('cabbc', 0.4800000000000182)
('bbcba', 0.4700000000000273)
('cabac', 0.4900000000000091)
('cccab', 0.4900000000000091)
('caacb', 0.4900000000000091)
('cbabb', 0.4800000000000182)
('bcbab', 0.5)
('abacb', 0.5099999999999909)
('caabb', 0.5)
('acaab', 0.4900000000000091)
('cccca', 0.5099999999999909)
('bbaab', 0.4800000000000182)
('bbbba', 0.5)
('cabaa', 0.4800000000000182)
('ccaaa', 0.4900000000000091)
('cacca', 0.5199999999999818)
('abcab', 0.5299999999999727)
('bcacc', 0.5099999999999909)
('aaacb', 0.4900000000000091)
('bbacc', 0.5)
('caccb', 0.5099999999999909)
('aabaa', 0.5099999999999909)
('bbaba', 0.5099999999999909)
('bcabb', 0.5099999999999909)
('abcba', 0.5199999999999818)
('bcabc', 0.5399999999999636)
('acbbc', 0.5599999999999454)
('ccacc', 0.5699999999999363)
('cabcc', 0.5599999999999454)
('cbacb', 0.5700000000001637)
('ccacb', 0.5799999999999272)
('aaacc', 0.5799999999999272)
('aaaaa', 0.5700000000001637)
('abbac', 0.5899999999999181)
('abcbb', 0.5900000000001455)
('abbbb', 0.5899999999999181)
('caccc', 0.6000000000001364)
('acbba', 0.6099999999999)
('ccaba', 0.5900000000001455)
('bbbac', 0.599999999999909)
('bbcaa', 0.6099999999999)
('bbaac', 0.6200000000001182)
('bccba', 0.6199999999998909)
('cbaca', 0.6099999999999)
('ccaab', 0.6199999999998909)
('aaccc', 0.6300000000001091)
('caaaa', 0.6300000000001091)
('abcca', 0.6300000000001091)
('aacbc', 0.6400000000001)
('bcbaa', 0.6400000000001)
('abcbc', 0.6099999999999)
('acbbb', 0.6299999999998818)
('cccaa', 0.6399999999998727)
('caaac', 0.650000000000091)
('aaaba', 0.6499999999998636)
('ccaca', 0.6599999999998545)
('caaba', 0.6599999999998545)
('acbca', 0.6700000000000728)
('cabca', 0.6700000000000728)
('cbcab', 0.6700000000000728)
('acacc', 0.6800000000000637)
('cccba', 0.6799999999998363)
('aaabc', 0.6800000000000637)
('bcaac', 0.6699999999998454)
('cbaaa', 0.6899999999998272)
('cbbaa', 0.6700000000000728)
('aaaca', 0.6900000000000546)
('bbcca', 0.6899999999998272)
('caaab', 0.6999999999998181)
('ababa', 0.7100000000000364)
('aabba', 0.7100000000000364)
('acbcc', 0.7100000000000364)
('abaaa', 0.7200000000000273)
('bbbaa', 0.7200000000000273)
('bcaab', 0.6700000000000728)
('ababc', 0.7299999999997908)
('cbaac', 0.6800000000000637)
('bcaaa', 0.7300000000000182)
('cacbb', 0.7400000000000091)
('accbb', 0.75)
('acccc', 0.7400000000000091)
('abaca', 0.7000000000000455)
('accba', 0.7100000000000364)
('aacba', 0.7400000000000091)
('acabc', 0.7699999999999818)
('abaac', 0.7100000000000364)
('ccbca', 0.7300000000000182)
('accaa', 0.7699999999999818)
('acccb', 0.7699999999999818)
('cabab', 0.7599999999999909)
('acabb', 0.7799999999999727)
('abccb', 0.7400000000000091)
('acacb', 0.7899999999999636)
('cacba', 0.7800000000002001)
('bcbba', 0.7799999999999727)
('abcac', 0.8099999999999454)
('accca', 0.7700000000002092)
('bbbab', 0.8199999999999363)
('bbabb', 0.8200000000001637)
('bbaca', 0.8199999999999363)
('abccc', 0.8299999999999272)
('cccac', 0.8099999999999454)
('cbcaa', 0.7999999999999545)
('cbbac', 0.8100000000001728)
('bbaaab', 0.8500000000001364)
('cacbab', 0.7999999999999545)
('bbacba', 0.8600000000001273)
('bbbca', 0.8399999999999181)
('cbcbab', 0.8399999999999181)
('bcaaac', 0.8699999999998909)
('acbccb', 0.7999999999999545)
('ccacba', 0.8199999999999363)
('caaaba', 0.8400000000001455)
('bcaccc', 0.8599999999999)
('aacacc', 0.8599999999999)
('cacaab', 0.8700000000001182)
('cbbcab', 0.8700000000001182)
('cabbcb', 0.8699999999998909)
('bbacab', 0.8500000000001364)
('bcacaa', 0.8199999999999363)
('caacbc', 0.8799999999998818)
('acaaca', 0.8900000000001)
('accbba', 0.8299999999999272)
('cbbacb', 0.8900000000001)
('bcabaa', 0.8799999999998818)
('bbbaab', 0.9100000000000819)
('acaccc', 0.9099999999998545)
('cccabb', 0.9100000000000819)
('abbcbb', 0.8999999999998636)
('cbbcca', 0.9100000000000819)
('caccaa', 0.900000000000091)
('bcbcaa', 0.9199999999998454)
('abbbac', 0.8899999999998727)
('cbaaca', 0.9300000000000637)
('accaaa', 0.8700000000001182)
('bcbbaa', 0.9200000000000728)
('accaca', 0.9299999999998363)
('aaccbc', 0.9300000000000637)
('cccbac', 0.9500000000000455)
('cccaaa', 0.9100000000000819)
('aacaca', 0.9300000000000637)
('bccbac', 0.9600000000000364)
('bccaba', 0.9399999999998272)
('aacbbc', 0.9600000000000364)
('cbbcaa', 0.9600000000000364)
('aaaccc', 0.9700000000000273)
('caabca', 0.9800000000000182)
('acaaab', 0.9700000000000273)
('acbbbc', 0.9800000000000182)
('cacabb', 0.9799999999997908)
('bcccca', 0.9700000000000273)
('aaaaab', 0.9900000000000091)
('acbbcb', 0.9800000000000182)
('acbcaa', 0.9800000000000182)
('aacbac', 1.0)
('abbccb', 1.009999999999991)
('cccbca', 1.0)
('aabacb', 1.009999999999991)
('bbabbb', 1.0)
('bbabcc', 1.009999999999991)
('aaabbb', 0.9700000000000273)
('cbbcac', 1.0199999999999818)
('acacab', 1.009999999999991)
('abbaaa', 1.0199999999999818)
('acbcab', 0.9600000000000364)
('aaacca', 0.9500000000000455)
('aabcba', 0.959999999999809)
('aabccc', 0.9699999999997999)
('bcbabb', 0.9700000000000273)
('acbbca', 0.9799999999997908)
('aaccca', 0.9799999999997908)
('aabbac', 0.9900000000000091)
('abaccc', 1.0599999999999454)
('bbbcab', 1.050000000000182)
('aabcbb', 1.0700000000001637)
('abbcac', 1.0599999999999454)
('bcbaab', 1.0700000000001637)
('accaab', 1.0799999999999272)
('ccacab', 1.0700000000001637)
('aacbbb', 1.0799999999999272)
('bbaacc', 1.009999999999991)
('abcaca', 1.0199999999999818)
('bbabba', 1.0299999999999727)
('cabaca', 1.0299999999999727)
('cacabc', 1.0199999999999818)
('abcaba', 1.0900000000001455)
('cbccac', 1.0900000000001455)
('bcbcab', 1.0399999999999636)
('abbbcb', 1.0399999999999636)
('cbacab', 1.099999999999909)
('abbaba', 1.1099999999999)
('cabccc', 1.1199999999998909)
('ababba', 1.0799999999999272)
('acbaab', 1.0499999999999545)
('aacbba', 1.0599999999999454)
('caabab', 1.0199999999999818)
('abcbab', 1.0199999999999818)
('aaabaa', 1.0299999999999727)
('cbcacb', 1.0299999999999727)
('cccaca', 1.0299999999999727)
('aabcbc', 1.0399999999999636)
('bbacbc', 1.0399999999999636)
('acbacb', 1.0399999999999636)
('ababbc', 1.0399999999999636)
('acabca', 1.0499999999999545)
('cacbba', 1.0599999999999454)
('aaabba', 1.0699999999999363)

Time taken to extract lstar-dfa: 400.16091537475586
number of states of the dfa: 398
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cabcc'}, 'aacb': {'a': 'aacba', 'b': 'aacbb', 'c': 'ccaab'}, 'bbbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'ccaab', 'b': 'caacb', 'c': 'ccaab'}, 'abca': {'a': 'ccaab', 'b': 'abcab', 'c': 'abcac'}, 'caabc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'caab': {'a': 'caaba', 'b': 'ccaab', 'c': 'caabc'}, 'accc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aaaaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acbbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abbcb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbac': {'a': 'bbaca', 'b': 'bbacb', 'c': 'ccaab'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcab': {'a': 'bcaba', 'b': 'ccaab', 'c': 'ccaab'}, 'ccacb': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aabac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'aaabb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'cbcba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'acaaa', 'b': 'ccaab', 'c': 'acaac'}, 'cccaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cbbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcba': {'a': 'bcbaa', 'b': 'bcbab', 'c': 'ccaab'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'cccba', 'b': 'ccbcb', 'c': 'bbbb'}, 'accaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'abacc'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbc'}, 'abab': {'a': 'ccaab', 'b': 'ababb', 'c': 'ccaab'}, 'bbacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acca': {'a': 'accaa', 'b': 'ccaab', 'c': 'accac'}, 'cbbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'acbc': {'a': 'acbca', 'b': 'ccaab', 'c': 'acbcc'}, 'cccbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcb': {'a': 'bcba', 'b': 'bcbb', 'c': 'bcbc'}, 'cacba': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'ccaab', 'c': 'ccaab'}, 'ccac': {'a': 'ccaca', 'b': 'ccacb', 'c': 'ccaab'}, 'bbaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ccaab', 'b': 'ba', 'c': 'ccaab'}, 'bcbba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'abbcc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'aaaba', 'b': 'aaabb', 'c': 'ccaab'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbb': {'a': 'ccaab', 'b': 'acbbb', 'c': 'acbbc'}, 'abcac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aacbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aaaa': {'a': 'aaaaa', 'b': 'ccaab', 'c': 'ccaab'}, 'bcaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbb': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cacbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'cbbca', 'b': 'ccbcb', 'c': 'bbbb'}, 'bccab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcba': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cbaac'}, 'bbc': {'a': 'bbca', 'b': 'bbbb', 'c': 'bbbb'}, 'bbba': {'a': 'bbbaa', 'b': 'ccaab', 'c': 'ccaab'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'ccaab', 'b': 'bccab', 'c': 'ccaab'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'ccaab', 'b': 'bbabb', 'c': 'bbabc'}, 'abbab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ccaab', 'b': 'ba', 'c': 'ccaab'}, 'abcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aaccbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcac': {'a': 'bcaca', 'b': 'ccaab', 'c': 'bcacc'}, 'abbccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'cbcb', 'c': 'cbcc'}, 'ccba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'bcaaa', 'b': 'ccaab', 'c': 'ccaab'}, 'bcbaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcab': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbc': {'a': 'bbbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'aacbb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aabcb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caaa': {'a': 'ccaab', 'b': 'caaab', 'c': 'ccaab'}, 'acbcc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cbcac'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'cccab', 'c': 'cccac'}, 'aacbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cbbac'}, 'aaabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'caccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cabccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'abbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'cacbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababb': {'a': 'ccaab', 'b': 'ba', 'c': 'ccaab'}, 'cabb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cabbc'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'cbaca', 'b': 'ccaab', 'c': 'ccaab'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'abbbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'abbba', 'b': 'ccaab', 'c': 'abbbc'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aabb': {'a': 'aabba', 'b': 'ccaab', 'c': 'ccaab'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'ccaab', 'b': 'aaccb', 'c': 'aaccc'}, 'aaaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'cacaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cacabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'aabac'}, 'bccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cbaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'acbaa', 'b': 'ccaab', 'c': 'acbac'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbc': {'a': 'bcbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'acabc'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'abba': {'a': 'abbaa', 'b': 'abbab', 'c': 'ccaab'}, 'caccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ccaab', 'c': 'acacc'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'bbaaa', 'b': 'ccaab', 'c': 'bbaac'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'abcba', 'b': 'ccaab', 'c': 'ccaab'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'ccbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbb': {'a': 'cbba', 'b': 'bbbb', 'c': 'cbbc'}, 'cbbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'bbbb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cabac'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'aacbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bbabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacb': {'a': 'ccaab', 'b': 'ba', 'c': 'ccaab'}, 'bcc': {'a': 'bcca', 'b': 'bccb', 'c': 'bccc'}, 'cabac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'ccaab', 'c': 'ccaab'}, 'abcba': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aaaba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'ba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accb': {'a': 'ccaab', 'b': 'accbb', 'c': 'ccaab'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'cccb', 'c': 'bbbb'}, 'accaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcaca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'cbcca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabc': {'a': 'ccaab', 'b': 'aabcb', 'c': 'aabcc'}, 'acbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'cacaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'bbbb', 'c': 'bbbb'}, 'cbbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'aaacc'}, 'cccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'cacb': {'a': 'cacba', 'b': 'cacbb', 'c': 'ccaab'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'cccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbc': {'a': 'abbca', 'b': 'abbcb', 'c': 'abbcc'}, 'aabcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'aacac'}, 'acaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcbb': {'a': 'bcbba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbcc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'caca': {'a': 'cacaa', 'b': 'cacab', 'c': 'ccaab'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'bcabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'ababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'bccba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.490334          None            None              []          0         0         0          398                    None                                    None             400.160915        False     0.05    0.1
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11771607398986816  s
EQ test took  0.0006234645843505859  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.13041138648986816  s
EQ test took  0.27256131172180176  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.5245361328125
Interrupted due to time limit
overall guided extraction time took: 401.79999999999995
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.01999999999998181)
('ab', 0.029999999999972715)
('ac', 0.040000000000190994)
('aa', 0.029999999999972715)
('ca', 0.03999999999996362)
('ba', 0.049999999999954525)
('abc', 0.049999999999954525)
('abb', 0.0500000000001819)
('bca', 0.05999999999994543)
('acc', 0.05999999999994543)
('acb', 0.07000000000016371)
('caa', 0.06999999999993634)
('aab', 0.07999999999992724)
('bba', 0.08000000000015461)
('aba', 0.08999999999991815)
('cab', 0.08999999999991815)
('cca', 0.09999999999990905)
('cac', 0.09999999999990905)
('cba', 0.12000000000011823)
('aca', 0.10999999999989996)
('aac', 0.12000000000011823)
('aaa', 0.13000000000010914)
('accb', 0.12999999999988177)
('cacb', 0.13000000000010914)
('cbac', 0.13999999999987267)
('bbba', 0.15000000000009095)
('abca', 0.15000000000009095)
('caca', 0.16000000000008185)
('abaa', 0.15999999999985448)
('bcab', 0.16000000000008185)
('ccca', 0.17000000000007276)
('aaba', 0.18000000000006366)
('caaa', 0.18000000000006366)
('abcc', 0.1799999999998363)
('aaca', 0.18000000000006366)
('aabb', 0.18000000000006366)
('abab', 0.20000000000004547)
('ccaa', 0.20000000000004547)
('bcba', 0.20000000000004547)
('cabb', 0.21000000000003638)
('accc', 0.21000000000003638)
('cabc', 0.22000000000002728)
('bcac', 0.22000000000002728)
('aacb', 0.2300000000000182)
('abbc', 0.2400000000000091)
('bbab', 0.2400000000000091)
('bbca', 0.2400000000000091)
('acba', 0.25)
('ccab', 0.2599999999999909)
('aaab', 0.2599999999999909)
('ccac', 0.2599999999999909)
('aaaa', 0.2699999999999818)
('abcb', 0.2799999999999727)
('cacc', 0.2799999999999727)
('aacc', 0.2800000000002001)
('acca', 0.2899999999999636)
('caac', 0.2999999999999545)
('cbba', 0.3100000000001728)
('caba', 0.32999999999992724)
('abbb', 0.32999999999992724)
('aaac', 0.33999999999991815)
('acaa', 0.33999999999991815)
('bbac', 0.32999999999992724)
('abac', 0.3300000000001546)
('cbab', 0.33999999999991815)
('acbc', 0.3500000000001364)
('acab', 0.34999999999990905)
('acbb', 0.35999999999989996)
('cbca', 0.36000000000012733)
('caab', 0.37000000000011823)
('bcca', 0.38999999999987267)
('bcaa', 0.38999999999987267)
('aabc', 0.38999999999987267)
('abba', 0.40000000000009095)
('acac', 0.40000000000009095)
('cbaa', 0.40000000000009095)
('bbaa', 0.41000000000008185)
('ccba', 0.4199999999998454)
('bccca', 0.43000000000006366)
('aaaab', 0.4299999999998363)
('aabba', 0.4299999999998363)
('bbabb', 0.44000000000005457)
('acaaa', 0.44000000000005457)
('cbbaa', 0.4499999999998181)
('accbb', 0.4500000000000455)
('acbca', 0.459999999999809)
('bbaab', 0.4700000000000273)
('cbaca', 0.4700000000000273)
('ababc', 0.4800000000000182)
('accbc', 0.4800000000000182)
('acacb', 0.5)
('bccab', 0.4900000000000091)
('acabb', 0.4900000000000091)
('acccc', 0.5099999999999909)
('bbcaa', 0.5099999999999909)
('caaab', 0.5199999999999818)
('cbacb', 0.5099999999999909)
('aacca', 0.5299999999999727)
('cbbba', 0.5299999999999727)
('abbcb', 0.540000000000191)
('cccab', 0.5399999999999636)
('cbbca', 0.5599999999999454)
('bcabb', 0.5499999999999545)
('ccaba', 0.5599999999999454)
('acbba', 0.5699999999999363)
('cbacc', 0.5699999999999363)
('cabbb', 0.5800000000001546)
('aacac', 0.5700000000001637)
('bcaac', 0.5900000000001455)
('ccbba', 0.5900000000001455)
('bbbac', 0.599999999999909)
('abcaa', 0.6099999999999)
('abcca', 0.6200000000001182)
('cbbac', 0.6200000000001182)
('ababa', 0.6100000000001273)
('abaab', 0.6300000000001091)
('abcbc', 0.6400000000001)
('abacb', 0.6399999999998727)
('caccc', 0.6399999999998727)
('cccba', 0.650000000000091)
('acaab', 0.6499999999998636)
('bbbab', 0.6599999999998545)
('abbaa', 0.6699999999998454)
('aabcc', 0.6800000000000637)
('bbbca', 0.6799999999998363)
('cacbb', 0.6800000000000637)
('cbabc', 0.6800000000000637)
('accca', 0.6900000000000546)
('cbcba', 0.709999999999809)
('bbbaa', 0.6999999999998181)
('caacc', 0.7100000000000364)
('ccacc', 0.7199999999997999)
('acacc', 0.7300000000000182)
('abbbc', 0.7300000000000182)
('bbaca', 0.7300000000000182)
('bbacb', 0.7400000000000091)
('caaac', 0.7400000000000091)
('aacbb', 0.75)
('bcaaa', 0.75)
('cacbc', 0.75)
('aaacc', 0.7599999999999909)
('abbab', 0.7700000000002092)
('aaacb', 0.7899999999999636)
('ccbaa', 0.7799999999999727)
('aaaca', 0.7999999999999545)
('acccb', 0.7999999999999545)
('bbaba', 0.7999999999999545)
('bccba', 0.8100000000001728)
('cbaab', 0.8099999999999454)
('abbac', 0.8299999999999272)
('ccbab', 0.8299999999999272)
('acbcb', 0.8299999999999272)
('bbaaa', 0.8399999999999181)
('cacba', 0.849999999999909)
('cabac', 0.8399999999999181)
('bbbba', 0.8599999999999)
('cbcca', 0.8600000000001273)
('bcbaa', 0.8800000000001091)
('aaabc', 0.8699999999998909)
('cabaa', 0.8700000000001182)
('bcbac', 0.8799999999998818)
('aabca', 0.8899999999998727)
('cbcaa', 0.8900000000001)
('cabba', 0.8900000000001)
('cccca', 0.9100000000000819)
('ccacb', 0.9099999999998545)
('ccaca', 0.9200000000000728)
('ccbac', 0.9200000000000728)
('aacaa', 0.9300000000000637)
('aacbc', 0.9299999999998363)
('cbbab', 0.9500000000000455)
('bcabc', 0.9500000000000455)
('cbcab', 0.9500000000000455)
('cbaac', 0.9600000000000364)
('aabaa', 0.9600000000000364)
('bbcba', 0.959999999999809)
('aaaba', 0.9800000000000182)
('caabb', 0.9800000000000182)
('bbacc', 0.9900000000000091)
('abcbb', 1.0)
('ccbca', 0.9900000000000091)
('aaccc', 1.009999999999991)
('aabcb', 0.9900000000000091)
('accaa', 1.009999999999991)
('ababb', 1.0199999999999818)
('cccac', 1.0299999999999727)
('acaac', 1.0399999999999636)
('ccabc', 1.0399999999999636)
('bcbab', 1.0399999999999636)
('caaba', 1.0499999999999545)
('acbaa', 1.0499999999999545)
('accab', 1.0699999999999363)
('bbabc', 1.0699999999999363)
('aabbc', 1.0799999999999272)
('acbbb', 1.0899999999999181)
('acbab', 1.099999999999909)
('aabab', 1.0900000000001455)
('abccc', 1.099999999999909)
('aaaaa', 1.099999999999909)
('aaaac', 1.1099999999999)
('acaba', 1.1199999999998909)
('cabcb', 1.1399999999998727)
('cbabb', 1.1399999999998727)
('bbcca', 1.1400000000003274)
('caccb', 1.1399999999998727)
('abbba', 1.150000000000091)
('bccac', 1.1599999999998545)
('caaca', 1.1499999999996362)
('cabca', 1.1700000000000728)
('aaccb', 1.169999999999618)
('abaca', 1.1700000000000728)
('cbcac', 1.1799999999998363)
('caacb', 1.1900000000000546)
('cabcc', 1.1900000000000546)
('accac', 1.2000000000002728)
('cacab', 1.2199999999998)
('aaabb', 1.2199999999998)
('cabbc', 1.2200000000002547)
('acabc', 1.2200000000002547)
('acbbc', 1.2300000000000182)
('ccaac', 1.25)
('aacab', 1.25)
('abaac', 1.2599999999997635)
('cacca', 1.2699999999999818)
('cbaba', 1.2799999999997453)
('bcaca', 1.2799999999997453)
('caaaa', 1.2899999999999636)
('abccb', 1.2899999999999636)
('aabbb', 1.2999999999997272)
('abbca', 1.300000000000182)
('acbac', 1.3099999999999454)
('cbaaa', 1.3099999999999454)
('bcacb', 1.330000000000382)
('bbcab', 1.330000000000382)
('abbcc', 1.3399999999996908)
('abacc', 1.3399999999996908)
('bccaa', 1.3600000000001273)
('ccaaa', 1.3799999999996544)
('caabc', 1.3700000000003456)
('cacaa', 1.3699999999998909)
('accba', 1.3800000000001091)
('bbaac', 1.3800000000001091)
('acbcc', 1.3899999999998727)
('bcaab', 1.3899999999998727)
('bcacc', 1.400000000000091)
('aacba', 1.400000000000091)
('bcaba', 1.4099999999998545)
('abcba', 1.4399999999995998)
('bcbba', 1.4200000000000728)
('cccaa', 1.4600000000000364)
('acaca', 1.4700000000002547)
('ccabb', 1.4899999999997817)
('abcab', 1.4800000000000182)
('bbcac', 1.4699999999998)
('abaaa', 1.5)
('abbbb', 1.5)
('abcac', 1.5100000000002183)
('aabac', 1.5099999999997635)
('cabab', 1.5300000000002)
('ccaab', 1.5399999999999636)
('cacac', 1.5300000000002)
('acaabc', 1.550000000000182)
('abccbc', 1.5399999999999636)
('aaaacb', 1.5399999999999636)
('cacaab', 1.5599999999999454)
('bcbabb', 1.5599999999999454)
('abbaab', 1.580000000000382)
('bbabca', 1.5599999999999454)
('bcbca', 1.5499999999997272)
('cbacaa', 1.5799999999999272)
('cbaacc', 1.569999999999709)
('abccca', 1.5799999999999272)
('aababb', 1.5799999999999272)
('acbbcb', 1.5799999999999272)
('cacacc', 1.5900000000001455)
('cbabcb', 1.599999999999909)
('ccabca', 1.6100000000001273)
('cbabcc', 1.6100000000001273)
('cccaac', 1.6100000000001273)
('aabbaa', 1.6300000000001091)
('acaccc', 1.6199999999998909)
('caaccc', 1.6300000000001091)
('ccbbba', 1.6300000000001091)
('bccaca', 1.6499999999996362)
('bcbacb', 1.650000000000091)
('aaaabc', 1.6700000000000728)
('acaaca', 1.6700000000000728)
('bbcbca', 1.6700000000000728)
('ccaccc', 1.6700000000000728)
('aacaac', 1.6700000000000728)
('cbbbac', 1.6700000000000728)
('cacabb', 1.6900000000000546)
('bcbaab', 1.7100000000000364)
('ccabbc', 1.7100000000000364)
('bbbabc', 1.699999999999818)
('cabbac', 1.7100000000000364)
('bcccca', 1.7300000000000182)
('cabcaa', 1.7100000000000364)
('ccaaac', 1.7400000000002365)
('aabccc', 1.75)
('abcaac', 1.75)
('bcacbb', 1.7400000000002365)
('bbaaaa', 1.75)
('acbabb', 1.7700000000004366)
('caaabc', 1.7800000000002)
('caaaac', 1.7800000000002)
('bbaabc', 1.7899999999999636)
('cacaaa', 1.7999999999997272)
('bcbacc', 1.7699999999999818)
('bbbaaa', 1.800000000000182)
('acccbc', 1.800000000000182)

Time taken to extract lstar-dfa: 401.74929213523865
number of states of the dfa: 345
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cabc': {'a': 'cabca', 'b': 'ccaab', 'c': 'ccaab'}, 'aacb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'caacc'}, 'aabbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abcaa', 'b': 'ccaab', 'c': 'ccaab'}, 'caabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'accc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccabc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cbacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'ccaab', 'b': 'acaab', 'c': 'acaac'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'acaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'bcbaa', 'b': 'bcbab', 'c': 'bcbac'}, 'cbbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'abcaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbb'}, 'abab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'ccaab', 'b': 'bbbb', 'c': 'ccbcb'}, 'acca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'accac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcb': {'a': 'bcba', 'b': 'ccbbb', 'c': 'ccbbb'}, 'cacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccacc'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bbcb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'bbbb'}, 'aabba': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'abbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'acbb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'acbbc'}, 'abcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaa': {'a': 'ccaab', 'b': 'aaaab', 'c': 'aaaac'}, 'cacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cbaac'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbbb'}, 'bbba': {'a': 'bbbaa', 'b': 'bbbab', 'c': 'ccaab'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'bccac'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'bbabc'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'ccaab', 'b': 'abccb', 'c': 'abccc'}, 'abccbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcac': {'a': 'ccaab', 'b': 'bcacb', 'c': 'ccaab'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bbbb', 'c': 'bbbb'}, 'ccba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bcbaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'ccab': {'a': 'ccaab', 'b': 'ccabb', 'c': 'ccabc'}, 'caaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'acaac': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'cabcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaa': {'a': 'caaaa', 'b': 'caaab', 'c': 'ccaab'}, 'acbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbca': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ccaab', 'c': 'ccaab'}, 'ccca': {'a': 'cccaa', 'b': 'ccaab', 'c': 'ccaab'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'bbabc': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'ccbbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'cbabc'}, 'cccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ccaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'aaaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ccaaa', 'b': 'ccaab', 'c': 'ccaab'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabb': {'a': 'cabba', 'b': 'ccaab', 'c': 'ccaab'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'cbaca', 'b': 'ccaab', 'c': 'ccaab'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'aabba', 'b': 'ccaab', 'c': 'ccaab'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'cacaa': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'ccaab', 'b': 'aabab', 'c': 'ccaab'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaa': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'ccaab', 'b': 'acbab', 'c': 'ccaab'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'bcbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acab': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'abbaa', 'b': 'ccaab', 'c': 'ccaab'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'acacc'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'bbaaa', 'b': 'bbaab', 'c': 'ccaab'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'cccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbb': {'a': 'cbba', 'b': 'cbbb', 'c': 'bbbb'}, 'cacabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'bbbb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'cbabc': {'a': 'ba', 'b': 'ccaab', 'c': 'ccaab'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cabba': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'acbab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'aabccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ccaab', 'b': 'ba', 'c': 'ba'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bbbb', 'c': 'bccc'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'ccaab', 'c': 'ba'}, 'abcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'ba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'bbbb', 'c': 'bbbb'}, 'cbabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ccaab'}, 'cbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'aabcc'}, 'bbabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'cacaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'ccbb', 'c': 'bbbb'}, 'aaac': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'acbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'caaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbc': {'a': 'ccaab', 'b': 'ccaab', 'c': 'ccaab'}, 'aaca': {'a': 'aacaa', 'b': 'ccaab', 'c': 'ccaab'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'cacaa', 'b': 'cacab', 'c': 'cacac'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'cbbba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'ccaab', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.524536          None            None              []          0         0         0          345                    None                                    None             401.749292        False     0.05   0.05
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1160285472869873  s
EQ test took  0.0006506443023681641  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12688803672790527  s
EQ test took  0.36227941513061523  s


epsilon= 0.05 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.6089887619018555
Interrupted due to time limit
overall guided extraction time took: 400.6300000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.15000000000009095)
('ac', 0.17000000000007276)
('aa', 0.20000000000027285)
('ba', 0.2199999999997999)
('ab', 0.24000000000023647)
('ca', 0.2699999999999818)
('caa', 0.2800000000002001)
('acc', 0.30999999999994543)
('aab', 0.330000000000382)
('aac', 0.34999999999990905)
('aba', 0.3700000000003456)
('bca', 0.40000000000009095)
('cca', 0.43000000000029104)
('cac', 0.45000000000027285)
('aca', 0.4800000000000182)
('cab', 0.5099999999997635)
('aaa', 0.5399999999999636)
('cba', 0.5599999999999454)
('abb', 0.580000000000382)
('acb', 0.6199999999998909)
('abc', 0.6300000000001091)
('bba', 0.6599999999998545)
('acab', 0.7099999999995816)
('bbba', 0.7100000000000364)
('cbaa', 0.7300000000000182)
('accc', 0.7699999999999818)
('caac', 0.7999999999997272)
('ccba', 0.7899999999999636)
('bcca', 0.819999999999709)
('cabb', 0.8699999999998909)
('aaba', 0.8799999999996544)
('abcc', 0.9399999999995998)
('caaa', 0.9500000000002728)
('acbb', 0.9800000000000182)
('caca', 0.9899999999997817)
('cbba', 0.9900000000002365)
('abbc', 1.0599999999999454)
('cbac', 1.099999999999909)
('acac', 1.1300000000001091)
('abbb', 1.1599999999998545)
('ccab', 1.1700000000000728)
('acbc', 1.2100000000000364)
('bcab', 1.2300000000000182)
('abba', 1.25)
('aacc', 1.2899999999999636)
('aaab', 1.3100000000004002)
('ccac', 1.349999999999909)
('caab', 1.3600000000001273)
('abcb', 1.3899999999998727)
('acca', 1.4200000000000728)
('accb', 1.449999999999818)
('aabb', 1.4900000000002365)
('bbac', 1.5)
('aabc', 1.5299999999997453)
('aaac', 1.5599999999999454)
('abaa', 1.569999999999709)
('cacb', 1.5900000000001455)
('abac', 1.5799999999999272)
('cbab', 1.5900000000001455)
('abab', 1.6199999999998909)
('aaaa', 1.650000000000091)
('cacc', 1.6900000000000546)
('bcaa', 1.7000000000002728)
('cabc', 1.75)
('ccaa', 1.7799999999997453)
('ccca', 1.7699999999999818)
('bbab', 1.8299999999999272)
('bcac', 1.8500000000003638)
('aaca', 1.8799999999996544)
('caba', 1.9200000000000728)
('aacb', 1.9500000000002728)
('abca', 1.9699999999998)
('bcba', 2.0)
('cbca', 2.019999999999982)
('acaa', 2.049999999999727)
('acba', 2.0799999999999272)
('bbca', 2.119999999999891)
('bbaa', 2.1600000000003092)
('abcaa', 2.1700000000000728)
('bccaa', 2.200000000000273)
('aaccc', 2.2199999999998)
('cacac', 2.2399999999997817)
('abaca', 2.2799999999997453)
('bbbba', 2.2899999999999636)
('acacb', 2.3200000000001637)
('bcaca', 2.3399999999996908)
('caaac', 2.380000000000109)
('cbaac', 2.4099999999998545)
('acabb', 2.4299999999998363)
('bccba', 2.4600000000000364)
('cacbc', 2.4899999999997817)
('bbacb', 2.5100000000002183)
('abacc', 2.549999999999727)
('caacc', 2.5799999999999272)
('cbaab', 2.599999999999909)
('acbba', 2.650000000000091)
('bbcba', 2.6600000000003092)
('ccbab', 2.699999999999818)
('acaba', 2.730000000000018)
('aaccb', 2.7600000000002183)
('caaca', 2.7799999999997453)
('cbcab', 2.7899999999999636)
('bbcaa', 2.8200000000001637)
('cabca', 2.8899999999998727)
('caaab', 2.899999999999636)
('bcaaa', 2.9099999999998545)
('aabbb', 2.950000000000273)
('bbcab', 2.980000000000018)
('cbabc', 3.0100000000002183)
('ccbaa', 3.0100000000002183)
('bbcac', 3.0599999999999454)
('cbaca', 3.0799999999999272)
('bbaca', 3.119999999999891)
('acaca', 3.130000000000109)
('abcbb', 3.1900000000000546)
('bbaac', 3.180000000000291)
('cbabb', 3.2400000000002365)
('abaab', 3.25)
('bbacc', 3.2800000000002)
('cabba', 3.3299999999999272)
('cabbc', 3.349999999999909)
('acbaa', 3.3899999999998727)
('aabac', 3.4099999999998545)
('bbabb', 3.4400000000000546)
('bbbaa', 3.480000000000018)
('aacbc', 3.5)
('bcbac', 3.519999999999982)
('accba', 3.5599999999999454)
('bbaaa', 3.5900000000001455)
('aacbb', 3.599999999999909)
('ccacc', 3.619999999999891)
('cbcaa', 3.6399999999998727)
('bcaac', 3.6700000000000728)
('cbcac', 3.700000000000273)
('acbca', 3.7400000000002365)
('bbaab', 3.769999999999982)
('cccaa', 3.7799999999997453)
('cabab', 3.849999999999909)
('bbbab', 3.850000000000364)
('aaacc', 3.8700000000003456)
('abbbc', 3.900000000000091)
('ccaba', 3.9600000000000364)
('cbaba', 3.980000000000018)
('ccaac', 4.0099999999997635)
('cbbca', 4.019999999999982)
('abbbb', 4.070000000000164)
('aabba', 4.079999999999927)
('cabac', 4.109999999999673)
('bbcca', 4.130000000000109)
('caabb', 4.170000000000073)
('acacc', 4.180000000000291)
('acaab', 4.209999999999582)
('cbcba', 4.2400000000002365)
('abbaa', 4.279999999999745)
('aaaba', 4.3100000000004)
('accab', 4.3400000000001455)
('ccacb', 4.430000000000291)
('abaac', 4.570000000000164)
('ccabc', 4.609999999999673)
('accbc', 4.609999999999673)
('abbca', 4.650000000000091)
('cbbaa', 4.679999999999836)
('cacca', 4.720000000000255)
('bbaba', 4.730000000000018)
('abbab', 4.769999999999982)

Time taken to extract lstar-dfa: 400.59734654426575
number of states of the dfa: 186
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'acbc': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'ba', 'b': 'abaca', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'bcb': {'a': 'bcba', 'b': 'ccbb', 'c': 'ccbb'}, 'cacc': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'ccac': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbb': {'a': 'cbba', 'b': 'ccbb', 'c': 'bbcb'}, 'cabc': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'caba': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcb': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacb': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'cabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'ba', 'b': 'abaca', 'c': 'ba'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bbcb', 'c': 'ccbb'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'acbb': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbb': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'aaa': {'a': 'abaca', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accb': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'bbac': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'abaca'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'ccbb', 'c': 'ccbb'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abaca'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'aaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'abaca', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abaca', 'c': 'abac'}, 'aabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'bcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'cbbc': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'abaca', 'b': 'aacb', 'c': 'aacc'}, 'cabb': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'bbca': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbcb'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'ccbb', 'c': 'ccbb'}, 'bbba': {'a': 'abaca', 'b': 'abaca', 'c': 'ba'}, 'aaac': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'acbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcb': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'bcca': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'abaca', 'b': 'abaca', 'c': 'ba'}, 'abbb': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'abaca', 'b': 'abaca', 'c': 'ba'}, 'acaa': {'a': 'ba', 'b': 'abaca', 'c': 'ba'}, 'bcac': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'ba', 'b': 'abaca', 'c': 'abaca'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bbcb', 'c': 'ccbb'}, 'ccba': {'a': 'abaca', 'b': 'abaca', 'c': 'ba'}, 'bcba': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'abbc': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'bcaa': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'aaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'abaca'}, 'abac': {'a': 'abaca', 'b': 'ba', 'c': 'abaca'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'caca': {'a': 'ba', 'b': 'ba', 'c': 'abaca'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acab': {'a': 'abaca', 'b': 'abaca', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbcb', 'c': 'ccbb'}, 'abab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'abaca', 'b': 'ccbb', 'c': 'ccbb'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'ba', 'b': 'ccbb', 'c': 'ccbb'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'abaca', 'b': 'ba', 'c': 'ba'}, 'acca': {'a': 'ba', 'b': 'abaca', 'c': 'ba'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'abaca', 'b': 'abaca', 'c': 'abaca'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         0.608989          None            None              []          0         0         0          186                    None                                    None             400.597347        False     0.05   0.01
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11868691444396973  s
EQ test took  0.0006322860717773438  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12604928016662598  s
EQ test took  1.1092419624328613  s


epsilon= 0.01 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 1.3584637641906738
Interrupted due to time limit
overall guided extraction time took: 400.8300000000004
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('ba', 0.010000000000218279)
('ca', 0.01999999999998181)
('ac', 0.009999999999763531)
('aa', 0.01999999999998181)
('ab', 0.01999999999998181)
('aca', 0.01999999999998181)
('caa', 0.01999999999998181)
('aac', 0.01999999999998181)
('aaa', 0.03000000000020009)
('abb', 0.02999999999974534)
('bca', 0.04000000000041837)
('cab', 0.03000000000020009)
('cac', 0.03999999999996362)
('abc', 0.03999999999996362)
('aab', 0.03999999999996362)
('aba', 0.05999999999994543)
('cca', 0.0500000000001819)
('acc', 0.04999999999972715)
('acb', 0.06000000000040018)
('bba', 0.05999999999994543)
('cba', 0.05999999999994543)
('cbca', 0.05999999999994543)
('ccac', 0.07000000000016371)
('bcca', 0.07000000000016371)
('aaca', 0.07000000000016371)
('cacc', 0.07999999999992724)
('abbc', 0.07999999999992724)
('ccca', 0.07000000000016371)
('cacb', 0.07999999999992724)
('acbb', 0.08000000000038199)
('caba', 0.07999999999992724)
('abab', 0.08999999999969077)
('bcba', 0.09000000000014552)
('aaab', 0.09000000000014552)
('abcc', 0.09000000000014552)
('ccaa', 0.09000000000014552)
('cbac', 0.09999999999990905)
('bcaa', 0.09999999999990905)
('acac', 0.11000000000012733)
('cabb', 0.12000000000034561)
('acba', 0.11999999999989086)
('caca', 0.11999999999989086)
('cabc', 0.1299999999996544)
('acab', 0.13000000000010914)
('bbba', 0.13000000000010914)
('bbab', 0.13000000000010914)
('bcab', 0.13999999999987267)
('acaa', 0.14000000000032742)
('acbc', 0.1499999999996362)
('aabb', 0.15000000000009095)
('caab', 0.15000000000009095)
('bbaa', 0.14000000000032742)
('aacb', 0.15000000000009095)
('bbca', 0.14000000000032742)
('ccba', 0.15000000000009095)
('cbba', 0.16000000000030923)
('aaaa', 0.15999999999985448)
('caac', 0.15999999999985448)
('accc', 0.15999999999985448)
('cbab', 0.17000000000007276)
('caaa', 0.17000000000007276)
('aaac', 0.18000000000029104)
('bbac', 0.19000000000005457)
('abca', 0.1799999999998363)
('abbb', 0.1999999999998181)
('aaba', 0.1799999999998363)
('abba', 0.1999999999998181)
('ccab', 0.19000000000005457)
('acca', 0.19000000000005457)
('bcac', 0.2199999999997999)
('abaa', 0.1999999999998181)
('aabc', 0.21000000000003638)
('cbaa', 0.2199999999997999)
('aacc', 0.2300000000000182)
('accb', 0.2300000000000182)
('abac', 0.2300000000000182)
('abcb', 0.2300000000000182)
('bcbac', 0.24000000000023647)
('bcaaa', 0.23999999999978172)
('caabb', 0.25)
('acaac', 0.2300000000000182)
('acaba', 0.25)
('abbbb', 0.23999999999978172)
('bccab', 0.25)
('ccaca', 0.24000000000023647)
('aabba', 0.23999999999978172)
('cbcab', 0.2300000000000182)
('acbca', 0.2600000000002183)
('abaca', 0.2699999999999818)
('aabab', 0.25999999999976353)
('accca', 0.25999999999976353)
('cabcc', 0.27000000000043656)
('bcacc', 0.25999999999976353)
('aacab', 0.2800000000002001)
('aabac', 0.27999999999974534)
('acaca', 0.3000000000001819)
('bbaab', 0.2899999999999636)
('cacaa', 0.2899999999999636)
('cbbab', 0.2899999999999636)
('accba', 0.2899999999999636)
('bcabc', 0.3000000000001819)
('bbbaa', 0.2899999999999636)
('acacc', 0.30999999999994543)
('caacb', 0.29999999999972715)
('cabcb', 0.3200000000001637)
('ccaac', 0.30999999999994543)
('acaaa', 0.31999999999970896)
('ababb', 0.30999999999994543)
('cacbb', 0.32999999999992724)
('ababc', 0.32999999999992724)
('cabbb', 0.32999999999992724)
('bbcaa', 0.33999999999969077)
('aabaa', 0.330000000000382)
('acccb', 0.3400000000001455)
('abcbb', 0.33999999999969077)
('abbcb', 0.32999999999992724)
('aacbc', 0.32999999999992724)
('bbbba', 0.34999999999990905)
('bbcca', 0.32999999999992724)
('cabbc', 0.34999999999990905)
('caaca', 0.36000000000012733)
('bcaba', 0.3599999999996726)
('abaaa', 0.36000000000012733)
('cbacc', 0.36999999999989086)
('bccba', 0.38000000000010914)
('caccb', 0.38000000000010914)
('bbaca', 0.36999999999989086)
('abcca', 0.36999999999989086)
('abbcc', 0.38000000000010914)
('cccab', 0.3900000000003274)
('ccaaa', 0.3900000000003274)
('accac', 0.38000000000010914)
('ccabc', 0.3900000000003274)
('aabca', 0.38999999999987267)
('bbbac', 0.40000000000009095)
('abccb', 0.4099999999998545)
('cbbca', 0.4099999999998545)
('cbcac', 0.42000000000007276)
('abbab', 0.41000000000030923)
('bccaa', 0.42000000000007276)
('bccac', 0.42000000000007276)
('acbcc', 0.42000000000007276)
('caaab', 0.419999999999618)
('abccc', 0.4299999999998363)
('bbcab', 0.4299999999998363)
('acabb', 0.43000000000029104)
('bbacb', 0.44000000000005457)
('cbacb', 0.4499999999998181)
('aaaac', 0.4600000000000364)
('cbaca', 0.45000000000027285)
('cccca', 0.4600000000000364)
('abacc', 0.45000000000027285)
('cabac', 0.42000000000007276)
('ccbca', 0.4600000000000364)
('aabbb', 0.4800000000000182)
('abcba', 0.4699999999997999)
('cbaba', 0.4699999999997999)
('caaba', 0.4800000000000182)
('bbaba', 0.4699999999997999)
('abbca', 0.4800000000000182)
('caacc', 0.49000000000023647)
('acbac', 0.4699999999997999)
('abacb', 0.4600000000000364)
('bcaab', 0.4600000000000364)
('accbc', 0.5100000000002183)
('ababa', 0.5)
('cbbac', 0.5)
('bcaca', 0.5099999999997635)
('aaccc', 0.5099999999997635)
('aaacc', 0.5)
('cbcba', 0.5)
('aabcc', 0.5199999999999818)
('acacb', 0.5199999999999818)
('bbabb', 0.5399999999999636)
('abbac', 0.5299999999997453)
('accbb', 0.5300000000002001)
('cabab', 0.5299999999997453)
('aaccb', 0.5399999999999636)
('abcaa', 0.5499999999997272)
('cacab', 0.5399999999999636)
('aaaaa', 0.5399999999999636)
('cacca', 0.5399999999999636)
('abcbc', 0.5600000000004002)
('cbbba', 0.569999999999709)
('bcacb', 0.5599999999999454)
('bcaac', 0.5700000000001637)
('ccbba', 0.569999999999709)
('aacac', 0.5799999999999272)
('aacbb', 0.5799999999999272)
('acbba', 0.5799999999999272)
('aacca', 0.5899999999996908)
('abbaa', 0.5900000000001455)
('ccbab', 0.599999999999909)
('acccc', 0.5900000000001455)
('bcbba', 0.5899999999996908)
('cbabc', 0.6200000000003456)
('caaaa', 0.6199999999998909)
('cacac', 0.6199999999998909)
('aaaba', 0.6199999999998909)
('aacaa', 0.6099999999996726)
('bcbaa', 0.6100000000001273)
('cbbaa', 0.6199999999998909)
('acbcb', 0.6300000000001091)
('cacbc', 0.6300000000001091)
('acaab', 0.6299999999996544)
('bcbab', 0.6300000000001091)
('cbaab', 0.6399999999998727)
('acbab', 0.6399999999998727)
('aaaab', 0.6399999999998727)
('aaaca', 0.6400000000003274)
('cccaa', 0.650000000000091)
('abaac', 0.6599999999998545)
('cbcaa', 0.6599999999998545)
('ccabb', 0.6599999999998545)
('aaacb', 0.650000000000091)
('bbbab', 0.6799999999998363)
('caabc', 0.6700000000000728)
('ccbac', 0.6700000000000728)
('bbbca', 0.669999999999618)
('ccbaa', 0.680000000000291)
('aaabb', 0.6799999999998363)
('ccaba', 0.7000000000002728)
('cabca', 0.6900000000000546)
('cccac', 0.7000000000002728)
('bcbca', 0.6999999999998181)
('bbaaa', 0.7200000000002547)
('accab', 0.7100000000000364)
('bbcac', 0.7300000000000182)
('bbabc', 0.7199999999997999)
('acbaa', 0.7300000000000182)
('acbbb', 0.7300000000000182)
('aaabc', 0.7300000000000182)
('acabc', 0.6999999999998181)
('abcab', 0.75)
('bcabb', 0.75)
('cabba', 0.7600000000002183)
('aabbc', 0.7599999999997635)
('abaab', 0.7700000000004366)
('ccacb', 0.7600000000002183)
('ccacc', 0.75)
('abcac', 0.7699999999999818)
('accaa', 0.7799999999997453)
('acbbc', 0.7899999999999636)
('abbba', 0.7899999999999636)
('cbaaa', 0.7899999999999636)
('cbaac', 0.7800000000002001)
('caaac', 0.8000000000001819)
('abbbc', 0.8000000000001819)
('cacba', 0.7999999999997272)
('caccc', 0.8000000000001819)
('bbacc', 0.7999999999997272)
('cbabb', 0.8000000000001819)
('aabcb', 0.8299999999999272)
('ccaab', 0.819999999999709)
('bbaac', 0.8200000000001637)
('cabaa', 0.8200000000001637)
('aacba', 0.8299999999999272)
('bccaca', 0.8400000000001455)
('cbcca', 0.819999999999709)
('cccba', 0.8299999999999272)
('bccca', 0.830000000000382)
('bbcba', 0.8400000000001455)
('acaaaa', 0.8400000000001455)
('accbbb', 0.8400000000001455)
('aabcbc', 0.8399999999996908)
('bcbcaa', 0.849999999999909)
('bcabca', 0.849999999999909)
('abaacb', 0.849999999999909)
('aacabc', 0.8599999999996726)
('abcbba', 0.8600000000001273)
('bcbacb', 0.8600000000001273)
('bcbcba', 0.8600000000001273)
('aaaaaa', 0.8699999999998909)
('cbaccc', 0.8699999999998909)
('abaccc', 0.8699999999998909)
('ababbc', 0.8800000000001091)
('cccbca', 0.900000000000091)
('ababcb', 0.8800000000001091)
('caccbc', 0.8899999999998727)
('ccbcba', 0.8899999999998727)
('cabcca', 0.9099999999998545)
('acabba', 0.8899999999998727)
('abbcba', 0.900000000000091)
('bccacb', 0.9100000000003092)
('cbbaab', 0.8899999999998727)
('aaabbc', 0.900000000000091)
('caaaca', 0.9200000000000728)
('acbbcc', 0.9200000000000728)
('bbcabc', 0.9200000000000728)
('caaaba', 0.919999999999618)
('cccaaa', 0.9200000000000728)
('bbbcba', 0.9400000000000546)
('ababbb', 0.9399999999995998)
('bbccab', 0.9200000000000728)
('accbab', 0.9499999999998181)
('aaabcb', 0.9400000000000546)
('caabca', 0.9299999999998363)
('aaacaa', 0.9399999999995998)
('aacbcc', 0.9500000000002728)
('cbbaca', 0.9500000000002728)
('aabcbb', 0.9600000000000364)
('caccab', 0.9599999999995816)
('aabaaa', 0.9500000000002728)
('cacacb', 0.9700000000002547)
('acbcbb', 0.9600000000000364)
('caaacb', 0.9800000000000182)
('abaaac', 0.9800000000000182)
('bbabcb', 0.9800000000000182)
('cabbac', 0.9800000000000182)
('bcabab', 0.9900000000002365)
('bbaaab', 0.9900000000002365)
('bcacab', 1.0)
('bbaccc', 1.0)
('ccabbb', 1.0099999999997635)
('cabaaa', 1.0100000000002183)
('aabbbc', 1.0100000000002183)
('aabbca', 1.0199999999999818)
('cbacbc', 1.0199999999999818)
('ccbaba', 1.0199999999999818)
('acabbc', 1.0299999999997453)
('cbcbca', 1.0300000000002)
('abcbac', 1.0199999999999818)
('ccaaba', 1.0399999999999636)
('abcaaa', 1.0199999999999818)
('cabccb', 1.0399999999999636)
('cbabba', 1.0399999999999636)
('bbbcab', 1.0400000000004184)
('abbcac', 1.0)
('acaacb', 1.050000000000182)
('cabbca', 1.0299999999997453)
('acbccc', 1.0599999999999454)
('cbbacc', 1.0)
('bbbcaa', 1.0)
('ababaa', 1.0100000000002183)
('abbacc', 1.0)
('bbaccb', 1.080000000000382)
('aaabaa', 1.0900000000001455)
('cacbba', 1.0900000000001455)
('bbabac', 1.0700000000001637)
('cbccab', 1.0900000000001455)
('aacbbb', 1.099999999999909)
('caacbb', 1.099999999999909)
('aabbac', 1.080000000000382)
('aaacac', 1.0300000000002)
('abcaab', 1.0799999999999272)
('abcbca', 1.1100000000001273)
('aaccbb', 1.1100000000001273)
('ababcc', 1.1100000000001273)
('cacabb', 1.1300000000001091)
('abccac', 1.1199999999998909)
('bbacab', 1.0600000000004002)
('abaaaa', 1.0599999999999454)
('caacba', 1.050000000000182)
('cbccca', 1.0799999999999272)
('bbaaac', 1.0700000000001637)
('abcacc', 1.0799999999999272)
('bbbcca', 1.0799999999999272)
('bcbabb', 1.0900000000001455)

Time taken to extract lstar-dfa: 400.7904460430145
number of states of the dfa: 397
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ccaab': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'bbbcb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aabaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'cabcc'}, 'aacb': {'a': 'aabaaa', 'b': 'aacbb', 'c': 'aacbc'}, 'cabccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'aabaaa', 'b': 'caacb', 'c': 'aabaaa'}, 'acaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abcaa', 'b': 'aabaaa', 'c': 'abcac'}, 'caabc': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cacacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'caabc'}, 'accc': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cabcc': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'aaaaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'bbbb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'abbcb': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'bbac': {'a': 'bbaca', 'b': 'aabaaa', 'c': 'bbacc'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'ababbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccac': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'abaaa', 'b': 'aabaaa', 'c': 'abaac'}, 'cbabb': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cbccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'cbbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'bbcca', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bcab': {'a': 'bcaba', 'b': 'aabaaa', 'c': 'bcabc'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'ccbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbca': {'a': 'aabaaa', 'b': 'bbcab', 'c': 'aabaaa'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'aaabb': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbcb'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabb': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'acaa': {'a': 'acaaa', 'b': 'aabaaa', 'c': 'acaac'}, 'cccaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cabaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'bcbac'}, 'ababcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbcb'}, 'aaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abac': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'abacc'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbcb', 'c': 'bbbc'}, 'abab': {'a': 'ababa', 'b': 'ababb', 'c': 'ababc'}, 'cabcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'ccaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acca': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'abcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'acbc': {'a': 'aabaaa', 'b': 'acbcb', 'c': 'acbcc'}, 'cccbc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'abcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcb': {'a': 'bcba', 'b': 'bbbcb', 'c': 'bcbc'}, 'cacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'caccb', 'c': 'aabaaa'}, 'ccac': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bbaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'abbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'aaaba', 'b': 'aaabb', 'c': 'aaabc'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbb': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'acbbc'}, 'abcac': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabc': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cbccc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'bcbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'aaabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'aabaaa', 'b': 'ba', 'c': 'aabaaa'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'aaaa': {'a': 'aaaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'abbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbb': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cacbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'aabaaa'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bbc': {'a': 'bbca', 'b': 'bbbcb', 'c': 'bbcc'}, 'bbba': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cabbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'bccac'}, 'bbacc': {'a': 'ba', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bbab': {'a': 'bbaba', 'b': 'aabaaa', 'c': 'bbabc'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbc': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'abcca', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bcac': {'a': 'bcaca', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bcbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'cbcb', 'c': 'cbcc'}, 'ccba': {'a': 'aabaaa', 'b': 'ccbab', 'c': 'aabaaa'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bcbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'aabaaa', 'b': 'ccabb', 'c': 'aabaaa'}, 'acbccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbc': {'a': 'bbbca', 'b': 'bbbcb', 'c': 'bbbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbca': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'ba', 'b': 'aabaaa', 'c': 'aabaaa'}, 'caaa': {'a': 'aabaaa', 'b': 'caaab', 'c': 'caaac'}, 'acbcc': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cbabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'cbbaa', 'b': 'aabaaa', 'c': 'cbbac'}, 'aaabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'bbabc': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'aabaaa', 'b': 'cbabb', 'c': 'aabaaa'}, 'cccc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aaabc': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'abaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'caccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbab': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'aabcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'bbabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'aabaaa', 'b': 'ccaab', 'c': 'aabaaa'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cabb': {'a': 'cabba', 'b': 'aabaaa', 'c': 'cabbc'}, 'bccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'aabaaa', 'b': 'ba', 'c': 'aabaaa'}, 'cbac': {'a': 'aabaaa', 'b': 'cbacb', 'c': 'cbacc'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'aaabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'aabba', 'b': 'aabbb', 'c': 'aabbc'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aabaaa', 'b': 'aaccb', 'c': 'aabaaa'}, 'bbbbb': {'a': 'ba', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcbc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aaba': {'a': 'aabaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'abbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'bcacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbc': {'a': 'bcbca', 'b': 'bbbcb', 'c': 'bbbbb'}, 'acab': {'a': 'aabaaa', 'b': 'acabb', 'c': 'aabaaa'}, 'bbabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'aabaaa', 'c': 'aabaaa'}, 'acabb': {'a': 'aabaaa', 'b': 'ba', 'c': 'aabaaa'}, 'cbccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'abbac'}, 'caccb': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'aabaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbcb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bbaa': {'a': 'bbaaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cacac': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'ababaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'abcba', 'b': 'abcbb', 'c': 'abcbc'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'ccbc': {'a': 'aabaaa', 'b': 'bbbcb', 'c': 'bbbbb'}, 'aabaa': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'cbb': {'a': 'cbba', 'b': 'bbbcb', 'c': 'bbbcb'}, 'cacabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'cabaa', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabba': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'acbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bbbcb', 'c': 'bbbcb'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'abcba': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'aaaba': {'a': 'aabaaa', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'accb': {'a': 'accba', 'b': 'accbb', 'c': 'aabaaa'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'cccb', 'c': 'bbbcb'}, 'ababcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbcb': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'cbcc': {'a': 'cbcca', 'b': 'bbbbb', 'c': 'bbbcb'}, 'aabc': {'a': 'aabaaa', 'b': 'aabcb', 'c': 'aabaaa'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'bcaba': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'bbbcb', 'c': 'ccbc'}, 'cbcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'aabaaa', 'c': 'aabaaa'}, 'cccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'cacb': {'a': 'aabaaa', 'b': 'cacbb', 'c': 'aabaaa'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'aacabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'cccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbc': {'a': 'abbca', 'b': 'abbcb', 'c': 'aabaaa'}, 'bbbcc': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'aaca': {'a': 'aabaaa', 'b': 'aacab', 'c': 'aabaaa'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'caca': {'a': 'aabaaa', 'b': 'cacab', 'c': 'cacac'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'aabaaa'}, 'abaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'aabbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccb': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'aabaaa', 'c': 'aabaaa'}, 'acabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'bccb': {'a': 'aabaaa', 'b': 'bbbbb', 'c': 'bbbbb'}, 'bbcca': {'a': 'ba', 'b': 'aabaaa', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'abcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         1.358464          None            None              []          0         0         0          397                    None                                    None             400.790446        False     0.01    0.1
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10888862609863281  s
EQ test took  0.0006086826324462891  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12565255165100098  s
EQ test took  1.3024888038635254  s


epsilon= 0.01 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 1.5412726402282715
Interrupted due to time limit
overall guided extraction time took: 400.17999999999984
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.01999999999998181)
('aa', 0.01999999999998181)
('ac', 0.03999999999996362)
('ca', 0.03000000000020009)
('ba', 0.03999999999996362)
('ab', 0.03999999999996362)
('acc', 0.0500000000001819)
('aca', 0.05999999999994543)
('abb', 0.05999999999994543)
('cba', 0.05999999999994543)
('caa', 0.07000000000016371)
('cab', 0.06999999999970896)
('aac', 0.07999999999992724)
('acb', 0.07999999999992724)
('aba', 0.09000000000014552)
('cac', 0.09000000000014552)
('bba', 0.09999999999990905)
('cca', 0.09999999999990905)
('aaa', 0.11000000000012733)
('abc', 0.11999999999989086)
('aab', 0.12000000000034561)
('bca', 0.11999999999989086)
('bbab', 0.1299999999996544)
('cbba', 0.13999999999987267)
('caab', 0.13999999999987267)
('cabc', 0.15000000000009095)
('aabc', 0.15000000000009095)
('cbca', 0.15000000000009095)
('acbc', 0.15999999999985448)
('bbba', 0.17000000000007276)
('abbb', 0.1799999999998363)
('caac', 0.18000000000029104)
('cbaa', 0.19000000000005457)
('aacb', 0.18000000000029104)
('acbb', 0.1999999999998181)
('aaac', 0.19000000000005457)
('aaca', 0.21000000000003638)
('acac', 0.20000000000027285)
('abab', 0.21000000000003638)
('abaa', 0.22000000000025466)
('caba', 0.2199999999997999)
('cabb', 0.22999999999956344)
('aacc', 0.23999999999978172)
('acab', 0.22999999999956344)
('acca', 0.23999999999978172)
('aaaa', 0.25999999999976353)
('bcca', 0.25999999999976353)
('abcb', 0.25999999999976353)
('cbac', 0.2699999999999818)
('cacb', 0.2699999999999818)
('bcac', 0.2899999999999636)
('bcab', 0.2899999999999636)
('aabb', 0.2899999999999636)
('accc', 0.29000000000041837)
('ccaa', 0.2899999999999636)
('abba', 0.29999999999972715)
('cbab', 0.30999999999994543)
('cacc', 0.30999999999994543)
('ccca', 0.3200000000001637)
('bbaa', 0.31999999999970896)
('ccba', 0.330000000000382)
('acaa', 0.32999999999992724)
('aaba', 0.3400000000001455)
('caca', 0.34999999999990905)
('abac', 0.3500000000003638)
('acba', 0.3599999999996726)
('ccab', 0.36999999999989086)
('ccac', 0.36999999999989086)
('caaa', 0.3799999999996544)
('abcc', 0.38000000000010914)
('bbac', 0.3900000000003274)
('abbc', 0.3900000000003274)
('abca', 0.41000000000030923)
('accb', 0.4099999999998545)
('bcba', 0.42000000000007276)
('bcaa', 0.419999999999618)
('aaab', 0.419999999999618)
('bbca', 0.4299999999998363)
('ccaba', 0.4299999999998363)
('bcbab', 0.45000000000027285)
('aaccc', 0.4600000000000364)
('ccbba', 0.4499999999998181)
('bcaab', 0.4600000000000364)
('ccaaa', 0.4600000000000364)
('aaccb', 0.4699999999997999)
('aabba', 0.4800000000000182)
('cbaca', 0.4800000000000182)
('bcbaa', 0.49000000000023647)
('bccba', 0.5)
('bbabb', 0.5)
('accab', 0.5100000000002183)
('cabca', 0.5)
('cbacc', 0.5199999999999818)
('ccacb', 0.5499999999997272)
('abaaa', 0.5599999999999454)
('abbab', 0.5599999999999454)
('bbbaa', 0.5700000000001637)
('ababb', 0.5799999999999272)
('acbcb', 0.5799999999999272)
('cacbb', 0.599999999999909)
('caccb', 0.5500000000001819)
('bbcaa', 0.5599999999999454)
('bbaca', 0.569999999999709)
('bcacb', 0.5799999999999272)
('ccabc', 0.5900000000001455)
('cabcc', 0.599999999999909)
('cbabb', 0.599999999999909)
('aabbb', 0.6099999999996726)
('bccac', 0.6099999999996726)
('abccc', 0.6100000000001273)
('cbaba', 0.6300000000001091)
('cacac', 0.6199999999998909)
('ccbaa', 0.6399999999998727)
('bbaaa', 0.6399999999998727)
('cbaab', 0.6400000000003274)
('abcbc', 0.650000000000091)
('aaaab', 0.6599999999998545)
('acacc', 0.6600000000003092)
('bcaba', 0.6600000000003092)
('acaca', 0.669999999999618)
('aaaaa', 0.6799999999998363)
('aabac', 0.6900000000000546)
('abccb', 0.6900000000000546)
('acaaa', 0.6900000000000546)
('bccaa', 0.6900000000000546)
('acccc', 0.7100000000000364)
('cbcab', 0.7199999999997999)
('abcca', 0.7300000000000182)
('bbaac', 0.7300000000000182)
('abbca', 0.7300000000000182)
('caaaa', 0.75)
('cbcaa', 0.75)
('acbaa', 0.75)
('cbcca', 0.7599999999997635)
('bccab', 0.7399999999997817)
('abacb', 0.7599999999997635)
('acbcc', 0.7400000000002365)
('aabcb', 0.75)
('acbab', 0.75)
('acccb', 0.7600000000002183)
('acbba', 0.7699999999999818)
('ccacc', 0.7899999999999636)
('bcaaa', 0.7799999999997453)
('cabab', 0.7800000000002001)
('cbabc', 0.8000000000001819)
('cacbc', 0.7899999999999636)
('cccca', 0.7899999999999636)
('cccac', 0.8000000000001819)
('abbcb', 0.8200000000001637)
('cbbab', 0.8299999999999272)
('caacb', 0.8299999999999272)
('bccca', 0.8299999999999272)
('abbba', 0.8400000000001455)
('abcba', 0.8399999999996908)
('acaba', 0.849999999999909)
('cacca', 0.8599999999996726)
('aaaac', 0.8599999999996726)
('aabab', 0.8599999999996726)
('ababc', 0.8699999999998909)
('bcbac', 0.8600000000001273)
('cacab', 0.8800000000001091)
('abbbc', 0.8800000000001091)
('ccbca', 0.8899999999998727)
('abaac', 0.8999999999996362)
('aaaca', 0.900000000000091)
('caaab', 0.9099999999998545)
('acaac', 0.9200000000000728)
('cbbaa', 0.9200000000000728)
('cbbca', 0.9299999999998363)
('ccbab', 0.9499999999998181)
('ccbac', 0.930000000000291)
('acacb', 0.9400000000000546)
('aacca', 0.9500000000002728)
('aabaa', 0.9600000000000364)
('bbcba', 0.9700000000002547)
('abcaa', 0.9600000000000364)
('caaba', 0.9700000000002547)
('aacba', 0.9800000000000182)
('bcaac', 0.9899999999997817)
('bbbac', 0.9900000000002365)
('cbbac', 1.0)
('accbb', 1.0099999999997635)
('ccaca', 1.0)
('cacba', 1.0199999999999818)
('ccaab', 1.0199999999999818)
('bcbba', 1.0199999999999818)
('bbcac', 1.0399999999999636)
('cbcba', 1.0399999999999636)
('aaaba', 1.0499999999997272)
('aaacc', 1.050000000000182)
('abaab', 1.050000000000182)
('bbcab', 1.0599999999999454)
('bbabc', 1.0700000000001637)
('bcabb', 1.0599999999999454)
('caacc', 1.069999999999709)
('caaca', 1.0799999999999272)
('accaa', 1.0799999999999272)
('abcbb', 1.099999999999909)
('cccab', 1.1100000000001273)
('bcbca', 1.1099999999996726)
('accac', 1.1099999999996726)
('accbc', 1.1199999999998909)
('acabc', 1.1300000000001091)
('aaabc', 1.1399999999998727)
('cccba', 1.1399999999998727)
('bbacc', 1.1700000000000728)
('cbaaa', 1.1599999999998545)
('acabb', 1.1599999999998545)
('bbbca', 1.1599999999998545)
('bbaab', 1.1799999999998363)
('cabcb', 1.180000000000291)
('ababa', 1.180000000000291)
('ccabb', 1.1799999999998363)
('abcac', 1.1900000000000546)
('aacbc', 1.2000000000002728)
('abaca', 1.2100000000000364)
('aaacb', 1.2100000000000364)
('aabca', 1.2200000000002547)
('acbac', 1.2300000000000182)
('bbaba', 1.2400000000002365)
('aabcc', 1.2400000000002365)
('abbcc', 1.25)
('aacaa', 1.2699999999999818)
('cccaa', 1.2699999999999818)
('caabc', 1.2699999999999818)
('cabbb', 1.2899999999999636)
('bcabc', 1.2700000000004366)
('abbbb', 1.2899999999999636)
('cbacb', 1.2899999999999636)
('abcab', 1.2999999999997272)
('cacaa', 1.2999999999997272)
('acbbc', 1.330000000000382)
('aacab', 1.3099999999999454)
('cabac', 1.3299999999999272)
('caabb', 1.3299999999999272)
('abacc', 1.349999999999909)
('cbcac', 1.3400000000001455)
('bcaca', 1.349999999999909)
('cabbc', 1.3600000000001273)
('acaab', 1.3599999999996726)
('abbac', 1.3699999999998909)
('cabba', 1.3699999999998909)
('aabbc', 1.3800000000001091)
('bbbba', 1.4100000000003092)
('accca', 1.4099999999998545)
('acbbb', 1.400000000000091)
('aacbb', 1.400000000000091)
('caccc', 1.4099999999998545)
('accba', 1.4299999999998363)
('bbacb', 1.4400000000000546)
('cbaac', 1.4400000000000546)
('aaabb', 1.449999999999818)
('ccaac', 1.449999999999818)
('bbbab', 1.4500000000002728)
('aacac', 1.4800000000000182)
('acbca', 1.4800000000000182)
('bbcca', 1.4700000000002547)
('caaac', 1.4800000000000182)
('cabaa', 1.4899999999997817)
('cbbba', 1.4900000000002365)
('abbaa', 1.5199999999999818)
('bcacc', 1.5499999999997272)
('aaabca', 1.550000000000182)
('bbcabb', 1.5199999999999818)
('cbbbba', 1.5399999999999636)
('acccba', 1.5400000000004184)
('aabbca', 1.5399999999999636)
('bbcacb', 1.5400000000004184)
('aababc', 1.5599999999999454)
('acbaac', 1.5599999999999454)
('caccbb', 1.569999999999709)
('bbcbac', 1.5700000000001637)
('ccbbac', 1.569999999999709)
('caccca', 1.5799999999999272)
('aaaaac', 1.6000000000003638)
('cacacb', 1.5799999999999272)
('bbcbca', 1.5900000000001455)
('acacab', 1.5900000000001455)
('cbabba', 1.599999999999909)
('aaacbb', 1.6000000000003638)
('cbcacb', 1.6199999999998909)
('cbbacb', 1.6300000000001091)
('cbbcaa', 1.6299999999996544)
('abbbbc', 1.6200000000003456)
('abccbc', 1.650000000000091)
('accbbb', 1.6599999999998545)
('aaacca', 1.6499999999996362)
('caabca', 1.6599999999998545)
('acccaa', 1.6799999999998363)
('abcaaa', 1.6700000000000728)
('aacaab', 1.6700000000000728)
('abbaba', 1.699999999999818)
('bcbcab', 1.7000000000002728)
('bcacbc', 1.6900000000000546)
('acbcbb', 1.7000000000002728)
('aaacbc', 1.7100000000000364)
('caabbb', 1.7300000000000182)
('bccbca', 1.7199999999998)
('acbbcb', 1.7199999999998)
('aaccac', 1.7300000000000182)
('cabbac', 1.7400000000002365)
('acbcaa', 1.75)
('abacbc', 1.75)
('abccac', 1.75)
('aaaccb', 1.7599999999997635)
('accbba', 1.7699999999999818)
('aacbab', 1.7699999999999818)
('abaaac', 1.7800000000002)
('acbaaa', 1.7999999999997272)
('aababb', 1.800000000000182)
('abccbb', 1.7899999999999636)

Time taken to extract lstar-dfa: 400.1340446472168
number of states of the dfa: 345
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'aaaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aacb': {'a': 'aacba', 'b': 'aaaccb', 'c': 'aaaccb'}, 'caac': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bcacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'abcaa', 'b': 'aaaccb', 'c': 'aaaccb'}, 'caabc': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'cacacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caab': {'a': 'aaaccb', 'b': 'caabb', 'c': 'caabc'}, 'accc': {'a': 'accca', 'b': 'acccb', 'c': 'aaaccb'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'bbbb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'aaaccb', 'c': 'aaaccb'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbac': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacb': {'a': 'ba', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'abaaa', 'b': 'aaaccb', 'c': 'aaaccb'}, 'cbabb': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbca': {'a': 'aaaccb', 'b': 'bbcab', 'c': 'bbcac'}, 'aabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'aaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'cbcb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'abac': {'a': 'aaaccb', 'b': 'abacb', 'c': 'aaaccb'}, 'aacba': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'bccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'acccb': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'caabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcac': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbbb', 'c': 'bbbb'}, 'abab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ccbb': {'a': 'ccbba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acca': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'caabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'ba'}, 'acbc': {'a': 'acbca', 'b': 'acbcb', 'c': 'aaaccb'}, 'bcb': {'a': 'bcba', 'b': 'bbbb', 'c': 'bcbc'}, 'cacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'aaaccb', 'b': 'caccb', 'c': 'caccc'}, 'ccac': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'abbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'aababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'bbcb': {'a': 'bbcba', 'b': 'ccbcb', 'c': 'bbbb'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaabc'}, 'bbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbb': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'acbbc'}, 'abcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'bcabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaa': {'a': 'aaaaa', 'b': 'aaaccb', 'c': 'aaaccb'}, 'acbcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'cbbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaaa': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'cbcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbbb'}, 'bbba': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'abbab': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'abcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'ba'}, 'abcc': {'a': 'abcca', 'b': 'abccb', 'c': 'aaaccb'}, 'abccbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcac': {'a': 'aaaccb', 'b': 'bcacb', 'c': 'aaaccb'}, 'abacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bbbb', 'c': 'bbbb'}, 'ccba': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bcbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'abcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbbb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bbcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'bcbca': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'aaaccb', 'b': 'ba', 'c': 'aaaccb'}, 'aabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'acbcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbca': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'cbcac'}, 'cbabba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caabb': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'cbbac'}, 'acaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccbc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'bbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'cbab': {'a': 'aaaccb', 'b': 'cbabb', 'c': 'aaaccb'}, 'cccc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aaabc': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'abaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'ccbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'bbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'aacbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ccab', 'c': 'ccac'}, 'bbcacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcba': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'ccaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ababb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabb': {'a': 'cabba', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bcaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'aaaccb', 'b': 'abbbb', 'c': 'aaaccb'}, 'abbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabb': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aabbc'}, 'aca': {'a': 'acaa', 'b': 'acab', 'c': 'acac'}, 'accab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'aaabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaba': {'a': 'aaaccb', 'b': 'aabab', 'c': 'aaaccb'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'acbaa', 'b': 'aaaccb', 'c': 'aaaccb'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacb': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'bcbc': {'a': 'bcbca', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acab': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'abba': {'a': 'aaaccb', 'b': 'abbab', 'c': 'aaaccb'}, 'caccb': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'acbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'cacac': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbbb': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'abcb': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'ccbc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbb': {'a': 'cbba', 'b': 'cbbb', 'c': 'cbbc'}, 'abbbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'bcaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caba': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'cbabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabba': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'acbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bccb', 'c': 'bbbb'}, 'cabac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbcb': {'a': 'ba', 'b': 'ccbcb', 'c': 'ccbcb'}, 'accb': {'a': 'aaaccb', 'b': 'accbb', 'c': 'aaaccb'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'bbbb', 'c': 'bbbb'}, 'bbcbc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbcb': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'bcaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'bcaa', 'b': 'bcab', 'c': 'bcac'}, 'aba': {'a': 'abaa', 'b': 'abab', 'c': 'abac'}, 'caccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbcc': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'aabc': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'acbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'aacc'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'ccbb', 'c': 'bbbb'}, 'aaac': {'a': 'aaaccb', 'b': 'aaacb', 'c': 'aaacc'}, 'aacaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'aaaccb'}, 'acbca': {'a': 'aaaccb', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'bbcab': {'a': 'ba', 'b': 'aaaccb', 'c': 'ba'}, 'aaacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'abbc': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'aacaa', 'b': 'aaaccb', 'c': 'aaaccb'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'accb', 'c': 'accc'}, 'caaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcbb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'ccbcb'}, 'acbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'aaaccb', 'b': 'aaaccb', 'c': 'cacac'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'aaaccb', 'b': 'bbbb', 'c': 'ccbcb'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'aabbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ababc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccb': {'a': 'aaaccb', 'b': 'ccbcb', 'c': 'bbbb'}, 'bbcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'acbc'}, 'aaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         1.541273          None            None              []          0         0         0          345                    None                                    None             400.134045        False     0.01   0.05
target: F(a)
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12932872772216797  s
EQ test took  0.0006494522094726562  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1244497299194336  s
EQ test took  1.7898595333099365  s


epsilon= 0.01 delta= 0.01 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 2.047480583190918
Interrupted due to time limit
overall guided extraction time took: 401.94000000000005
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.15000000000009095)
('ac', 0.17000000000007276)
('ab', 0.1999999999998181)
('ca', 0.2199999999997999)
('ba', 0.2300000000000182)
('aa', 0.25)
('acb', 0.2699999999999818)
('bba', 0.29999999999972715)
('abc', 0.330000000000382)
('bca', 0.36000000000012733)
('aca', 0.3900000000003274)
('caa', 0.4099999999998545)
('cca', 0.4399999999995998)
('abb', 0.4600000000000364)
('aab', 0.4800000000000182)
('cac', 0.5099999999997635)
('cba', 0.5500000000001819)
('acc', 0.5700000000001637)
('cab', 0.5700000000001637)
('aaa', 0.6100000000001273)
('aac', 0.6399999999998727)
('aba', 0.6599999999998545)
('ccab', 0.6900000000000546)
('bcca', 0.7200000000002547)
('ccca', 0.7199999999997999)
('cacc', 0.75)
('aaaa', 0.7799999999997453)
('abaa', 0.7999999999997272)
('acac', 0.8200000000001637)
('cbca', 0.849999999999909)
('accb', 0.8699999999998909)
('cabc', 0.8899999999998727)
('ccac', 0.930000000000291)
('acbb', 0.9500000000002728)
('acba', 0.9699999999997999)
('caaa', 1.0099999999997635)
('bbca', 1.0300000000002)
('cbba', 1.0399999999999636)
('abba', 1.1099999999996726)
('abab', 1.080000000000382)
('aaac', 1.1399999999998727)
('bcab', 1.150000000000091)
('caba', 1.1900000000000546)
('bcba', 1.2100000000000364)
('abcc', 1.2199999999998)
('caca', 1.25)
('abca', 1.2899999999999636)
('bbaa', 1.300000000000182)
('aaab', 1.349999999999909)
('cbaa', 1.3600000000001273)
('bbba', 1.3799999999996544)
('cbac', 1.430000000000291)
('aaba', 1.4400000000000546)
('acab', 1.4800000000000182)
('abbc', 1.5099999999997635)
('bbac', 1.5199999999999818)
('aabb', 1.569999999999709)
('cabb', 1.5799999999999272)
('abcb', 1.6100000000001273)
('aabc', 1.6299999999996544)
('aacc', 1.6399999999998727)
('ccba', 1.6900000000000546)
('acbc', 1.7100000000000364)
('abac', 1.7400000000002365)
('caac', 1.7699999999999818)
('abbb', 1.7899999999999636)
('cbab', 1.8200000000001637)
('aaca', 1.8699999999998909)
('bbab', 1.8800000000001091)
('accc', 1.9200000000000728)
('caab', 1.9299999999998363)
('acca', 1.9800000000000182)
('cacb', 2.0)
('ccaa', 2.0399999999999636)
('bcaa', 2.080000000000382)
('aacb', 2.1100000000001273)
('acaa', 2.1099999999996726)
('bcac', 2.1600000000003092)
('abbbc', 2.1799999999998363)
('cbbac', 2.2100000000000364)
('aaaba', 2.2200000000002547)
('cacbc', 2.25)
('abcca', 2.2899999999999636)
('ccaba', 2.3200000000001637)
('cccaa', 2.3399999999996908)
('cbaba', 2.3599999999996726)
('aacbb', 2.399999999999636)
('cabca', 2.4099999999998545)
('bcaba', 2.449999999999818)
('abcbb', 2.480000000000018)
('acbbc', 2.519999999999982)
('ccbaa', 2.519999999999982)
('caacb', 2.550000000000182)
('aabbc', 2.599999999999909)
('caacc', 2.630000000000109)
('abcaa', 2.650000000000091)
('aabab', 2.630000000000109)
('aabcb', 2.650000000000091)
('cbaab', 2.6900000000000546)
('acaab', 2.7399999999997817)
('caabb', 2.7200000000002547)
('acaca', 2.7599999999997635)
('aabca', 2.7799999999997453)
('cabcb', 2.8299999999999272)
('abacc', 2.8299999999999272)
('bccaa', 2.869999999999891)
('abaab', 2.900000000000091)
('aaabc', 2.900000000000091)
('accbc', 2.9700000000002547)
('acbbb', 2.980000000000018)
('aaaca', 3.019999999999982)
('aacba', 3.0300000000002)
('cbbba', 3.050000000000182)
('accba', 3.1099999999996726)
('cbaca', 3.1200000000003456)
('ccabb', 3.1600000000003092)
('cabbc', 3.1700000000000728)
('acaac', 3.2199999999998)
('aabbb', 3.269999999999982)
('cbaac', 3.2600000000002183)
('acccb', 3.3399999999996908)
('bbbaa', 3.3400000000001455)
('abacb', 3.319999999999709)
('aaabb', 3.3599999999996726)
('ccbac', 3.399999999999636)
('cccab', 3.419999999999618)
('acacb', 3.4400000000000546)
('abcbc', 3.5)
('bbbca', 3.5100000000002183)
('bbaba', 3.550000000000182)
('aaaab', 3.5599999999999454)
('bbaab', 3.5799999999999272)
('aacaa', 3.630000000000109)
('ccbca', 3.6700000000000728)
('cabaa', 3.7100000000000364)
('cbcac', 3.700000000000273)
('cbbab', 3.7899999999999636)
('bcbac', 3.769999999999982)
('bbaac', 3.7799999999997453)
('bbcab', 3.8099999999999454)
('cacca', 3.849999999999909)
('ccbba', 3.8399999999996908)
('cabcc', 3.900000000000091)
('cbbca', 3.8899999999998727)
('cbabb', 3.9200000000000728)
('bbabb', 4.0)
('bbacc', 4.0)
('ccaca', 4.029999999999745)
('aaaaa', 4.100000000000364)
('abccc', 4.0900000000001455)
('abaac', 4.160000000000309)
('abbcb', 4.170000000000073)
('bbcaa', 4.230000000000018)
('abccb', 4.199999999999818)
('accbb', 4.2599999999997635)
('abbab', 4.25)
('cacac', 4.329999999999927)
('ccabc', 4.350000000000364)
('acbaa', 4.400000000000091)
('cabab', 4.420000000000073)
('ccacb', 4.419999999999618)
('abbba', 4.430000000000291)
('caabc', 4.480000000000018)
('cbaaa', 4.5)
('ccacc', 4.549999999999727)
('cccba', 4.580000000000382)
('cbcca', 4.630000000000109)

Time taken to extract lstar-dfa: 401.90092062950134
number of states of the dfa: 188
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcb': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'acbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'caab', 'c': 'caac'}, 'bcb': {'a': 'bcba', 'b': 'bbcb', 'c': 'bbcb'}, 'cacc': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'ccac': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'ccbc': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'cbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbb': {'a': 'cbba', 'b': 'ccbc', 'c': 'ccbc'}, 'abbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabc': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'cbca': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'caba': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'cbcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'cb', 'c': 'cc'}, 'cac': {'a': 'caca', 'b': 'cacb', 'c': 'cacc'}, 'caabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcb': {'a': 'ba', 'b': 'bbcb', 'c': 'bbcb'}, 'acaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacb': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'bcbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'caac': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbba': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'abccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abca': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'caabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaab': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'accc': {'a': 'ba', 'b': 'caaa', 'c': 'ba'}, 'caab': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'cabcc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcc': {'a': 'bcca', 'b': 'bbcb', 'c': 'bbcb'}, 'aa': {'a': 'aaa', 'b': 'aab', 'c': 'aac'}, 'acbb': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'abbcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'acb', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'aaab', 'c': 'aaac'}, 'abacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbab': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'abacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accb': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'bbac': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'aaabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccabc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aab': {'a': 'aaba', 'b': 'aabb', 'c': 'aabc'}, 'bbaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccc': {'a': 'ccca', 'b': 'ccbc', 'c': 'bbcb'}, 'cbbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cba': {'a': 'cbaa', 'b': 'cbab', 'c': 'cbac'}, 'ca': {'a': 'caa', 'b': 'cab', 'c': 'cac'}, 'cabab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abc': {'a': 'abca', 'b': 'abcb', 'c': 'abcc'}, 'ab': {'a': 'aba', 'b': 'abb', 'c': 'abc'}, 'abaa': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'bbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bc': {'a': 'bca', 'b': 'bcb', 'c': 'bcc'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'caaa', 'b': 'ccab', 'c': 'ccac'}, 'aaaa': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bca': {'a': 'caaa', 'b': 'bcab', 'c': 'caaa'}, 'aba': {'a': 'abaa', 'b': 'caaa', 'c': 'abac'}, 'aabc': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'abaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcab': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'cbbc': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'ccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abb': {'a': 'abba', 'b': 'abbb', 'c': 'abbc'}, 'ccacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'aacb', 'c': 'caaa'}, 'cabb': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'bbca': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbac': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'cbaa': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'bbc': {'a': 'bbca', 'b': 'bbcb', 'c': 'bbcb'}, 'bcaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccb': {'a': 'ccba', 'b': 'ccbc', 'c': 'ccbc'}, 'bbba': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'cabaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'bb', 'c': 'bc'}, 'abcca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcca': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'ccabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacb': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'cbaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbab': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'cabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbb': {'a': 'caaa', 'b': 'ba', 'c': 'caaa'}, 'abcbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abbab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcc': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'aabb': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'acaa': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'bcac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bba': {'a': 'bbaa', 'b': 'bbab', 'c': 'bbac'}, 'aca': {'a': 'acaa', 'b': 'caaa', 'c': 'acac'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'ccb', 'c': 'ccc'}, 'cbc': {'a': 'cbca', 'b': 'bbcb', 'c': 'bbcb'}, 'ccba': {'a': 'caaa', 'b': 'ba', 'c': 'caaa'}, 'aaaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bcba': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'abbc': {'a': 'ba', 'b': 'caaa', 'c': 'ba'}, 'bb': {'a': 'bba', 'b': 'bbb', 'c': 'bbc'}, 'bcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'cccb': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'ccab': {'a': 'caaa', 'b': 'caaa', 'c': 'caaa'}, 'acbbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'caaa', 'b': 'accb', 'c': 'accc'}, 'abac': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'aacba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'ba', 'b': 'ba', 'c': 'caaa'}, 'aaba': {'a': 'ba', 'b': 'caaa', 'c': 'ba'}, 'abaab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cbbb': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'bbaba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ab', 'c': 'ac'}, 'cab': {'a': 'caba', 'b': 'cabb', 'c': 'cabc'}, 'bbbc': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'cbaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cb': {'a': 'cba', 'b': 'cbb', 'c': 'cbc'}, 'abbbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbabb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acba': {'a': 'caaa', 'b': 'ba', 'c': 'ba'}, 'acacb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abcaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cabbc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbb': {'a': 'bbba', 'b': 'bbcb', 'c': 'ccbc'}, 'aabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccbb': {'a': 'caaa', 'b': 'bbcb', 'c': 'bbcb'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'abba': {'a': 'ba', 'b': 'caaa', 'c': 'ba'}, 'acca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acb': {'a': 'acba', 'b': 'acbb', 'c': 'caaa'}, 'acac': {'a': 'caaa', 'b': 'caaa', 'c': 'ba'}, 'cabca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acbaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bbaa': {'a': 'ba', 'b': 'caaa', 'c': 'caaa'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accbb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aabcb': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  false       false   True          100.0      None              None                              None         2.047481          None            None              []          0         0         0          188                    None                                    None             401.900921        False     0.01   0.01
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1099238395690918  s
EQ test took  0.0006465911865234375  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1215217113494873  s
EQ test took  0.0171053409576416  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ab']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x0
Learning formula with depth 0
learned LTL formula: a
Learning took:  0.14723944664001465  s
EQ test took  0.017214536666870117  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ab']


negative traces---> 
['', 'a']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x1)
Learning formula with depth 1
learned LTL formula: (X b)
Learning took:  0.18606209754943848  s
EQ test took  0.015563488006591797  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a']



3  iteration complete



start formula depth: 2
Before normalization: (F x1)
Learning formula with depth 1
learned LTL formula: (F b)
Learning took:  0.17381000518798828  s
EQ test took  0.11717748641967773  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a', 'b']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (x1 -> x1))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.28112268447875977  s
No positive counterexample found
EQ test took  0.07392621040344238  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a', 'b', 'cb']



5  iteration complete



start formula depth: 3
increasing formula depth to  4
Before normalization: ((! x2) & (X (! x2)))
Learning formula with depth 3
learned LTL formula: ((~ c) & (X (~ c)))
Learning took:  0.539924144744873  s
EQ test took  0.029954195022583008  s
new counterexample: cab  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab']


negative traces---> 
['', 'a', 'b', 'cb']



6  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((F x0) & ((F x0) U x1))
Learning formula with depth 3
learned LTL formula: ((F a) & ((F a) U b))
Learning took:  1.1187188625335693  s
No negative counterexample found
EQ test took  0.1964890956878662  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb']


negative traces---> 
['', 'a', 'b', 'cb']



7  iteration complete



start formula depth: 5
Before normalization: ((x0 U (! x0)) & ((! x0) U x0))
Learning formula with depth 3
learned LTL formula: ((F a) & (a U (~ a)))
Learning took:  0.8829834461212158  s
EQ test took  0.19802117347717285  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb']


negative traces---> 
['', 'a', 'b', 'cb', 'ca']



8  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (F x0))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  1.0800809860229492  s
EQ test took  0.306093692779541  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: F(b)
final ltl:  ((F a) & (F b))

Time taken to extract ltl: 5.627007484436035
Interrupted due to time limit
overall guided extraction time took: 403.07000000000016
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bac', 0.009999999999763531)
('a', 0.06999999999970896)
('ca', 0.11000000000012733)
('ac', 0.12000000000034561)
('aa', 0.15000000000009095)
('aac', 0.169999999999618)
('aca', 0.1799999999998363)
('caa', 0.22000000000025466)
('aaa', 0.23999999999978172)
('cca', 0.2600000000002183)
('acc', 0.27999999999974534)
('cac', 0.3200000000001637)
('accc', 0.30999999999994543)
('ccaa', 0.3400000000001455)
('aaca', 0.34999999999990905)
('aaac', 0.36000000000012733)
('acac', 0.4099999999998545)
('ccac', 0.40000000000009095)
('acca', 0.4600000000000364)
('caca', 0.4600000000000364)
('cacc', 0.5100000000002183)
('aacc', 0.5)
('acaa', 0.5300000000002001)
('caac', 0.5299999999997453)
('ccca', 0.569999999999709)
('caaa', 0.5799999999999272)
('aaaa', 0.6199999999998909)
('acaaa', 0.6700000000000728)
('aaaca', 0.6600000000003092)
('caaaa', 0.6799999999998363)
('accaa', 0.6799999999998363)
('cccaa', 0.7100000000000364)
('cacca', 0.7199999999997999)
('acaac', 0.7300000000000182)
('acaca', 0.7599999999997635)
('aaccc', 0.8000000000001819)
('caaac', 0.830000000000382)
('caaca', 0.8299999999999272)
('caccc', 0.8600000000001273)
('aacac', 0.900000000000091)
('aacca', 0.9099999999998545)
('ccaac', 0.900000000000091)
('cacaa', 0.9600000000000364)
('ccaca', 0.9699999999997999)
('aaaaa', 0.9499999999998181)
('caacc', 1.0099999999997635)
('acacc', 1.0100000000002183)
('cccca', 1.0300000000002)
('aaacc', 1.0399999999999636)
('acccc', 1.0799999999999272)
('ccaaa', 1.1100000000001273)
('aacaa', 1.099999999999909)
('accac', 1.180000000000291)
('cccac', 1.1600000000003092)
('cacac', 1.2300000000000182)
('ccacc', 1.2100000000000364)
('accca', 1.199999999999818)
('aaaac', 1.25)
('cccaca', 1.2800000000002)
('acaaca', 1.2699999999999818)
('accaca', 1.3099999999999454)
('ccaaca', 1.3100000000004002)
('caaaaa', 1.3699999999998909)
('caacca', 1.3899999999998727)
('ccaaac', 1.4099999999998545)
('cacaca', 1.4200000000000728)
('aaccac', 1.449999999999818)
('aaaaac', 1.449999999999818)
('ccaccc', 1.4600000000000364)
('aacacc', 1.5300000000002)
('acccca', 1.5499999999997272)
('caccac', 1.5399999999999636)
('aaacaa', 1.5600000000004002)
('acaaaa', 1.6100000000001273)
('accccc', 1.5300000000002)
('ccacca', 1.4800000000000182)
('accaac', 1.5100000000002183)
('acaacc', 1.5300000000002)
('ccacac', 1.5599999999999454)
('accaaa', 1.6000000000003638)
('aaacac', 1.6199999999998909)
('ccaacc', 1.6599999999998545)
('aacaaa', 1.650000000000091)
('acaaac', 1.6599999999998545)
('cacaac', 1.6899999999995998)
('acaccc', 1.7300000000000182)
('caccca', 1.7300000000000182)
('cacccc', 1.7800000000002)
('ccaaaa', 1.7799999999997453)
('caccaa', 1.7699999999999818)
('accacc', 1.7900000000004184)
('aacaac', 1.8400000000001455)
('ccccac', 1.8500000000003638)
('caaaac', 1.900000000000091)
('cccaac', 1.900000000000091)
('aaccca', 1.9400000000000546)
('caaacc', 1.9299999999998363)
('aaaacc', 1.9400000000000546)
('aacaca', 1.9600000000000364)
('cacaaa', 1.9600000000000364)
('aaaaaa', 1.9800000000000182)
('acccaa', 2.050000000000182)
('caacaa', 2.0300000000002)
('acccac', 2.0899999999996908)
('caacac', 2.1100000000001273)
('aaccaa', 2.0799999999999272)
('aaaaca', 2.130000000000109)
('caaccc', 2.1599999999998545)
('caaaca', 2.1900000000000546)
('ccccaa', 2.180000000000291)
('aaaccc', 2.2399999999997817)
('aaacca', 2.2200000000002547)
('acacaa', 2.25)
('ccccca', 2.25)
('cccaaa', 2.2899999999999636)
('acacca', 2.2899999999999636)
('acacac', 2.3399999999996908)
('ccacaa', 2.3299999999999272)
('aacccc', 2.369999999999891)
('cccacc', 2.3600000000001273)
('cacacc', 2.3899999999998727)
('ccccaac', 2.4299999999998363)
('aaccaaa', 2.449999999999818)
('ccaaaaa', 2.4900000000002365)
('caaaccc', 2.5)
('aaaccac', 2.5100000000002183)
('cacacac', 2.5599999999999454)
('cccacac', 2.5700000000001637)
('ccaccaa', 2.569999999999709)
('ccacacc', 2.619999999999891)
('acccacc', 2.569999999999709)
('caacaac', 2.6299999999991996)
('aaaaaca', 2.6099999999996726)
('cccccaa', 2.6599999999998545)
('cacccac', 2.699999999999818)
('cacacca', 2.7600000000002183)
('cccacaa', 2.7200000000002547)
('ccacccc', 2.75)
('ccaccac', 2.75)
('ccacaaa', 2.819999999999709)
('aaccaac', 2.7799999999997453)
('ccacaca', 2.8400000000001455)
('aacaacc', 2.7999999999992724)
('caaacac', 2.8499999999994543)
('caacaca', 2.880000000000109)
('caccaac', 2.930000000000291)
('aacaaca', 2.9200000000000728)
('aaaacac', 2.9700000000002547)
('acaaaaa', 2.9899999999997817)
('ccaaccc', 3.0)
('acaccaa', 3.0100000000002183)
('ccccacc', 3.0299999999997453)
('accaaca', 3.0600000000004)
('acaccac', 3.0600000000004)
('caaaaaa', 3.0900000000001455)
('aaaccaa', 3.130000000000109)
('cccacca', 3.100000000000364)
('cacaccc', 3.1299999999991996)
('cacaaaa', 3.1599999999998545)
('accacca', 3.1599999999998545)
('cccaacc', 3.2700000000004366)
('caaaaac', 3.2299999999995634)
('accccca', 3.4299999999993815)
('cccccca', 3.300000000000182)
('caaccca', 3.269999999999527)
('caaccac', 3.3400000000001455)
('caaacaa', 3.3299999999999272)
('accacaa', 3.3400000000001455)
('aaacacc', 3.3599999999996726)
('aacacca', 3.399999999999636)
('aacccca', 3.4099999999998545)
('cacacaa', 3.4700000000002547)
('ccaacac', 3.4799999999995634)
('aacaccc', 3.469999999999345)
('cccaaac', 3.5399999999999636)
('caaacca', 3.4899999999997817)
('cacaaca', 3.5299999999997453)
('cacccca', 3.5799999999999272)
('aaaacaa', 3.5799999999999272)
('caaccaa', 3.619999999999891)
('acaaaca', 3.6400000000003274)
('accaaaa', 3.6400000000003274)
('caccacc', 3.6700000000000728)
('acacacc', 3.680000000000291)
('accaaac', 3.75)
('aaaacca', 3.769999999999527)
('cccaaca', 3.7999999999992724)
('aaaccca', 3.7200000000002547)
('aacacac', 3.839999999999236)
('aaccacc', 3.7899999999999636)
('caccccc', 3.819999999999709)
('acaccca', 3.8299999999999272)
('aacaaaa', 3.910000000000764)
('accaccc', 3.949999999999818)
('acccaac', 3.899999999999636)
('aacacaa', 3.9200000000000728)

Time taken to extract lstar-dfa: 403.0621147155762
number of states of the dfa: 204
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'caaaa', 'b': 'ba', 'c': 'caaac'}, 'acaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'cccaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacc': {'a': 'cacca', 'b': 'ba', 'c': 'caccc'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccacc'}, 'caaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'aacaca', 'b': 'ba', 'c': 'aacacc'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aacacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccccca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'aaccaa', 'b': 'ba', 'c': 'aaccac'}, 'accacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'acacac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'ccaac': {'a': 'ccaaca', 'b': 'ba', 'c': 'ccaacc'}, 'acacc': {'a': 'acacca', 'b': 'ba', 'c': 'acaccc'}, 'ccaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'ba', 'c': 'cccac'}, 'accccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'caaca', 'b': 'ba', 'c': 'caacc'}, 'caaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'acccaa', 'b': 'ba', 'c': 'acccac'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'accaaa', 'b': 'ba', 'c': 'accaac'}, 'caacaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'accca', 'b': 'ba', 'c': 'acccc'}, 'acaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'accccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'aaaaac'}, 'bac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'caccaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'ccaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'cccacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccc': {'a': 'cccca', 'b': 'b', 'c': 'ccccc'}, 'acccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'caaaca', 'b': 'ba', 'c': 'caaacc'}, 'ccaaca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaca': {'a': 'caacaa', 'b': 'ba', 'c': 'caacac'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'caccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaccc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'ccccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'cacaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'accaca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'ccacca', 'b': 'ba', 'c': 'ccaccc'}, 'acccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'aacaaa', 'b': 'ba', 'c': 'aacaac'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'aaaa': {'a': 'aaaaa', 'b': 'ba', 'c': 'aaaac'}, 'caacc': {'a': 'caacca', 'b': 'ba', 'c': 'caaccc'}, 'cccccc': {'a': 'acaccac', 'b': 'b', 'c': 'b'}, 'cacaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccaa': {'a': 'ccaaa', 'b': 'ba', 'c': 'ccaac'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'acaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'acaccac', 'b': 'ba', 'c': 'aaacac'}, 'ccaaa': {'a': 'ccaaaa', 'b': 'ba', 'c': 'acaccac'}, 'cacaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cccaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaac': {'a': 'aaaca', 'b': 'ba', 'c': 'aaacc'}, 'acccaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cacaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cccaaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'acacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caaaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'caccaa', 'b': 'ba', 'c': 'caccac'}, 'ccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'aaacca', 'b': 'ba', 'c': 'aaaccc'}, 'caccac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'acaaa', 'b': 'ba', 'c': 'acaac'}, 'cccaa': {'a': 'cccaaa', 'b': 'ba', 'c': 'cccaac'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'aaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'aacccc'}, 'caaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'ba', 'c': 'aaccc'}, 'ccaacc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'cacacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'acaaaa', 'b': 'ba', 'c': 'acaaac'}, 'cacaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'aacaa', 'b': 'ba', 'c': 'aacac'}, 'cacaa': {'a': 'cacaaa', 'b': 'ba', 'c': 'cacaac'}, 'caaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'caacac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caca': {'a': 'cacaa', 'b': 'ba', 'c': 'cacac'}, 'acaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ccacaa', 'b': 'ba', 'c': 'ccacac'}, 'ccccac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'caaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaccaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acccc': {'a': 'acaccac', 'b': 'ba', 'c': 'accccc'}, 'ccacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacaca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'caacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cccacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccc': {'a': 'ccccca', 'b': 'b', 'c': 'cccccc'}, 'caaaa': {'a': 'caaaaa', 'b': 'ba', 'c': 'acaccac'}, 'aacccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'caccca', 'b': 'ba', 'c': 'cacccc'}, 'cccaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'cccaca', 'b': 'ba', 'c': 'cccacc'}, 'aacaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'aaaaca', 'b': 'ba', 'c': 'aaaacc'}, 'acccac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaacac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'caaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acacac'}, 'acca': {'a': 'accaa', 'b': 'ba', 'c': 'accac'}, 'accacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ba', 'c': 'acacc'}, 'accac': {'a': 'accaca', 'b': 'ba', 'c': 'accacc'}, 'aaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacac': {'a': 'cacaca', 'b': 'ba', 'c': 'cacacc'}, 'ccacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccca': {'a': 'ccccaa', 'b': 'ba', 'c': 'ccccac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon                     counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F a) & (F b))   True          100.0      100.0              100.0                              100.0         5.627007          None            None  [, ab, a, ba, b, cb, cab, acb, ca]          0         0         2          204                    100.0                                    100.0             403.062115        False      0.1    0.1
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1140451431274414  s
EQ test took  0.0006148815155029297  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12798309326171875  s
EQ test took  0.02715587615966797  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ba']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x1
Learning formula with depth 0
learned LTL formula: b
Learning took:  0.15249300003051758  s
EQ test took  0.01710653305053711  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ba']


negative traces---> 
['', 'b']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x0)
Learning formula with depth 1
learned LTL formula: (X a)
Learning took:  0.18692874908447266  s
EQ test took  0.015134572982788086  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b']



3  iteration complete



start formula depth: 2
Before normalization: (F x0)
Learning formula with depth 1
learned LTL formula: (F a)
Learning took:  0.1802504062652588  s
EQ test took  0.1159965991973877  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b', 'a']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (! x2))
Learning formula with depth 2
learned LTL formula: (X (~ c))
Learning took:  0.2808103561401367  s
EQ test took  0.02227187156677246  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a']



5  iteration complete



start formula depth: 3
Before normalization: (X (x2 -> x2))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.2937145233154297  s
EQ test took  0.0723717212677002  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cb']



6  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (((! x0) U x0) & (((! x0) U x0) U (! x0)))
Learning formula with depth 3
learned LTL formula: ((F a) & ((F a) U (~ a)))
Learning took:  1.2172894477844238  s
No positive counterexample found
EQ test took  0.19657278060913086  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cb', 'ac']



7  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (F x0))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  1.1142208576202393  s
EQ test took  0.28772401809692383  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: F(b)
final ltl:  ((F a) & (F b))

Time taken to extract ltl: 4.434113502502441
Interrupted due to time limit
overall guided extraction time took: 400.3800000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bab', 0.019999999999527063)
('a', 0.14000000000032742)
('aa', 0.22000000000025466)
('ac', 0.2600000000002183)
('ca', 0.32000000000061846)
('cac', 0.3500000000003638)
('aca', 0.36999999999989086)
('cca', 0.4099999999998545)
('acc', 0.47999999999956344)
('aaa', 0.4899999999997817)
('caa', 0.5199999999995271)
('aac', 0.5500000000001819)
('ccaa', 0.6300000000001091)
('aaca', 0.6799999999993815)
('caaa', 0.6900000000005093)
('cacc', 0.7399999999997817)
('aacc', 0.7600000000002183)
('caca', 0.7800000000006548)
('aaaa', 0.8699999999998909)
('ccca', 0.8800000000001091)
('aaac', 0.9099999999998545)
('acca', 0.9399999999995998)
('caac', 1.0299999999997453)
('acac', 1.0200000000004366)
('acaa', 1.0900000000001455)
('accc', 1.1300000000001091)
('ccac', 1.1700000000000728)
('cccac', 1.199999999999818)
('ccaac', 1.2599999999993088)
('cacaa', 1.2600000000002183)
('caaaa', 1.2899999999999636)
('acaca', 1.3299999999999272)
('accaa', 1.3400000000001455)
('ccaca', 1.4200000000000728)
('cacca', 1.3800000000001091)
('accca', 1.5)
('aaaca', 1.5)
('acccc', 1.5300000000006548)
('acaac', 1.5600000000004002)
('ccaaa', 1.6499999999996362)
('aaccc', 1.6099999999996726)
('aacaa', 1.680000000000291)
('aaaac', 1.7100000000000364)
('caacc', 1.75)
('aaaaa', 1.8099999999994907)
('aaacc', 1.8299999999999272)
('caccc', 1.8599999999996726)
('acacc', 1.8999999999996362)
('ccacc', 1.930000000000291)
('caaac', 2.0)
('acaaa', 2.0200000000004366)
('aacca', 2.050000000000182)
('accac', 2.1099999999996726)
('cccca', 2.139999999999418)
('cccaa', 2.1599999999998545)
('aacac', 2.2100000000000364)
('caaca', 2.199999999999818)
('cacac', 2.2600000000002183)
('aaaaac', 2.2700000000004366)
('aaacca', 2.380000000000109)
('acaccc', 2.3599999999996726)
('aacaaa', 2.380000000000109)
('ccccca', 2.399999999999636)
('ccacca', 2.449999999999818)
('accaaa', 2.4899999999997817)
('caacca', 2.5399999999999636)
('acacca', 2.5599999999994907)
('aaaccc', 2.5799999999999272)
('caaacc', 2.630000000000109)
('acccaa', 2.7200000000002547)
('aaacaa', 2.7200000000002547)
('aaacac', 2.8299999999999272)
('aaccca', 2.9000000000005457)
('caacac', 2.8799999999991996)
('accacc', 2.9700000000002547)
('cacaac', 2.949999999999818)
('acaacc', 3.0299999999997453)
('caccac', 3.0399999999999636)
('cacccc', 3.130000000000109)
('aaaaaa', 3.1400000000003274)
('ccacac', 3.1900000000005093)
('cacacc', 3.2100000000000364)
('aaaaca', 3.2700000000004366)
('ccaacc', 3.2899999999999636)
('cccaaa', 3.3700000000008004)
('accaac', 3.3400000000001455)
('acaaaa', 3.3499999999994543)
('aacccc', 3.4799999999995634)
('ccaaac', 3.4799999999995634)
('cccacc', 3.4899999999997817)
('accaca', 3.5799999999999272)
('acccac', 3.550000000000182)
('ccacaa', 3.550000000000182)
('aacaca', 3.6400000000003274)
('caccca', 3.5799999999999272)
('ccccaa', 3.6400000000003274)
('acacaa', 3.6699999999991633)
('ccccac', 3.8100000000004)
('aaaacc', 3.8099999999994907)
('aacacc', 3.8400000000001455)
('ccaaca', 3.850000000000364)
('cccaac', 3.899999999999636)
('aaccaa', 4.050000000000182)
('caaaaa', 4.0600000000004)
('acccca', 4.109999999999673)
('ccaccc', 4.170000000000073)
('caaaca', 4.200000000000728)
('cacaca', 4.25)
('acacac', 4.289999999999964)
('caaaac', 4.3400000000001455)
('aaccac', 4.309999999999491)
('ccaaaa', 4.359999999999673)
('caaccc', 4.4099999999998545)
('caacaa', 4.449999999999818)
('acaaac', 4.529999999999745)
('accccc', 4.5)
('aacaac', 4.579999999999927)
('caccaa', 4.630000000000109)
('acaaca', 4.699999999999818)
('cacaaa', 4.690000000000509)
('cccaca', 4.729999999999563)
('caacacc', 4.819999999999709)
('aacccaa', 4.8100000000004)
('ccccaac', 4.800000000000182)
('aaaccaa', 4.869999999999891)
('acccaca', 4.9099999999998545)
('ccaacaa', 4.969999999999345)
('aaaaacc', 5.029999999999745)
('acacaca', 5.039999999999964)
('aaacaac', 5.0900000000001455)
('acaaacc', 5.130000000000109)
('caaaccc', 5.1599999999998545)
('aaacacc', 5.239999999999782)
('ccaaaaa', 5.279999999999745)
('caaaacc', 5.25)
('acaccac', 5.329999999999927)
('ccaaacc', 5.369999999999891)
('cccaaac', 5.440000000000509)
('cacacac', 5.430000000000291)
('accccca', 5.479999999999563)
('cccccaa', 5.460000000000036)

Time taken to extract lstar-dfa: 400.348087310791
number of states of the dfa: 148
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'caaaa', 'b': 'ba', 'c': 'caaac'}, 'acaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'cccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'ba', 'c': 'caccc'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccacc'}, 'aacac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'acacac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ccaaca', 'b': 'ba', 'c': 'acaccac'}, 'acacc': {'a': 'acacca', 'b': 'ba', 'c': 'acaccac'}, 'ccaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'ba', 'c': 'cccac'}, 'caaacc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'caac': {'a': 'caaca', 'b': 'ba', 'c': 'caacc'}, 'accccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'acaccac', 'b': 'ba', 'c': 'acccac'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'accca', 'b': 'ba', 'c': 'acccc'}, 'acaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'aaaaac'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'caccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'cccc': {'a': 'cccca', 'b': 'b', 'c': 'ccccc'}, 'caaac': {'a': 'acaccac', 'b': 'ba', 'c': 'caaacc'}, 'ccaaca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caaca': {'a': 'acaccac', 'b': 'ba', 'c': 'caacac'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'ccaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'cacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'aaaa': {'a': 'aaaaa', 'b': 'ba', 'c': 'aaaac'}, 'caacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ccaaa', 'b': 'ba', 'c': 'ccaac'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'acaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'aaacaa', 'b': 'ba', 'c': 'aaacac'}, 'ccaaa': {'a': 'ccaaaa', 'b': 'ba', 'c': 'ccaaac'}, 'aaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'ba', 'c': 'aaacc'}, 'acccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccaaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'acacca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccaaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'aaacca', 'b': 'ba', 'c': 'acaccac'}, 'caccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'acaaa', 'b': 'ba', 'c': 'acaac'}, 'aaccc': {'a': 'aaccca', 'b': 'ba', 'c': 'acaccac'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'cccaa': {'a': 'cccaaa', 'b': 'ba', 'c': 'acaccac'}, 'ccacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aacc': {'a': 'aacca', 'b': 'ba', 'c': 'aaccc'}, 'ccaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'cacacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaaac'}, 'aaacca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'aacaa', 'b': 'ba', 'c': 'aacac'}, 'cacaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'caacac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'cacaa', 'b': 'ba', 'c': 'cacac'}, 'acaaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'ccaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'acaccac', 'b': 'ba', 'c': 'accccc'}, 'ccacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'caacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'ccaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccc': {'a': 'acaccac', 'b': 'b', 'c': 'b'}, 'caaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'caaaac'}, 'aacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cccac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acccac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaacac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'caaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acacac'}, 'acca': {'a': 'accaa', 'b': 'ba', 'c': 'accac'}, 'accacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ba', 'c': 'acacc'}, 'accac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacac': {'a': 'cacaca', 'b': 'ba', 'c': 'acaccac'}, 'ccccaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccca': {'a': 'ccccaa', 'b': 'ba', 'c': 'acaccac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon                counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F a) & (F b))   True          100.0      100.0              100.0                              100.0         4.434114          None            None  [, ba, b, ab, a, acb, cb, ac]          0         0         2          148                    100.0                                    100.0             400.348087        False      0.1   0.05
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11344599723815918  s
EQ test took  0.0006363391876220703  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1178581714630127  s
EQ test took  0.031316280364990234  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ab']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x0
Learning formula with depth 0
learned LTL formula: a
Learning took:  0.14185500144958496  s
EQ test took  0.01711273193359375  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ab']


negative traces---> 
['', 'a']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x1)
Learning formula with depth 1
learned LTL formula: (X b)
Learning took:  0.17202258110046387  s
EQ test took  0.018596410751342773  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a']



3  iteration complete



start formula depth: 2
Before normalization: (F x1)
Learning formula with depth 1
learned LTL formula: (F b)
Learning took:  0.18863606452941895  s
EQ test took  0.1628124713897705  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a', 'b']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (x1 -> x1))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.2771751880645752  s
No positive counterexample found
EQ test took  0.060343265533447266  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ab', 'ba']


negative traces---> 
['', 'a', 'b', 'cb']



5  iteration complete



start formula depth: 3
increasing formula depth to  4
Before normalization: ((! x2) & (X (! x2)))
Learning formula with depth 3
learned LTL formula: ((~ c) & (X (~ c)))
Learning took:  0.5066313743591309  s
EQ test took  0.030198335647583008  s
new counterexample: cab  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab']


negative traces---> 
['', 'a', 'b', 'cb']



6  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((F x0) & ((F x0) U x1))
Learning formula with depth 3
learned LTL formula: ((F a) & ((F a) U b))
Learning took:  1.0392756462097168  s
EQ test took  0.2683112621307373  s
new counterexample: cccbcbbbccbbcbbccbba  should be rejected by implementation


positive traces---> 
['ab', 'ba', 'cab']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba']



7  iteration complete



start formula depth: 5
Before normalization: ((X (! x2)) U ((! x2) & (X (! x2))))
Learning formula with depth 4
learned LTL formula: ((X (~ c)) U ((~ c) & (X (~ c))))
Learning took:  2.8901565074920654  s
EQ test took  0.052483320236206055  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba']



8  iteration complete



start formula depth: 5
Before normalization: ((x0 -> (G x0)) -> (X x0))
Learning formula with depth 3
learned LTL formula: ((a -> (G a)) -> (X a))
Learning took:  3.1449544429779053  s
EQ test took  0.02971053123474121  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca']



9  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: (((X x0) U x0) & (F x1))
Learning formula with depth 3
learned LTL formula: ((F b) & ((X a) U a))
Learning took:  9.280988216400146  s
EQ test took  0.22713327407836914  s
new counterexample: bba  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb', 'bba']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca']



10  iteration complete



start formula depth: 6
Before normalization: ((F x0) & ((G (F x0)) -> x1))
Learning formula with depth 4
learned LTL formula: ((F a) & ((G (F a)) -> b))
Learning took:  6.178497791290283  s
EQ test took  0.0269625186920166  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb', 'bba']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca', 'ac']



11  iteration complete



start formula depth: 6
Before normalization: (((X (! x2)) & (! x2)) | (X (X (! x2))))
Learning formula with depth 4
learned LTL formula: (((~ c) & (X (~ c))) | (X (X (~ c))))
Learning took:  8.250542879104614  s
EQ test took  0.04596710205078125  s
new counterexample: bcca  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb', 'bba', 'bcca']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca', 'ac']



12  iteration complete



start formula depth: 6
Before normalization: ((X (! x2)) U ((F (X (! x2))) & (! x2)))
Learning formula with depth 5
learned LTL formula: ((X (~ c)) U ((~ c) & (F (X (~ c)))))
Learning took:  22.422961711883545  s
EQ test took  0.03024888038635254  s
new counterexample: bb  should be rejected by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb', 'bba', 'bcca']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca', 'ac', 'bb']



13  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((F x1) & (x1 U ((! x1) U x0)))
Learning formula with depth 4
learned LTL formula: ((F b) & (b U ((~ b) U a)))
Learning took:  43.31348419189453  s
EQ test took  0.4015796184539795  s
new counterexample: cba  should be accepted by implementation


positive traces---> 
['ab', 'ba', 'cab', 'acb', 'bba', 'bcca', 'cba']


negative traces---> 
['', 'a', 'b', 'cb', 'cccbcbbbccbbcbbccbba', 'ca', 'ac', 'bb']



14  iteration complete





epsilon= 0.1 delta= 0.01 max_trace_length= 50
query: F(b)
final ltl:  ((F b) & (b U ((~ b) U a)))
incomplete formula
Number of samples: 151
Number of counterexamples returned: 25
7.90620014826138e+22 0.5549975358127521

Time taken to extract ltl: 401.0153925418854
Interrupted due to time limit
overall guided extraction time took: 408.0
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bac', 0.09000000000014552)
('a', 0.9699999999993452)
('ca', 1.3100000000004002)
('aa', 1.5499999999992724)
('ac', 1.6400000000003274)
('aac', 1.9799999999995634)
('cca', 2.180000000000291)
('caa', 2.2399999999997817)
('aca', 2.4600000000000364)
('aaa', 2.6700000000000728)
('cac', 2.7899999999999636)
('acc', 3.0900000000001455)
('acaa', 3.3200000000006185)
('ccaa', 3.5299999999997453)
('ccca', 3.6899999999996)
('aaaa', 3.869999999999891)
('aaca', 4.049999999999272)
('cacc', 4.140000000000327)
('accc', 4.319999999999709)
('acca', 4.569999999999709)
('caaa', 4.739999999999782)
('caca', 4.900000000000546)
('acac', 5.220000000000255)
('aaac', 5.420000000000073)
('ccac', 5.719999999999345)
('caac', 5.789999999999964)
('aacc', 6.039999999999964)
('acacc', 6.220000000000255)
('aacac', 6.380000000000109)
('ccaac', 6.479999999999563)
('aaaac', 6.539999999999964)
('cacca', 6.800000000000182)
('acaca', 6.9399999999996)
('aaacc', 7.140000000000327)
('aaccc', 7.230000000000473)
('accca', 7.5)
('caaca', 7.670000000000073)
('cacaa', 7.940000000000509)
('caacc', 8.170000000000073)
('ccaaa', 8.229999999999563)
('ccacc', 8.340000000000146)
('acccc', 8.639999999999418)
('cccca', 8.930000000000291)
('acaaa', 9.220000000000255)
('aaaaa', 9.239999999999782)
('aaaca', 9.569999999999709)
('ccaca', 9.539999999999964)
('caaaa', 9.80999999999949)
('acaac', 9.949999999999818)
('accaa', 10.489999999999782)
('accac', 10.649999999999636)
('cacac', 10.909999999999854)
('aacaa', 11.0600000000004)
('cccac', 11.269999999999527)
('aacca', 11.539999999999964)
('caaac', 11.650000000000546)
('cccaa', 11.909999999999854)
('caccc', 12.070000000000618)
('aaacaa', 12.210000000000036)
('caacca', 12.349999999999454)
('cacaca', 12.529999999999745)

Time taken to extract lstar-dfa: 407.97018551826477
number of states of the dfa: 67
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'ccaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'ccaca', 'b': 'ba', 'c': 'ba'}, 'ccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'cccc': {'a': 'ccaca', 'b': 'b', 'c': 'b'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'ba', 'c': 'ccaca'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'caacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aacc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caac': {'a': 'ccaca', 'b': 'ba', 'c': 'caacc'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'aaaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'acca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caacc': {'a': 'ccaca', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'acac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
Explanation matches RNN: 86.03
RNN matches ground truth: 100.0
Explanation matches ground truth: 86.03
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query                  explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                                    counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F b) & (b U ((~ b) U a)))  False          100.0      100.0              86.03                              86.03       401.015393   7.906200e+22         0.554998  [, ab, a, ba, b, cb, cab, cccbcbbbccbbcbbccbba...          0         0         4           67                    100.0                                    100.0             407.970186        False      0.1   0.01
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11661458015441895  s
EQ test took  0.0006535053253173828  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12273097038269043  s
EQ test took  0.03803229331970215  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ba']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x1
Learning formula with depth 0
learned LTL formula: b
Learning took:  0.14950323104858398  s
EQ test took  0.018557310104370117  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ba']


negative traces---> 
['', 'b']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x0)
Learning formula with depth 1
learned LTL formula: (X a)
Learning took:  0.1765279769897461  s
EQ test took  0.02716827392578125  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b']



3  iteration complete



start formula depth: 2
Before normalization: (F x0)
Learning formula with depth 1
learned LTL formula: (F a)
Learning took:  0.18663620948791504  s
EQ test took  0.22977137565612793  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b', 'a']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (! x2))
Learning formula with depth 2
learned LTL formula: (X (~ c))
Learning took:  0.28469252586364746  s
EQ test took  0.03987860679626465  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a']



5  iteration complete



start formula depth: 3
Before normalization: (X (x2 -> x2))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.28846240043640137  s
EQ test took  0.12964487075805664  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc']



6  iteration complete



start formula depth: 3
increasing formula depth to  4
Before normalization: (X (x2 U (! x2)))
Learning formula with depth 3
learned LTL formula: (X (c U (~ c)))
Learning took:  0.6341736316680908  s
No positive counterexample found
EQ test took  0.20170950889587402  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc', 'cb']



7  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (((x0 -> x0) U x0) & (X (x0 -> x0)))
Learning formula with depth 2
learned LTL formula: ((X true) & (F a))
Learning took:  1.207787036895752  s
No positive counterexample found
EQ test took  0.3322460651397705  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc', 'cb', 'ca']



8  iteration complete



start formula depth: 5
Before normalization: ((x1 U x0) & (F x1))
Learning formula with depth 2
learned LTL formula: ((b U a) & (F b))
Learning took:  1.0365386009216309  s
EQ test took  0.34531521797180176  s
new counterexample: bca  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb', 'bca']


negative traces---> 
['', 'b', 'a', 'cc', 'cb', 'ca']



9  iteration complete



start formula depth: 5
Before normalization: ((X ((! x2) | x2)) & (! x2))
Learning formula with depth 4
learned LTL formula: ((~ c) & (X (c | (~ c))))
Learning took:  1.0685818195343018  s
EQ test took  0.04273366928100586  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb', 'bca']


negative traces---> 
['', 'b', 'a', 'cc', 'cb', 'ca', 'ac']



10  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (F x0))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  1.1703522205352783  s
EQ test took  0.6829490661621094  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: F(b)
final ltl:  ((F a) & (F b))

Time taken to extract ltl: 8.547154188156128
Interrupted due to time limit
overall guided extraction time took: 400.8900000000003
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bab', 0.010000000000218279)
('a', 0.07999999999992724)
('ca', 0.0999999999994543)
('aa', 0.11999999999989086)
('ac', 0.14000000000032742)
('caa', 0.15999999999985448)
('cca', 0.18999999999959982)
('acc', 0.21000000000003638)
('aca', 0.22999999999956344)
('aaa', 0.27000000000043656)
('aac', 0.2999999999992724)
('cac', 0.2899999999999636)
('caaa', 0.31999999999970896)
('acac', 0.33000000000083674)
('ccaa', 0.3600000000005821)
('aaac', 0.3900000000003274)
('caca', 0.4099999999998545)
('ccac', 0.43000000000029104)
('ccca', 0.46999999999934516)
('accc', 0.48000000000047294)
('acaa', 0.4899999999997817)
('acca', 0.5100000000002183)
('caac', 0.5399999999999636)
('cacc', 0.5600000000004002)
('aaaa', 0.569999999999709)
('aaca', 0.6099999999996726)
('aacc', 0.6199999999998909)
('caaaa', 0.6099999999996726)
('aaccc', 0.6300000000001091)
('caacc', 0.6599999999998545)
('cacca', 0.7200000000002547)
('cccaa', 0.7299999999995634)
('cacaa', 0.7299999999995634)
('ccaaa', 0.7600000000002183)
('aaacc', 0.7599999999993088)
('ccaac', 0.819999999999709)
('acacc', 0.8299999999999272)
('acaac', 0.8699999999998909)
('cccca', 0.8799999999991996)
('accaa', 0.8600000000005821)
('aacca', 0.9200000000000728)
('aacaa', 0.9200000000000728)
('ccacc', 0.9400000000005093)
('acaca', 0.9600000000000364)
('aaaca', 1.0200000000004366)
('caccc', 1.0399999999999636)
('acaaa', 1.050000000000182)
('aaaaa', 1.069999999999709)
('accca', 1.089999999999236)
('ccaca', 1.1599999999998545)
('cacac', 1.1199999999998909)
('aaaac', 1.1499999999996362)
('caaca', 1.1700000000000728)
('acccc', 1.160000000000764)
('cccac', 1.2100000000000364)
('aacac', 1.2299999999995634)
('accac', 1.25)
('ccacac', 1.2899999999999636)
('caaac', 1.2600000000002183)
('cccaac', 1.2899999999999636)
('accaca', 1.3499999999994543)
('aacacc', 1.3599999999996726)
('caccaa', 1.3900000000003274)
('caccca', 1.4000000000005457)
('cccaaa', 1.4099999999998545)
('accaac', 1.4399999999995998)
('caacca', 1.4700000000002547)
('acacaa', 1.4500000000007276)
('acaccc', 1.5)
('ccccca', 1.5399999999999636)
('ccaaac', 1.5799999999999272)
('aacccc', 1.5799999999999272)
('caaaca', 1.6000000000003638)
('aaccca', 1.6599999999998545)
('aaacac', 1.6599999999998545)
('acaacc', 1.6499999999996362)
('ccaaaa', 1.6900000000005093)
('caacaa', 1.6700000000000728)
('aaaacc', 1.7200000000002547)
('acacac', 1.7399999999997817)
('aaacaa', 1.800000000000182)
('aaaccc', 1.8200000000006185)
('caaaac', 1.8300000000008367)
('cacaac', 1.8400000000001455)
('acaaca', 1.8400000000001455)
('caaacc', 1.910000000000764)
('ccaaca', 1.9700000000002547)
('caaaaa', 1.9099999999998545)
('ccacca', 1.9799999999995634)
('caacac', 1.980000000000473)
('acccca', 2.0100000000002183)
('aaccaa', 2.0100000000002183)
('cccacc', 2.0299999999997453)
('ccaacc', 2.0799999999999272)
('cacaaa', 2.050000000000182)
('ccacaa', 2.1099999999996726)
('caaccc', 2.100000000000364)
('acccac', 2.130000000000109)
('aaaaca', 2.0900000000001455)
('cacacc', 2.119999999999891)
('cacccc', 2.1500000000005457)
('acaaac', 2.1799999999993815)
('aaacca', 2.1799999999993815)
('aaccac', 2.1900000000005093)
('accccc', 2.2899999999999636)
('aacaac', 2.2600000000002183)
('aacaca', 2.269999999999527)
('accacc', 2.2600000000002183)
('aaaaaa', 2.300000000000182)
('aaaaac', 2.3400000000001455)
('aacaaa', 2.3400000000001455)
('ccccaa', 2.3499999999994543)
('acaaaa', 2.3700000000008004)
('acacca', 2.380000000000109)
('caccac', 2.449999999999818)
('cccaca', 2.4899999999997817)
('acccaa', 2.5100000000002183)
('ccccac', 2.5100000000002183)
('ccaccc', 2.5299999999997453)
('accaaa', 2.589999999999236)
('cacaca', 2.649999999999636)
('aaccaca', 2.6400000000003274)
('caacccc', 2.6099999999996726)
('aacccca', 2.619999999999891)
('acccaaa', 2.649999999999636)
('caacacc', 2.6899999999996)
('caaccca', 2.699999999999818)
('ccccaca', 2.6400000000003274)
('aaacaac', 2.7200000000002547)
('cacaaaa', 2.75)
('caacaca', 2.7100000000000364)
('aacaaac', 2.8099999999994907)
('aaccaaa', 2.8499999999994543)
('cacccca', 2.7899999999999636)
('aaacaca', 2.8099999999994907)
('accacac', 2.8499999999994543)
('ccacacc', 2.899999999999636)
('caaaaca', 2.869999999999891)
('caacaac', 2.9099999999998545)
('ccaaaac', 2.9400000000005093)
('aaacccc', 2.9899999999997817)
('accacca', 3.030000000000655)
('cacacca', 3.0499999999992724)
('cccacca', 3.1599999999998545)
('aacacca', 3.1700000000000728)
('accacaa', 3.180000000000291)
('aacaacc', 3.180000000000291)
('aaaaaca', 3.2100000000000364)
('aacaaaa', 3.209999999999127)
('ccccaac', 3.2899999999999636)
('caccaca', 3.3099999999994907)
('cccacac', 3.3299999999999272)
('accaaac', 3.360000000000582)
('caaacca', 3.3499999999994543)
('ccaaaca', 3.380000000000109)
('ccaccac', 3.380000000000109)
('ccaccaa', 3.369999999999891)
('cccccca', 3.4400000000005093)
('aaacaaa', 3.449999999999818)
('aaaacca', 3.4600000000000364)
('cccccaa', 3.4700000000002547)
('cacaaca', 3.5299999999997453)
('acccaca', 3.5399999999999636)
('caaccac', 3.569999999999709)
('cacaacc', 3.600000000000364)
('cccaccc', 3.5900000000001455)
('acacccc', 3.630000000000109)
('accaacc', 3.680000000000291)
('aaaaccc', 3.7200000000002547)
('acaacca', 3.7100000000000364)
('cccacaa', 3.6700000000000728)
('acaccac', 3.7799999999997453)
('caaaacc', 3.7899999999999636)
('cccaaaa', 3.8299999999999272)
('acccaac', 3.819999999999709)
('aaaaaaa', 3.7899999999999636)
('cccaaca', 3.8400000000001455)
('acacaca', 3.9099999999998545)
('ccccacc', 3.9200000000000728)
('caaacac', 3.9600000000000364)
('ccacaaa', 4.010000000000218)
('caaacaa', 3.880000000000109)
('acaaaca', 3.9400000000005093)
('aaacacc', 3.949999999999818)
('aacacaa', 3.9799999999995634)
('aaccacc', 4.0900000000001455)
('ccacaca', 4.0900000000001455)
('acccccc', 4.080000000000837)
('aacaaca', 4.119999999999891)

Time taken to extract lstar-dfa: 400.8439688682556
number of states of the dfa: 197
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'caaaa', 'b': 'ba', 'c': 'caaac'}, 'acaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'aaccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'ba', 'c': 'caccc'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccacc'}, 'caaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'aacaca', 'b': 'ba', 'c': 'aacacc'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccaaaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aacacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'aaccaa', 'b': 'ba', 'c': 'aaccac'}, 'accacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'acacac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acacc': {'a': 'acacca', 'b': 'ba', 'c': 'acaccc'}, 'aaaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'ba', 'c': 'cccac'}, 'caaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'caaca', 'b': 'ba', 'c': 'caacc'}, 'accccc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'acccaa', 'b': 'ba', 'c': 'acccac'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'accaaa', 'b': 'ba', 'c': 'accaac'}, 'caacaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'caacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accc': {'a': 'accca', 'b': 'ba', 'c': 'acccc'}, 'acaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'aaaaaa', 'b': 'ba', 'c': 'aaaaac'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'caccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'cccacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccc': {'a': 'cccca', 'b': 'b', 'c': 'ccccc'}, 'aacaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaac': {'a': 'caaaca', 'b': 'ba', 'c': 'caaacc'}, 'ccaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaca': {'a': 'caacaa', 'b': 'ba', 'c': 'caacac'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'acacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'cacaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccacc': {'a': 'ccacca', 'b': 'ba', 'c': 'acaccac'}, 'acccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'aacaaa', 'b': 'ba', 'c': 'aacaac'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'aaaa': {'a': 'aaaaa', 'b': 'ba', 'c': 'aaaac'}, 'caacc': {'a': 'caacca', 'b': 'ba', 'c': 'caaccc'}, 'cccccc': {'a': 'acaccac', 'b': 'b', 'c': 'b'}, 'accaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccaa': {'a': 'ccaaa', 'b': 'ba', 'c': 'ccaac'}, 'caaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'acaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'aaacaa', 'b': 'ba', 'c': 'aaacac'}, 'ccaaa': {'a': 'ccaaaa', 'b': 'ba', 'c': 'ccaaac'}, 'acccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'ba', 'c': 'aaacc'}, 'acccaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'acacca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aacccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccacc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cacca': {'a': 'acaccac', 'b': 'ba', 'c': 'caccac'}, 'ccaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bab': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'acaccac', 'b': 'ba', 'c': 'aaaccc'}, 'caccac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'accaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'acaaa', 'b': 'ba', 'c': 'acaac'}, 'aaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'aacccc'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'cccaa': {'a': 'cccaaa', 'b': 'ba', 'c': 'cccaac'}, 'caaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'ccacaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'ba', 'c': 'aaccc'}, 'ccaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'acaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaaac'}, 'cacaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'aacaa', 'b': 'ba', 'c': 'aacac'}, 'cacaa': {'a': 'cacaaa', 'b': 'ba', 'c': 'cacaac'}, 'caaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccc': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'accaaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaacaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'caacac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caca': {'a': 'cacaa', 'b': 'ba', 'c': 'cacac'}, 'acaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'ccacaa', 'b': 'ba', 'c': 'ccacac'}, 'ccccac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'accaac': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaccaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'acccc': {'a': 'acaccac', 'b': 'ba', 'c': 'accccc'}, 'ccacca': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aacaca': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'caacca': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'aaaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cccacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccc': {'a': 'ccccca', 'b': 'b', 'c': 'cccccc'}, 'caaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'caaaac'}, 'aacccc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'ccaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'acaccac', 'b': 'ba', 'c': 'cacccc'}, 'caacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'cccaca', 'b': 'ba', 'c': 'cccacc'}, 'aaccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'acaccac', 'b': 'ba', 'c': 'aaaacc'}, 'acccac': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaacac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'cccaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccc': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'caaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaacc'}, 'acaca': {'a': 'acaccac', 'b': 'ba', 'c': 'acacac'}, 'acca': {'a': 'accaa', 'b': 'ba', 'c': 'accac'}, 'accacc': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'aaccac': {'a': 'acaccac', 'b': 'ba', 'c': 'acaccac'}, 'aaacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ba', 'c': 'acacc'}, 'accac': {'a': 'accaca', 'b': 'ba', 'c': 'accacc'}, 'aaaaaa': {'a': 'acaccac', 'b': 'ba', 'c': 'ba'}, 'cacac': {'a': 'acaccac', 'b': 'ba', 'c': 'cacacc'}, 'ccacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaa': {'a': 'ba', 'b': 'ba', 'c': 'acaccac'}, 'cccca': {'a': 'ccccaa', 'b': 'ba', 'c': 'ccccac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon                             counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F a) & (F b))   True          100.0      100.0              100.0                              100.0         8.547154          None            None  [, ba, b, ab, a, acb, cc, cb, ca, bca, ac]          0         0         2          197                    100.0                                    100.0             400.843969        False     0.05    0.1
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11758208274841309  s
EQ test took  0.0006337165832519531  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1317310333251953  s
EQ test took  0.04232311248779297  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ba']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x1
Learning formula with depth 0
learned LTL formula: b
Learning took:  0.1383676528930664  s
EQ test took  0.026766061782836914  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ba']


negative traces---> 
['', 'b']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x0)
Learning formula with depth 1
learned LTL formula: (X a)
Learning took:  0.1813819408416748  s
EQ test took  0.032343149185180664  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b']



3  iteration complete



start formula depth: 2
Before normalization: (F x0)
Learning formula with depth 1
learned LTL formula: (F a)
Learning took:  0.1684584617614746  s
EQ test took  0.20608282089233398  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b', 'a']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (! x2))
Learning formula with depth 2
learned LTL formula: (X (~ c))
Learning took:  0.272080659866333  s
EQ test took  0.042244911193847656  s
new counterexample: bca  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'bca']


negative traces---> 
['', 'b', 'a']



5  iteration complete



start formula depth: 3
Before normalization: (X (x2 -> x2))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.26787495613098145  s
EQ test took  0.1555778980255127  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'bca']


negative traces---> 
['', 'b', 'a', 'ca']



6  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: ((X (x1 -> x1)) & (F x1))
Learning formula with depth 2
learned LTL formula: ((X true) & (F b))
Learning took:  1.130650520324707  s
No positive counterexample found
EQ test took  0.35437941551208496  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'bca']


negative traces---> 
['', 'b', 'a', 'ca', 'bc']



7  iteration complete



start formula depth: 5
Before normalization: ((! x2) & (F (X (! x2))))
Learning formula with depth 4
learned LTL formula: ((~ c) & (F (X (~ c))))
Learning took:  0.77667236328125  s
EQ test took  0.04823470115661621  s
new counterexample: cba  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'bca', 'cba']


negative traces---> 
['', 'b', 'a', 'ca', 'bc']



8  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (F x0))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  0.944772481918335  s
EQ test took  0.6364541053771973  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: F(b)
final ltl:  ((F a) & (F b))

Time taken to extract ltl: 5.69156813621521
Interrupted due to time limit
overall guided extraction time took: 405.89999999999964
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bac', 0.010000000000218279)
('a', 0.16000000000076398)
('aa', 0.23999999999978172)
('ac', 0.25)
('ca', 0.3400000000001455)
('aaa', 0.3500000000003638)
('aac', 0.38000000000010914)
('caa', 0.4400000000005093)
('cac', 0.5)
('aca', 0.5299999999997453)
('acc', 0.5900000000001455)
('cca', 0.5799999999999272)
('caac', 0.6599999999998545)
('accc', 0.7100000000000364)
('aacc', 0.7600000000002183)
('caaa', 0.7199999999993452)
('ccaa', 0.819999999999709)
('acac', 0.8600000000005821)
('caca', 0.8800000000001091)
('cacc', 0.9399999999995998)
('aaaa', 0.9400000000005093)
('acca', 1.0399999999999636)
('acaa', 1.0799999999999272)
('aaac', 1.1199999999998909)
('ccca', 1.1599999999998545)
('ccac', 1.2200000000002547)
('aaca', 1.230000000000473)
('aaaac', 1.2899999999999636)
('ccaca', 1.3200000000006185)
('acccc', 1.3900000000003274)
('caaaa', 1.4099999999998545)
('caaac', 1.4299999999993815)
('ccaac', 1.4899999999997817)
('cccaa', 1.5399999999999636)
('caccc', 1.5299999999997453)
('accac', 1.6199999999998909)
('aaacc', 1.5999999999994543)
('aacca', 1.680000000000291)
('cacaa', 1.680000000000291)
('ccaaa', 1.769999999999527)
('acacc', 1.8900000000003274)
('caaca', 1.9000000000005457)
('acaac', 1.9400000000005093)
('cccac', 1.9700000000002547)
('aaaca', 1.9699999999993452)
('aaaaa', 2.050000000000182)
('cacca', 2.1099999999996726)
('accca', 2.199999999999818)
('aacaa', 2.1899999999996)
('acaca', 2.2399999999997817)
('cacac', 2.300000000000182)
('accaa', 2.350000000000364)
('caacc', 2.410000000000764)
('aacac', 2.4200000000000728)
('cccca', 2.5)
('acaaa', 2.519999999999527)
('aaccc', 2.5)
('ccacc', 2.569999999999709)
('caccac', 2.6599999999998545)
('ccaccc', 2.6900000000005093)
('accaac', 2.7299999999995634)
('caaacc', 2.7899999999999636)
('cccaaa', 2.8299999999999272)
('ccacca', 2.8599999999996726)
('aaacac', 2.9500000000007276)
('caccca', 2.9700000000002547)
('cacaca', 2.9600000000000364)
('ccacac', 3.0100000000002183)
('aaaaca', 3.0799999999999272)
('aaccca', 3.0599999999994907)
('caaaac', 3.160000000000764)
('acacac', 3.2200000000002547)
('acacca', 3.2100000000000364)
('ccaaca', 3.2899999999999636)
('accacc', 3.3200000000006185)
('cacaac', 3.4200000000000728)
('acaaac', 3.3900000000003274)
('ccccaa', 3.4200000000000728)
('acaccc', 3.4899999999997817)
('aacccc', 3.5799999999999272)
('acaaca', 3.5999999999994543)
('caacca', 3.5599999999994907)
('acccaa', 3.6900000000005093)
('aaaccc', 3.6899999999996)
('aaaacc', 3.649999999999636)
('accaca', 3.6599999999998545)
('aaccaa', 3.740000000000691)
('accaaa', 3.7200000000002547)
('cacaaa', 3.7799999999997453)
('aaaaaa', 3.860000000000582)
('aacaac', 3.8499999999994543)
('cccacc', 4.039999999999964)
('acccac', 4.0900000000001455)
('caacaa', 4.149999999999636)
('acacaa', 4.199999999999818)
('cccaac', 4.079999999999927)
('ccaaac', 4.140000000000327)
('caacac', 4.25)
('caaaaa', 4.180000000000291)
('aacaca', 4.260000000000218)
('cacccc', 4.25)
('acccca', 4.319999999999709)
('cacacc', 4.399999999999636)
('aaaaac', 4.399999999999636)
('aacaaa', 4.460000000000036)
('aacacc', 4.420000000000073)
('accccc', 4.649999999999636)
('acaacc', 4.610000000000582)
('caaccc', 4.699999999999818)
('cccaca', 4.780000000000655)
('aaacaa', 4.880000000000109)
('caccaa', 4.829999999999927)
('ccacaa', 4.899999999999636)
('aaccac', 4.949999999999818)
('ccaaaa', 4.910000000000764)
('acaaaa', 5.0)
('ccccac', 5.039999999999964)
('ccccca', 4.980000000000473)
('aaacca', 5.219999999999345)
('caaaca', 5.199999999999818)
('ccaacc', 5.25)
('caaccaa', 5.150000000000546)
('caaccca', 5.270000000000437)
('cacaaca', 5.259999999999309)
('caccacc', 5.4099999999998545)
('cacacac', 5.350000000000364)
('ccacacc', 5.4399999999996)
('aacacaa', 5.519999999999527)
('aacaccc', 5.559999999999491)
('acaccaa', 5.680000000000291)
('ccaaccc', 5.559999999999491)
('aacaaac', 5.699999999999818)
('caccaaa', 5.6599999999998545)
('aaaccaa', 5.729999999999563)
('ccacaaa', 5.839999999999236)

Time taken to extract lstar-dfa: 405.8552393913269
number of states of the dfa: 142
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'caaa': {'a': 'caaaa', 'b': 'ba', 'c': 'caaac'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'cccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'cacca', 'b': 'ba', 'c': 'caccc'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccacc'}, 'aacac': {'a': 'aacaca', 'b': 'ba', 'c': 'aacacc'}, 'acacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacac': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'ccaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'acacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'cccaac', 'b': 'ba', 'c': 'ccaacc'}, 'acacc': {'a': 'acacca', 'b': 'ba', 'c': 'cccaac'}, 'aaaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'cccaa', 'b': 'ba', 'c': 'cccac'}, 'caaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caac': {'a': 'caaca', 'b': 'ba', 'c': 'caacc'}, 'accccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'caacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'accca', 'b': 'ba', 'c': 'acccc'}, 'acaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'bac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'caccaa': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'ccaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'caaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccc': {'a': 'cccca', 'b': 'b', 'c': 'ccccc'}, 'caaac': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'ccaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'ccaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'cacaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacc': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'acccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'aacaaa', 'b': 'ba', 'c': 'cccaac'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'aaaa': {'a': 'aaaaa', 'b': 'ba', 'c': 'aaaac'}, 'caacc': {'a': 'caacca', 'b': 'ba', 'c': 'caaccc'}, 'cacaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaa': {'a': 'ccaaa', 'b': 'ba', 'c': 'ccaac'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'acaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'ccaaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'aaaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'aaaca', 'b': 'ba', 'c': 'aaacc'}, 'acccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacaca': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'cccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'acacca': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'cccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacca': {'a': 'caccaa', 'b': 'ba', 'c': 'caccac'}, 'ccaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacc': {'a': 'aaacca', 'b': 'ba', 'c': 'cccaac'}, 'caccac': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'acaa': {'a': 'acaaa', 'b': 'ba', 'c': 'acaac'}, 'cccaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'aaccc': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'caaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacc': {'a': 'aacca', 'b': 'ba', 'c': 'aaccc'}, 'ccaacc': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'aaccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'cacacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'cacaac': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'aaacca': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'aacaa', 'b': 'ba', 'c': 'aacac'}, 'cacaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cacaac'}, 'caaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaaa': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'caacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacacc': {'a': 'ba', 'b': 'ba', 'c': 'cccaac'}, 'caca': {'a': 'cacaa', 'b': 'ba', 'c': 'cacac'}, 'acaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaca': {'a': 'cccaac', 'b': 'ba', 'c': 'ccacac'}, 'ccccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'ccacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaca': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'caacca': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'aaaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccc': {'a': 'cccaac', 'b': 'b', 'c': 'b'}, 'caaaa': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'aacccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'caccaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'aaaac': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'acccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caaccc': {'a': 'cccaac', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'acaca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'acca': {'a': 'accaa', 'b': 'ba', 'c': 'accac'}, 'accacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acac': {'a': 'acaca', 'b': 'ba', 'c': 'acacc'}, 'accac': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}, 'aaaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacac': {'a': 'cacaca', 'b': 'ba', 'c': 'cccaac'}, 'ccacacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccca': {'a': 'cccaac', 'b': 'ba', 'c': 'cccaac'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon                     counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F a) & (F b))   True          100.0      100.0              100.0                              100.0         5.691568          None            None  [, ba, b, ab, a, bca, ca, bc, cba]          0         0         2          142                    100.0                                    100.0             405.855239        False     0.05   0.05
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11370468139648438  s
EQ test took  0.0006496906280517578  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1250166893005371  s
EQ test took  0.05552411079406738  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ba']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x1
Learning formula with depth 0
learned LTL formula: b
Learning took:  0.13918662071228027  s
EQ test took  0.025715112686157227  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ba']


negative traces---> 
['', 'b']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x0)
Learning formula with depth 1
learned LTL formula: (X a)
Learning took:  0.1780071258544922  s
EQ test took  0.030251026153564453  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b']



3  iteration complete



start formula depth: 2
Before normalization: (F x0)
Learning formula with depth 1
learned LTL formula: (F a)
Learning took:  0.1833651065826416  s
EQ test took  0.30173325538635254  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b', 'a']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (! x2))
Learning formula with depth 2
learned LTL formula: (X (~ c))
Learning took:  0.2779252529144287  s
EQ test took  0.04276680946350098  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a']



5  iteration complete



start formula depth: 3
Before normalization: (X (x2 -> x2))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.2848212718963623  s
EQ test took  0.15578961372375488  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc']



6  iteration complete



start formula depth: 3
increasing formula depth to  4
Before normalization: (X (x2 U (! x2)))
Learning formula with depth 3
learned LTL formula: (X (c U (~ c)))
Learning took:  0.6193668842315674  s
No positive counterexample found
EQ test took  0.25365400314331055  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc', 'cb']



7  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (((x0 -> x0) U x0) & (X (x0 -> x0)))
Learning formula with depth 2
learned LTL formula: ((X true) & (F a))
Learning took:  1.1800386905670166  s
No positive counterexample found
EQ test took  0.4115743637084961  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cc', 'cb', 'ac']



8  iteration complete



start formula depth: 5
Before normalization: ((F x1) & ((F x1) U x0))
Learning formula with depth 3
learned LTL formula: ((F b) & ((F b) U a))
Learning took:  0.9457347393035889  s
EQ test took  0.5782582759857178  s
new counterexample: bca  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb', 'bca']


negative traces---> 
['', 'b', 'a', 'cc', 'cb', 'ac']



9  iteration complete



start formula depth: 5
Before normalization: ((F x0) & (F x1))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  1.3397326469421387  s
EQ test took  0.7651464939117432  s


epsilon= 0.05 delta= 0.01 max_trace_length= 50
query: F(b)
final ltl:  ((F a) & (F b))

Time taken to extract ltl: 8.0228750705719
Interrupted due to time limit
overall guided extraction time took: 400.4499999999998
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('bac', 0.0999999999994543)
('a', 1.0399999999999636)
('ac', 1.480000000000473)
('aa', 1.6900000000005093)
('ca', 1.949999999999818)
('aaa', 2.139999999999418)
('cca', 2.3100000000004)
('acc', 2.5900000000001455)
('cac', 2.780000000000655)
('caa', 3.0499999999992724)
('aca', 3.2200000000002547)
('aac', 3.399999999999636)
('ccac', 3.649999999999636)
('accc', 3.9200000000000728)
('caaa', 4.130000000000109)
('caac', 4.380000000000109)
('aaac', 4.420000000000073)
('acaa', 4.649999999999636)
('caca', 4.930000000000291)
('ccaa', 5.299999999999272)
('ccca', 5.4099999999998545)
('cacc', 5.690000000000509)
('aacc', 5.8799999999992)
('acac', 6.119999999999891)
('aaca', 6.350000000000364)
('acca', 6.449999999999818)
('aaaa', 6.859999999999673)
('cccaa', 7.0)
('aacca', 7.269999999999527)
('accca', 7.529999999999745)
('aacaa', 7.630000000000109)
('caaca', 7.830000000000837)
('cccac', 8.010000000000218)
('aaacc', 8.220000000000255)
('aaaca', 8.450000000000728)
('cacaa', 8.539999999999964)
('acaaa', 8.760000000000218)
('aaaaa', 9.039999999999964)
('acacc', 9.160000000000764)
('acaac', 9.409999999999854)
('accac', 9.6899999999996)
('ccaac', 9.88000000000011)
('ccaca', 9.920000000000073)
('acccc', 10.05999999999949)
('cccca', 10.210000000000036)
('aaccc', 10.519999999999527)
('caacc', 10.680000000000291)
('aacac', 10.840000000000146)
('cacca', 11.220000000000255)
('acaca', 11.289999999999964)
('caccc', 11.409999999999854)
('ccacc', 11.640000000000327)
('aaaac', 11.980000000000473)
('caaac', 12.070000000000618)
('accaa', 12.359999999999673)
('cacac', 12.61999999999989)
('caaaa', 12.779999999999745)

Time taken to extract lstar-dfa: 400.4086923599243
number of states of the dfa: 63
returned flag: False
transitions:->
{'': {'a': 'a', 'b': 'b', 'c': 'c'}, 'ac': {'a': 'aca', 'b': 'ba', 'c': 'acc'}, 'aaa': {'a': 'aaaa', 'b': 'ba', 'c': 'aaac'}, 'caaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaca'}, 'ccaa': {'a': 'ba', 'b': 'ba', 'c': 'ccaca'}, 'caca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caa': {'a': 'caaa', 'b': 'ba', 'c': 'caac'}, 'aac': {'a': 'aaca', 'b': 'ba', 'c': 'aacc'}, 'ccaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cacc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'cccc': {'a': 'ccaca', 'b': 'b', 'c': 'b'}, 'ccac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'a': {'a': 'aa', 'b': 'ba', 'c': 'ac'}, 'b': {'a': 'ba', 'b': 'b', 'c': 'b'}, 'ccc': {'a': 'ccca', 'b': 'b', 'c': 'cccc'}, 'cacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ca': {'a': 'caa', 'b': 'ba', 'c': 'cac'}, 'c': {'a': 'ca', 'b': 'b', 'c': 'cc'}, 'aacca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'caccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cac': {'a': 'caca', 'b': 'ba', 'c': 'cacc'}, 'aaacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cccac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'cccaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aca': {'a': 'acaa', 'b': 'ba', 'c': 'acac'}, 'aaccc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ccca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aacc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'ccacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'ba': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cc': {'a': 'cca', 'b': 'b', 'c': 'ccc'}, 'accaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acaca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'cca': {'a': 'ccaa', 'b': 'ba', 'c': 'ccac'}, 'acca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aaaa': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'caacc': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aaca': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'cacaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accc': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'acac': {'a': 'ccaca', 'b': 'ba', 'c': 'ccaca'}, 'aaaaa': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'accac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'bac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'aa': {'a': 'aaa', 'b': 'ba', 'c': 'aac'}, 'cacac': {'a': 'ba', 'b': 'ba', 'c': 'ba'}, 'acc': {'a': 'acca', 'b': 'ba', 'c': 'accc'}, 'cccca': {'a': 'ba', 'b': 'ba', 'c': 'ba'}}
Explanation matches RNN: 100.0
RNN matches ground truth: 100.0
Explanation matches ground truth: 100.0
Lstar matches RNN: 100.0
Lstar matches ground truth: 100.0
target query      explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time revised delta revised epsilon                         counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
 F(a)  F(b)  ((F a) & (F b))   True          100.0      100.0              100.0                              100.0         8.022875          None            None  [, ba, b, ab, a, acb, cc, cb, ac, bca]          0         0         2           63                    100.0                                    100.0             400.408692        False     0.05   0.01
target: F(a)
query: F(b)


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11665630340576172  s
EQ test took  0.0006351470947265625  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10959672927856445  s
EQ test took  0.14971089363098145  s
new counterexample: ba  should be accepted by implementation


positive traces---> 
['ba']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
Before normalization: x1
Learning formula with depth 0
learned LTL formula: b
Learning took:  0.1483469009399414  s
EQ test took  0.06537675857543945  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ba']


negative traces---> 
['', 'b']



2  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (X x0)
Learning formula with depth 1
learned LTL formula: (X a)
Learning took:  0.17789149284362793  s
EQ test took  0.07956576347351074  s
new counterexample: ab  should be accepted by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b']



3  iteration complete



start formula depth: 2
Before normalization: (F x0)
Learning formula with depth 1
learned LTL formula: (F a)
Learning took:  0.17508363723754883  s
EQ test took  0.9484517574310303  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ba', 'ab']


negative traces---> 
['', 'b', 'a']



4  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (X (! x2))
Learning formula with depth 2
learned LTL formula: (X (~ c))
Learning took:  0.26568102836608887  s
EQ test took  0.13561177253723145  s
new counterexample: acb  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a']



5  iteration complete



start formula depth: 3
Before normalization: (X (x2 -> x2))
Learning formula with depth 1
learned LTL formula: (X true)
Learning took:  0.2758445739746094  s
EQ test took  0.5731465816497803  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cb']



6  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (((! x0) U x0) & (((! x0) U x0) U (! x0)))
Learning formula with depth 3
learned LTL formula: ((F a) & ((F a) U (~ a)))
Learning took:  1.1201977729797363  s
No positive counterexample found
EQ test took  1.7262229919433594  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb']


negative traces---> 
['', 'b', 'a', 'cb', 'ca']



7  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (x1 U x0))
Learning formula with depth 2
learned LTL formula: ((b U a) & (F b))
Learning took:  0.8930797576904297  s
EQ test took  1.539309024810791  s
new counterexample: cba  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb', 'cba']


negative traces---> 
['', 'b', 'a', 'cb', 'ca']



8  iteration complete



start formula depth: 5
Before normalization: ((F x1) & ((F x1) U x0))
Learning formula with depth 3
learned LTL formula: ((F b) & ((F b) U a))
Learning took:  1.1295554637908936  s
No negative counterexample found
EQ test took  2.54375958442688  s
new counterexample: bca  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb', 'cba', 'bca']


negative traces---> 
['', 'b', 'a', 'cb', 'ca']



9  iteration complete



start formula depth: 5
Before normalization: ((F x1) & (F x0))
Learning formula with depth 2
learned LTL formula: ((F a) & (F b))
Learning took:  1.034757137298584  s
EQ test took  3.192978858947754  s
new counterexample: cbcccbcccbcbbcbcbbcbcbcbccbca  should be rejected by implementation


positive traces---> 
['ba', 'ab', 'acb', 'cba', 'bca']


negative traces---> 
['', 'b', 'a', 'cb', 'ca', 'cbcccbcccbcbbcbcbbcbcbcbccbca']



10  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: ((X (! x2)) U ((! x2) & ((! x2) U (X (! x2)))))
Learning formula with depth 5
learned LTL formula: ((X (~ c)) U ((~ c) & ((~ c) U (X (~ c)))))
Learning took:  20.724241733551025  s
EQ test took  0.2887563705444336  s
new counterexample: ccab  should be accepted by implementation


positive traces---> 
['ba', 'ab', 'acb', 'cba', 'bca', 'ccab']


negative traces---> 
['', 'b', 'a', 'cb', 'ca', 'cbcccbcccbcbbcbcbbcbcbcbccbca']



11  iteration complete



