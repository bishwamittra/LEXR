made train set of size: 20189 , of which positive examples: 9532
out of  20189  sequences 9532  are positive. (percent:  0.4721382931299222 )
examples per length: [1, 3, 9, 27, 43, 77, 141, 277, 316, 299, 344, 380, 413, 465, 456, 380, 447, 461, 448, 485, 414, 466, 430, 486, 475, 454, 496, 445, 435, 502, 476, 468, 542, 466, 500, 534, 496, 485, 490, 436, 428, 472, 476, 527, 466, 464, 506, 462, 475, 441, 504]
size of train set: 18170
size of test set: 2019
The dy.parameter(...) call is now DEPRECATED.
        There is no longer need to explicitly add parameters to the computation graph.
        Any used parameter will be added automatically.
current average loss is:  0.0391823238454576
current average loss is:  0.018574504252332175
classification loss on last batch was: 5.562949387716477e-06
testing on train set, i.e. test set is train set
rnn score against target on test set:                              2019 (100.0)
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10271906852722168  s
EQ test took  0.0007367134094238281  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12225699424743652  s
EQ test took  0.027423858642578125  s


epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2565333843231201
overall guided extraction time took: 0.22000000000002728
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('arr', 0.009999999999990905)
('alar', 0.01999999999998181)
('aa', 0.01999999999998181)
('lr', 0.020000000000209184)
('alr', 0.029999999999972715)
('lra', 0.029999999999972715)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.20547056198120117
number of states of the dfa: 13
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'ar', 'a': 'a'}, 'lr': {'l': 'lrl', 'r': 'ar', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'ar', 'a': 'aa'}, 'l': {'l': 'ar', 'r': 'lr', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'ar', 'a': 'aa'}, 'ar': {'l': 'ar', 'r': 'ar', 'a': 'ar'}, 'alr': {'l': 'lrl', 'r': 'ar', 'a': 'aa'}, 'arr': {'l': 'ar', 'r': 'ar', 'a': 'ar'}, 'al': {'l': 'ar', 'r': 'aa', 'a': 'ala'}, 'alar': {'l': 'l', 'r': 'ar', 'a': 'aa'}, 'lra': {'l': 'lrl', 'r': 'ar', 'a': 'aa'}, 'ala': {'l': 'ar', 'r': 'alr', 'a': 'l'}, 'lrl': {'l': 'ar', 'r': 'aa', 'a': 'lrl'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.256533          None            None              []          0         0         0           13                    None                                    None               0.205471         True      0.5    0.5
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11092805862426758  s
EQ test took  0.0006978511810302734  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.10857582092285156  s
EQ test took  0.025540590286254883  s


epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.24973487854003906
overall guided extraction time took: 0.18000000000006366
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('aa', 0.0)
('lr', 0.009999999999990905)
('rra', 0.01999999999998181)
('lra', 0.049999999999954525)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.18709945678710938
number of states of the dfa: 10
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'lr': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'a': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'lral': {'l': 'lr', 'r': 'aa', 'a': 'lral'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'rra': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lra': {'l': 'lral', 'r': 'lr', 'a': 'aa'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.249735          None            None              []          0         0         0           10                    None                                    None               0.187099         True      0.5   0.25
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1124887466430664  s
EQ test took  0.0006623268127441406  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11461138725280762  s
EQ test took  0.032355546951293945  s


epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.26389575004577637
Interrupted due to time limit
overall guided extraction time took: 403.74
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.009999999999990905)
('rr', 0.009999999999990905)
('aa', 0.10999999999989996)
('lr', 0.14000000000010004)
('alr', 0.12999999999988177)
('lar', 0.18000000000006366)
('lra', 0.18000000000006366)
('alra', 0.20000000000004547)
('lrlr', 0.21000000000003638)
('laar', 0.2699999999999818)
('alar', 0.2699999999999818)
('lraa', 0.2999999999999545)
('lara', 0.30999999999994543)
('lralr', 0.3200000000001637)
('alaar', 0.33999999999991815)
('larlr', 0.3500000000001364)
('laara', 0.36999999999989086)
('alraa', 0.43000000000006366)
('lrlar', 0.38999999999987267)
('lrlra', 0.4299999999998363)
('laraa', 0.4500000000000455)
('alara', 0.4600000000000364)
('laaar', 0.4800000000000182)
('alarlr', 0.5)
('lraaa', 0.5099999999999909)
('alrlr', 0.5199999999999818)
('lralar', 0.5700000000001637)
('laaara', 0.5599999999999454)
('laaaar', 0.599999999999909)
('larlar', 0.599999999999909)
('alaaar', 0.6300000000001091)
('laaraa', 0.6399999999998727)
('lraalr', 0.6700000000000728)
('lraaaa', 0.7100000000000364)
('laaaara', 0.7100000000000364)
('alralr', 0.7200000000000273)
('lrlraa', 0.7599999999999909)
('laraaa', 0.75)
('lrlaar', 0.7699999999999818)
('alaraa', 0.8100000000001728)
('larlra', 0.7699999999999818)
('lrlara', 0.8199999999999363)
('alrlar', 0.8700000000001182)
('alrlra', 0.8699999999998909)
('alraaa', 0.900000000000091)
('alaara', 0.8599999999999)
('laralr', 0.9099999999998545)
('laarlr', 0.9100000000000819)
('lrlrlr', 0.9600000000000364)
('lralra', 1.0)
('lrlaraa', 0.9700000000000273)
('laralra', 1.0499999999999545)
('alaaara', 1.0199999999999818)
('alralra', 1.0299999999999727)
('alralar', 1.0699999999999363)
('lralara', 1.0900000000001455)
('laaarlr', 1.1099999999999)
('larlara', 1.1000000000001364)
('lraalar', 1.1300000000001091)
('alaralr', 1.1599999999998545)
('lrlarlr', 1.1199999999998909)
('alrlraa', 1.2100000000000364)
('laraaaa', 1.2100000000000364)
('lrlaara', 1.259999999999991)
('lrlraaa', 1.240000000000009)
('alrlrlr', 1.2399999999997817)
('laaaraa', 1.3299999999999272)
('larlaar', 1.3400000000001455)
('lraaaaa', 1.3399999999999181)
('laralar', 1.3600000000001273)
('laarlar', 1.3199999999999363)
('lrlralr', 1.3500000000001364)
('alrlaar', 1.3900000000001)
('alarlar', 1.4700000000000273)
('laarlra', 1.4200000000000728)
('laaraaa', 1.4400000000000546)
('alrlara', 1.4600000000000364)
('laaaaar', 1.3900000000001)
('alaaraa', 1.5399999999999636)
('lrlaaar', 1.5199999999999818)
('lralraa', 1.5799999999999272)
('alarlra', 1.5599999999999454)
('alaarlr', 1.5799999999999272)
('lrlrlra', 1.5800000000001546)
('lrlralar', 1.6199999999998909)
('lraaalr', 1.6099999999999)
('lralrlr', 1.6499999999998636)
('alraalr', 1.650000000000091)
('lrlrlar', 1.6900000000000546)
('alrlaaar', 1.6700000000000728)
('laaralr', 1.759999999999991)
('alaraaa', 1.7100000000000364)
('larlraa', 1.7899999999999636)
('alraaaa', 1.8199999999999363)
('alaaaar', 1.8099999999999454)
('lraalra', 1.7899999999999636)
('laraalr', 1.8300000000001546)
('larlrlr', 1.8599999999999)
('lrlaraaa', 1.8699999999998909)
('lraalrlr', 1.8999999999998636)
('larlaraa', 1.9099999999998545)
('laralraa', 1.9299999999998363)
('alarlara', 1.9500000000000455)
('lralaar', 1.9500000000000455)
('larlarlr', 2.0299999999999727)
('alrlrlar', 2.0)
('lralaara', 2.050000000000182)
('lrlraaaa', 2.0700000000001637)
('lrlaaaar', 2.0499999999999545)
('alrlralr', 2.0799999999999272)
('lralrlar', 2.099999999999909)
('laaraalr', 2.089999999999918)
('alraalra', 2.1699999999998454)
('laralara', 2.1800000000000637)
('lrlaaara', 2.1900000000000546)
('alaaarlr', 2.2199999999998)
('laraaaaa', 2.25)
('lralralr', 2.240000000000009)
('lrlralra', 2.2799999999999727)
('alaarlar', 2.269999999999982)
('lralrlra', 2.270000000000209)
('lrlaralr', 2.3199999999999363)
('laraalra', 2.3299999999999272)
('lraaaalr', 2.3299999999999272)
('alaaaaar', 2.4400000000000546)
('laaaraaa', 2.3199999999999363)
('larlraaa', 2.3700000000001182)
('alraaaaa', 2.4200000000000728)
('alaralar', 2.4400000000000546)
('alarlraa', 2.4600000000000364)
('laarlara', 2.4700000000000273)
('lraaalar', 2.5)
('alralrlr', 2.509999999999991)
('lrlraalr', 2.5699999999999363)
('larlrlra', 2.5399999999999636)
('alraalar', 2.5599999999999454)
('lrlrlraa', 2.5799999999999272)
('laarlrlr', 2.5699999999999363)
('alaarlra', 2.589999999999918)
('alaaaara', 2.6299999999998818)
('lraaaaaa', 2.730000000000018)
('laaaaraa', 2.6699999999998454)
('larlaara', 2.6700000000000728)
('alaraalr', 2.730000000000018)
('laaaralr', 2.7000000000000455)
('lrlaarlr', 2.769999999999982)
('lrlrlara', 2.7899999999999636)
('alarlrlr', 2.7799999999999727)
('alrlaara', 2.769999999999982)
('lrlarlra', 2.7999999999999545)
('lraaalra', 2.8299999999999272)
('larlaaar', 2.7799999999999727)
('alaaaraa', 2.8799999999998818)
('lralaraa', 2.9300000000000637)
('alaaraaa', 2.849999999999909)
('laralrlr', 2.9600000000000364)
('lrlarlar', 3.019999999999982)
('alrlraaa', 2.9700000000000273)
('laraalar', 3.0)
('laarlaar', 3.009999999999991)
('lraalaar', 3.0499999999999545)
('laaarlar', 3.040000000000191)
('laraaalr', 3.0499999999999545)
('laaaaaar', 3.0799999999999272)
('lralaaar', 3.1400000000001)
('alralaar', 3.0799999999999272)
('alraaalr', 3.1799999999998363)
('alaralra', 3.0900000000001455)
('lrlaaraa', 3.240000000000009)
('laaaaara', 3.1799999999998363)
('laarlraa', 3.2000000000000455)
('larlrlar', 3.25)
('lraalara', 3.269999999999982)
('laaarlra', 3.2799999999999727)
('alarlaar', 3.290000000000191)
('lraalraa', 3.2799999999999727)
('lrlrlaar', 3.3799999999998818)
('alaraaaa', 3.3900000000001)
('laaaarlr', 3.380000000000109)
('laaraaaa', 3.3599999999999)
('alrlaraa', 3.3600000000001273)
('laralaar', 3.369999999999891)
('alaaralr', 3.430000000000291)
('alralara', 3.4200000000000728)
('alrlarlr', 3.5100000000002183)
('lralraaa', 3.519999999999982)
('alarlaara', 3.5399999999999636)
('alralraa', 3.519999999999982)
('larlraaaa', 3.5700000000001637)
('laarlrlar', 3.6299999999996544)
('lralarlr', 3.549999999999727)
('laaralar', 3.6399999999998727)
('larlralr', 3.6099999999996726)
('laaralra', 3.5799999999999272)
('lrlrlaaar', 3.599999999999909)
('lrlrlrlr', 3.6700000000000728)
('lralralra', 3.5599999999999454)
('alraaalra', 3.7100000000000364)
('lrlrlaara', 3.6900000000000546)

Time taken to extract lstar-dfa: 403.7067654132843
number of states of the dfa: 299
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'alrlra': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraa'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'larala'}, 'lralraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alaaraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lraaalr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alr': {'l': 'alrl', 'r': 'rr', 'a': 'alra'}, 'alraaaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlarl': {'l': 'alr', 'r': 'lrlarlr', 'a': 'alraala'}, 'alar': {'l': 'alarl', 'r': 'l', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laarlrlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'laral', 'r': 'lraaalr', 'a': 'alraala'}, 'alaraa': {'l': 'alraala', 'r': 'alr', 'a': 'alaraaa'}, 'laaral': {'l': 'laral', 'r': 'laaralr', 'a': 'alraala'}, 'larlraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'alraaaaa'}, 'alaarlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaa': {'l': 'l', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'laarlrl', 'r': 'alr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaar': {'l': 'alraala', 'r': 'alr', 'a': 'alaaara'}, 'larlaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlaa': {'l': 'laral', 'r': 'alrlaar', 'a': 'alraala'}, 'laarlrlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lara': {'l': 'laral', 'r': 'l', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'l', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'l', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alralrlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lrlral': {'l': 'laral', 'r': 'lrlralr', 'a': 'alraala'}, 'lraalaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alraala': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lralaara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lralraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larl': {'l': 'l', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'alraala', 'r': 'alr', 'a': 'laaraaa'}, 'laraal': {'l': 'laral', 'r': 'laraalr', 'a': 'alraala'}, 'alaarla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laaaarlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaara': {'l': 'alraala', 'r': 'alr', 'a': 'laaaraa'}, 'laralar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alrlaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alraaal': {'l': 'alrlra', 'r': 'alraaalr', 'a': 'lrlrlrl'}, 'larlrlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'l', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alarlrlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraalar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laralaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laaralra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlral': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laraaaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laraaa': {'l': 'alraala', 'r': 'alr', 'a': 'laraaaa'}, 'larlra': {'l': 'alraala', 'r': 'alr', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lrlrlra'}, 'lraaala': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alraal': {'l': 'laral', 'r': 'alraalr', 'a': 'alraala'}, 'alaaaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lral': {'l': 'l', 'r': 'lralr', 'a': 'lrala'}, 'lralarlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'alar', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laralraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'larlrl': {'l': 'laral', 'r': 'larlrlr', 'a': 'alraala'}, 'alarlr': {'l': 'alraala', 'r': 'alar', 'a': 'alarlra'}, 'alraaa': {'l': 'alraaal', 'r': 'alr', 'a': 'alraaaa'}, 'alraalar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laarlara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlraaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlrlrl': {'l': 'alr', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lralara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lrlrl': {'l': 'l', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'alrlralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlralar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaaa': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alaralar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaralar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alral': {'l': 'alr', 'r': 'alralr', 'a': 'alrala'}, 'alrlr': {'l': 'alrlrl', 'r': 'alr', 'a': 'alrlra'}, 'lraala': {'l': 'alr', 'r': 'lraalar', 'a': 'alraala'}, 'alara': {'l': 'alaral', 'r': 'l', 'a': 'alaraa'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'lrlaaa': {'l': 'laral', 'r': 'lrlaaar', 'a': 'alraala'}, 'alrlaaa': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lralrl': {'l': 'laral', 'r': 'lralrlr', 'a': 'alraala'}, 'lraaaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laraalra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alralr': {'l': 'alraala', 'r': 'alr', 'a': 'alralra'}, 'alarla': {'l': 'laral', 'r': 'alarlar', 'a': 'alarlaa'}, 'lar': {'l': 'larl', 'r': 'rr', 'a': 'lara'}, 'lrlrlara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaarl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alraalr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alrlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lrlaralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaralr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laaarla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlrlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alaaaa': {'l': 'laral', 'r': 'alaaaar', 'a': 'alraala'}, 'laraalr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alrlrla': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alaara': {'l': 'alraala', 'r': 'alr', 'a': 'alaaraa'}, 'la': {'l': 'rr', 'r': 'lar', 'a': 'laa'}, 'lraalr': {'l': 'alraala', 'r': 'alr', 'a': 'lraalra'}, 'lralra': {'l': 'lralral', 'r': 'alr', 'a': 'lralraa'}, 'alarlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laaaaa': {'l': 'laral', 'r': 'laaaaar', 'a': 'alraala'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lraaaalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaralra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaarl': {'l': 'laral', 'r': 'alaarlr', 'a': 'alraala'}, 'alarlara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laarlrl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'alraala'}, 'laarl': {'l': 'alr', 'r': 'laarlr', 'a': 'laarla'}, 'larlaaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaaraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlaraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alraalra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaaal': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alraa': {'l': 'alraal', 'r': 'l', 'a': 'alraaa'}, 'alarl': {'l': 'alar', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lralaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaarlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlarl': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alaaaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaarlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralrlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlrlraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lrlrlaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'alraala'}, 'alrlarlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'larlr': {'l': 'larlrl', 'r': 'l', 'a': 'larlra'}, 'larlrlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alaaaa'}, 'alarlrl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laraaalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaral': {'l': 'alr', 'r': 'alaralr', 'a': 'alraala'}, 'laa': {'l': 'l', 'r': 'laar', 'a': 'laaa'}, 'alraaalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'alraaaaa'}, 'lrlrlrlrl': {'l': 'alrlra', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'alraaalra': {'l': 'lrlrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralrlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralrla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lraalaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lraalrlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlar': {'l': 'alraala', 'r': 'alr', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lrlrlaaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'lra'}, 'laraalar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laarlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lralaaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laaaaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlaa': {'l': 'alr', 'r': 'larlaar', 'a': 'alraala'}, 'laarala': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlrala': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlrla': {'l': 'laral', 'r': 'lrlrlar', 'a': 'lrlrlaa'}, 'alralara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'ala': {'l': 'l', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'alraala', 'r': 'alr', 'a': 'lraaaaa'}, 'alralraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lraalra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laar': {'l': 'laarl', 'r': 'l', 'a': 'laara'}, 'laralrl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlaar': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaara'}, 'alrlar': {'l': 'alraala', 'r': 'alr', 'a': 'alrlara'}, 'laaaral': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'larlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'alaarlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lrlarlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laraa': {'l': 'laraal', 'r': 'l', 'a': 'laraaa'}, 'alrlrl': {'l': 'alr', 'r': 'alraaaaa', 'a': 'alraala'}, 'lrlaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lraaalar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'aa': {'l': 'lrlrlrl', 'r': 'rr', 'a': 'aa'}, 'larlrla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alarlaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaarl': {'l': 'alr', 'r': 'laaarlr', 'a': 'alraala'}, 'lralralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'alraaaaa'}, 'laaarlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaral': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alarala': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laralara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlraal': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laralr': {'l': 'alraala', 'r': 'alr', 'a': 'laralra'}, 'lrlraa': {'l': 'alraala', 'r': 'alr', 'a': 'lrlraaa'}, 'lralral': {'l': 'alrlra', 'r': 'lralralr', 'a': 'lrlrlrl'}, 'laaaraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaar': {'l': 'alraala', 'r': 'alr', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'l', 'a': 'alaara'}, 'laarlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lraalara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaa': {'l': 'alr', 'r': 'laaaar', 'a': 'laaaaa'}, 'larlralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'laaraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'larlral': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlara': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaraa'}, 'larala': {'l': 'laral', 'r': 'laralar', 'a': 'alraala'}, 'lrlaraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralarl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrl': {'l': 'rr', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lralralra': {'l': 'lrlrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alaraalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlarla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alrala': {'l': 'alr', 'r': 'alralar', 'a': 'alraala'}, 'lrlar': {'l': 'lrlarl', 'r': 'l', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'larlaa'}, 'alralar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lralaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laarlaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlrlaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'lrlrlaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alarlaa': {'l': 'alrlra', 'r': 'alarlaar', 'a': 'lrlrlrl'}, 'alrlarl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaaaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'l', 'a': 'lralra'}, 'laarla': {'l': 'laral', 'r': 'laarlar', 'a': 'alraala'}, 'laraaal': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lraalrl': {'l': 'laral', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lra': {'l': 'lral', 'r': 'l', 'a': 'lraa'}, 'lralar': {'l': 'alraala', 'r': 'alr', 'a': 'lralara'}, 'lralaa': {'l': 'laral', 'r': 'lralaar', 'a': 'alraala'}, 'lralaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'larlraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'larlraaa'}, 'alrlara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'alrlrlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaarl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'lrlraaaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaraal': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alarlaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'alraaaaa'}, 'laarlaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alarlraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaarl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laraala': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'larlrlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'alraaaaa'}, 'alralrl': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'alaraal': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'alaaral': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laarlraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaaaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'larlarlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'l', 'a': 'lraaa'}, 'alra': {'l': 'alral', 'r': 'l', 'a': 'alraa'}, 'laarlrla': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laralrlr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaaaa': {'l': 'alrlra', 'r': 'alraaaaa', 'a': 'lrlrlrl'}, 'laaaralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'l', 'a': 'lrlra'}, 'lrlraalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlarlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaraaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laaraalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}, 'laaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alraaaaa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.263896          None            None              []          0         0         0          299                    None                                    None             403.706765        False      0.5    0.1
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11873126029968262  s
EQ test took  0.0006611347198486328  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12035346031188965  s
EQ test took  0.03710031509399414  s


epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2808692455291748
Interrupted due to time limit
overall guided extraction time took: 401.7999999999997
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.01999999999998181)
('aa', 0.03999999999996362)
('rr', 0.02999999999974534)
('lr', 0.2899999999999636)
('lra', 0.32999999999992724)
('lraa', 0.4099999999998545)
('lralr', 0.4699999999997999)
('alr', 0.4099999999998545)
('lar', 0.3900000000003274)
('lara', 0.5199999999999818)
('lrlr', 0.5599999999999454)
('laar', 0.5900000000001455)
('alra', 0.6399999999998727)
('alar', 0.6300000000001091)
('lraaa', 0.7100000000000364)
('laaar', 0.6999999999998181)
('lrlar', 0.75)
('laraa', 0.7999999999997272)
('alaar', 0.8599999999996726)
('alraa', 0.8699999999998909)
('alara', 0.930000000000291)
('laara', 0.9200000000000728)
('alrlr', 0.9900000000002365)
('lrlra', 1.0700000000001637)
('laaara', 1.099999999999909)
('larlr', 1.080000000000382)
('alraaa', 1.150000000000091)
('lralra', 1.2100000000000364)
('alarlr', 1.2300000000000182)
('laarlr', 1.25)
('lrlaar', 1.2999999999997272)
('laaraa', 1.3299999999999272)
('lrlraa', 1.3299999999999272)
('larlar', 1.4299999999998363)
('larlra', 1.400000000000091)
('lraaaa', 1.419999999999618)
('alrlar', 1.4100000000003092)
('lrlrlr', 1.4600000000000364)
('alaraa', 1.5399999999999636)
('lrlara', 1.75)
('laraaa', 1.75)
('alaara', 1.819999999999709)
('alrlra', 1.8099999999999454)
('alraaaa', 1.9299999999998363)
('laraaaa', 1.9400000000000546)
('lrlrlra', 1.9600000000000364)
('laarlra', 2.0)
('alaaar', 1.9699999999998)
('laaaar', 2.0399999999999636)
('lraalr', 2.050000000000182)
('laralr', 2.0899999999996908)
('lralar', 1.9400000000000546)
('alralr', 1.9400000000000546)
('alraalr', 2.0299999999997453)
('lralaar', 2.0399999999999636)
('alrlraa', 2.0700000000001637)
('lrlaaar', 2.1700000000000728)
('larlara', 2.1599999999998545)
('alaaara', 2.1599999999998545)
('lraaalr', 2.230000000000018)
('lralrlr', 2.2900000000004184)
('alaaaar', 2.319999999999709)
('alaaraa', 2.3400000000001455)
('laaraaa', 2.3400000000001455)
('alarlar', 2.3899999999998727)
('laaarlr', 2.4600000000000364)
('laaralr', 2.4299999999998363)
('lrlaara', 2.519999999999982)
('larlaar', 2.519999999999982)
('lrlraaa', 2.5799999999999272)
('alrlrlr', 2.7400000000002365)
('laralra', 2.9400000000000546)
('lraaaaa', 3.019999999999982)
('laaaara', 3.019999999999982)
('lrlralr', 3.019999999999982)
('lrlarlr', 3.0700000000001637)
('lrlaraa', 3.1100000000001273)
('laralar', 3.0099999999997635)
('lraalar', 2.9600000000000364)
('alrlaar', 3.019999999999982)
('alrlara', 3.0700000000001637)
('alralar', 3.1399999999998727)
('alaarlr', 3.2600000000002183)
('lrlrlar', 3.380000000000109)
('lralraa', 3.4299999999998363)
('alarlra', 3.480000000000018)
('laaaraa', 3.550000000000182)
('lralara', 3.4899999999997817)
('laaaaar', 3.549999999999727)
('larlraa', 3.5300000000002)
('laarlar', 3.6299999999996544)
('larlrlr', 3.7899999999999636)
('alralra', 3.730000000000018)
('laraalr', 3.7600000000002183)
('alaraaa', 3.8399999999996908)
('lraalra', 3.8600000000001273)
('alrlaaar', 3.950000000000273)
('alaaaaar', 3.9099999999998545)
('lraaaaaa', 4.0300000000002)
('alaralr', 4.130000000000109)
('lrlaaaar', 4.079999999999927)
('laaarlra', 4.099999999999909)
('alraalra', 4.119999999999891)
('alaarlra', 3.9899999999997817)
('larlarlr', 4.289999999999964)
('alaarlar', 4.320000000000164)
('alarlrlr', 4.349999999999909)
('laraalra', 4.269999999999982)
('alrlraaa', 4.400000000000091)
('alralraa', 4.440000000000055)
('larlraaa', 4.519999999999982)
('alaaaara', 4.5099999999997635)
('lraalaar', 4.4900000000002365)
('lrlralar', 4.639999999999873)
('lrlrlrlr', 4.639999999999873)
('alarlara', 4.820000000000164)
('larlaara', 4.889999999999873)
('lrlaaraa', 4.950000000000273)
('laralraa', 4.920000000000073)
('lrlaaara', 4.75)
('lralraaa', 5.0099999999997635)
('alaraaaa', 5.019999999999982)
('alaralra', 5.010000000000218)
('laaaaraa', 5.150000000000091)
('laarlraa', 4.9900000000002365)
('lrlaraaa', 5.309999999999945)
('alrlaraa', 5.349999999999909)
('lrlarlra', 5.299999999999727)
('lrlralra', 5.3400000000001455)
('lraalraa', 5.400000000000091)
('larlrlra', 5.360000000000127)
('alrlaara', 5.25)
('laralara', 5.359999999999673)
('laraaaaa', 5.3400000000001455)
('alralara', 5.619999999999891)
('laaaaara', 5.559999999999945)
('lrlrlraa', 5.559999999999945)
('lrlrlara', 5.670000000000073)
('alarlraa', 5.460000000000036)

Time taken to extract lstar-dfa: 401.8160631656647
number of states of the dfa: 198
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'alrlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alrlraa'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'larala'}, 'lraaalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lralraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alr': {'l': 'alrl', 'r': 'l', 'a': 'alra'}, 'lrlarl': {'l': 'alr', 'r': 'lrlarlr', 'a': 'lrlrlrl'}, 'alar': {'l': 'alarl', 'r': 'l', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'alaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaraaa'}, 'laaral': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'alaarlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaa': {'l': 'l', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'larlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaa': {'l': 'laral', 'r': 'alrlaar', 'a': 'lraaal'}, 'lara': {'l': 'laral', 'r': 'l', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'laara': {'l': 'lraaal', 'r': 'l', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'alr', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'alaraaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'lrlral': {'l': 'alr', 'r': 'lrlralr', 'a': 'lraaal'}, 'lraalaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'lralraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larl': {'l': 'alr', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laraal': {'l': 'laral', 'r': 'laraalr', 'a': 'lrlrlrl'}, 'alaarla': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laralar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alrlaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'l', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alarlrlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'laraaaa'}, 'larlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lrlrlra'}, 'alraal': {'l': 'alr', 'r': 'alraalr', 'a': 'lrlrlrl'}, 'alaaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lral': {'l': 'l', 'r': 'lralr', 'a': 'lrala'}, 'lraaa': {'l': 'lraaal', 'r': 'l', 'a': 'lraaaa'}, 'laralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlrl': {'l': 'laral', 'r': 'larlrlr', 'a': 'lrlrlrl'}, 'alarlr': {'l': 'lraaal', 'r': 'alr', 'a': 'lraaalr'}, 'alraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'lrlrlrl': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lralara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrl': {'l': 'l', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'lrlaaaa': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lrlralar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alral': {'l': 'alr', 'r': 'alralr', 'a': 'alrala'}, 'alrlr': {'l': 'lraaal', 'r': 'alr', 'a': 'alrlra'}, 'lraala': {'l': 'laral', 'r': 'lraaalr', 'a': 'lraaal'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'l', 'a': 'alaraa'}, 'lrlaaa': {'l': 'alr', 'r': 'lrlaaar', 'a': 'lraaal'}, 'alrlaaa': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lralrl': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lraaaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laraalra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alralra'}, 'alarla': {'l': 'alr', 'r': 'alarlar', 'a': 'lrlrlrl'}, 'lar': {'l': 'larl', 'r': 'l', 'a': 'lara'}, 'lrlrlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'alrlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaaa': {'l': 'alr', 'r': 'alaaaar', 'a': 'lraaal'}, 'lrlrlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'laraalr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'la': {'l': 'l', 'r': 'lar', 'a': 'laa'}, 'lralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lraalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraalra'}, 'alarlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaaaa': {'l': 'laral', 'r': 'laaaaar', 'a': 'lrlrlrl'}, 'al': {'l': 'l', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alaralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaarl': {'l': 'laral', 'r': 'alaarlr', 'a': 'lraaal'}, 'alarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laarl': {'l': 'alr', 'r': 'laarlr', 'a': 'lraaal'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alraalra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraa': {'l': 'alraal', 'r': 'l', 'a': 'alraaa'}, 'alarl': {'l': 'alr', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'laaarlra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlarl': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lrlrlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlr': {'l': 'larlrl', 'r': 'alr', 'a': 'larlra'}, 'alarlrl': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alaaaa'}, 'larlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlrlrl': {'l': 'laral', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'alaral': {'l': 'laral', 'r': 'alaralr', 'a': 'lrlrlrl'}, 'laa': {'l': 'l', 'r': 'laar', 'a': 'laaa'}, 'lraalaa': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'larlar': {'l': 'lraaal', 'r': 'alr', 'a': 'lraaalr'}, 'larlaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'lr': {'l': 'lrl', 'r': 'l', 'a': 'lra'}, 'laarlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaa': {'l': 'alr', 'r': 'larlaar', 'a': 'lrlrlrl'}, 'lrlrala': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lrlrla': {'l': 'laral', 'r': 'lrlrlar', 'a': 'lrlrlrl'}, 'alralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'ala': {'l': 'l', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaaaa'}, 'alralraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaralr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'lraalra': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'laar': {'l': 'laarl', 'r': 'l', 'a': 'laara'}, 'lrlaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lrlaara'}, 'alrlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alrlara'}, 'larlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaarlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'laralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laraa': {'l': 'laraal', 'r': 'l', 'a': 'laraaa'}, 'alrlrl': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lrlaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'aa': {'l': 'lrlrlrl', 'r': 'rr', 'a': 'aa'}, 'laaarl': {'l': 'alr', 'r': 'laaarlr', 'a': 'lrlrlrl'}, 'laralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'laralra'}, 'lrlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'l', 'a': 'alaara'}, 'laarlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaaa': {'l': 'alr', 'r': 'laaaar', 'a': 'laaaaa'}, 'alaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lrlaraa'}, 'larala': {'l': 'laral', 'r': 'laralar', 'a': 'lrlrlrl'}, 'lrlaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrl': {'l': 'l', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lrlaaaar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'alrala': {'l': 'laral', 'r': 'alralar', 'a': 'lrlrlrl'}, 'lrlar': {'l': 'lrlarl', 'r': 'l', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'larlaa'}, 'alralar': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'lraaal'}, 'lrlaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaaaaa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralr': {'l': 'lraaal', 'r': 'l', 'a': 'lralra'}, 'laarla': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lra': {'l': 'lral', 'r': 'l', 'a': 'lraa'}, 'lralar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'lralaa': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'lralaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'larlraa': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alrlara': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'laaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlrlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'lraaalr'}, 'alaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaaa': {'l': 'laral', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'larlarlr': {'l': 'lrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'l', 'a': 'lraaa'}, 'alra': {'l': 'alral', 'r': 'l', 'a': 'alraa'}, 'lrlarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'l', 'a': 'lrlra'}, 'alaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'lrlaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}, 'laaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'lraaalr'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.280869          None            None              []          0         0         0          198                    None                                    None             401.816063        False      0.5   0.05
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12511229515075684  s
EQ test took  0.0006287097930908203  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11910533905029297  s
EQ test took  0.03838682174682617  s


epsilon= 0.25 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2872142791748047
overall guided extraction time took: 0.07999999999992724
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('rr', 0.0)
('aa', 0.01999999999998181)
('lr', 0.01999999999998181)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.08458542823791504
number of states of the dfa: 8
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'lr'}, 'lr': {'l': 'lrl', 'r': 'l', 'a': 'aa'}, 'a': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrl': {'l': 'l', 'r': 'aa', 'a': 'lrl'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.287214          None            None              []          0         0         0            8                    None                                    None               0.084585         True     0.25    0.5
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11799120903015137  s
EQ test took  0.0006406307220458984  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12382793426513672  s
EQ test took  0.04894661903381348  s


epsilon= 0.25 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2951853275299072
overall guided extraction time took: 0.6300000000001091
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('lr', 0.010000000000218279)
('aa', 0.010000000000218279)
('rra', 0.01999999999998181)
('lara', 0.0500000000001819)
('lar', 0.05999999999994543)
('alr', 0.05999999999994543)
('lra', 0.0500000000001819)
('lrlar', 0.07999999999992724)
('alar', 0.09000000000014552)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.6370992660522461
number of states of the dfa: 20
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'r', 'a': 'a'}, 'lr': {'l': 'lrl', 'r': 'r', 'a': 'alr'}, 'alr': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'alar': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'lrlar': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'lar': {'l': 'alrl', 'r': 'r', 'a': 'alr'}, 'ala': {'l': 'r', 'r': 'alr', 'a': 'alrl'}, 'lara': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'l': {'l': 'r', 'r': 'lr', 'a': 'la'}, 'la': {'l': 'r', 'r': 'lar', 'a': 'alrl'}, 'al': {'l': 'r', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'r', 'r': 'aa', 'a': 'alrl'}, 'lra': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'r': {'l': 'r', 'r': 'r', 'a': 'r'}, 'a': {'l': 'al', 'r': 'r', 'a': 'aa'}, 'aa': {'l': 'alrl', 'r': 'r', 'a': 'aa'}, 'rr': {'l': 'r', 'r': 'r', 'a': 'r'}, 'lrla': {'l': 'r', 'r': 'alr', 'a': 'alrl'}, 'rra': {'l': 'r', 'r': 'r', 'a': 'r'}, 'lrl': {'l': 'r', 'r': 'aa', 'a': 'ala'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.295185          None            None              []          0         0         0           20                    None                                    None               0.637099         True     0.25   0.25
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11936044692993164  s
EQ test took  0.000621795654296875  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11708545684814453  s
EQ test took  0.055995941162109375  s


epsilon= 0.25 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.2969050407409668
Interrupted due to time limit
overall guided extraction time took: 402.1600000000003
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('aa', 0.009999999999763531)
('rr', 0.009999999999763531)
('lr', 0.12000000000034561)
('lra', 0.13000000000010914)
('lrlr', 0.17000000000007276)
('lraa', 0.1999999999998181)
('lralar', 0.2300000000000182)
('alr', 0.19000000000005457)
('lar', 0.22000000000025466)
('alra', 0.25)
('alar', 0.25999999999976353)
('lara', 0.2699999999999818)
('laar', 0.3200000000001637)
('alaar', 0.3500000000003638)
('lraaa', 0.34999999999990905)
('alraa', 0.38000000000010914)
('lrlra', 0.3400000000001455)
('lrlar', 0.44000000000005457)
('lralr', 0.4299999999998363)
('larlr', 0.45999999999958163)
('laraa', 0.5)
('laaar', 0.4499999999998181)
('laaaar', 0.4800000000000182)
('laara', 0.4800000000000182)
('alara', 0.5300000000002001)
('alrlr', 0.5500000000001819)
('lraalr', 0.5799999999999272)
('lrlrlr', 0.599999999999909)
('laraaa', 0.599999999999909)
('larlra', 0.6399999999998727)
('laralr', 0.6399999999998727)
('laarlr', 0.6300000000001091)
('alarlr', 0.650000000000091)
('lraaaa', 0.6700000000000728)
('laaraa', 0.7599999999997635)
('alraaa', 0.8000000000001819)
('lralra', 0.7600000000002183)
('alrlra', 0.7799999999997453)
('alralr', 0.8400000000001455)
('lrlraa', 0.8600000000001273)
('alaara', 0.8400000000001455)
('laaara', 0.8800000000001091)
('alrlar', 0.8999999999996362)
('larlar', 0.9200000000000728)
('alaraa', 0.849999999999909)
('lrlara', 0.9699999999997999)
('alaaar', 0.9400000000000546)
('laaraaa', 0.9400000000000546)
('lrlaar', 1.0099999999997635)
('lrlaaar', 1.0799999999999272)
('lrlaara', 1.069999999999709)
('alrlara', 1.0799999999999272)
('alralra', 1.0499999999997272)
('lrlraaa', 1.1000000000003638)
('alraaaa', 1.1399999999998727)
('larlraa', 1.150000000000091)
('laaaara', 1.1000000000003638)
('lrlrlra', 1.1099999999996726)
('laaaaar', 1.2000000000002728)
('alarlra', 1.2399999999997817)
('alralar', 1.2600000000002183)
('alrlrlr', 1.2600000000002183)
('alrlraa', 1.2799999999997453)
('lralrlr', 1.3200000000001637)
('alrlaar', 1.3699999999998909)
('lraaaaa', 1.3600000000001273)
('laaarlr', 1.300000000000182)
('alaraaa', 1.3600000000001273)
('laarlra', 1.4400000000000546)
('alaaraa', 1.3600000000001273)
('laarlar', 1.4500000000002728)
('lrlarlr', 1.430000000000291)
('alaralr', 1.400000000000091)
('larlrlr', 1.4100000000003092)
('lraaalr', 1.5100000000002183)
('laralar', 1.5)
('laralra', 1.5700000000001637)
('lralara', 1.6199999999998909)
('alaaaar', 1.550000000000182)
('laraalr', 1.6799999999998363)
('alaaara', 1.650000000000091)
('lrlaraa', 1.6799999999998363)
('lralaar', 1.6900000000000546)
('alaraalr', 1.7300000000000182)
('laraaaa', 1.7699999999999818)
('alaarlr', 1.75)
('lrlralr', 1.7100000000000364)
('lraalar', 1.7300000000000182)
('laaralr', 1.75)
('larlara', 1.8099999999999454)
('lralaraa', 1.8699999999998909)
('lraalra', 1.8099999999999454)
('alraalr', 1.8600000000001273)
('laaaraa', 1.900000000000091)
('lralraa', 1.7999999999997272)
('alaaralr', 1.8899999999998727)
('alarlar', 2.019999999999982)
('larlaar', 2.0)
('lrlrlar', 2.019999999999982)
('lraaaaaa', 2.0700000000001637)
('alrlaaar', 2.019999999999982)
('laaaralr', 2.0)
('alrlrlra', 2.1100000000001273)
('lrlaraaa', 2.1799999999998363)
('alralaar', 2.0300000000002)
('lralraaa', 2.1900000000000546)
('alaaaara', 2.1100000000001273)
('lrlrlara', 2.100000000000364)
('alaaarlr', 2.25)
('lrlaaraa', 2.299999999999727)
('larlaraa', 2.1399999999998727)
('laraalar', 2.1399999999998727)
('larlaaar', 2.1700000000000728)
('lralaaar', 2.1399999999998727)
('laaralar', 2.2199999999998)
('lrlarlar', 2.2100000000000364)
('lrlrlrlr', 2.1599999999998545)
('alralraa', 2.2100000000000364)
('alaraaaa', 2.230000000000018)
('lraalraa', 2.2800000000002)
('laaarlra', 2.2400000000002365)
('larlrlra', 2.2599999999997635)
('laralara', 2.230000000000018)
('lrlralra', 2.2799999999997453)
('alarlraa', 2.319999999999709)
('alrlraaa', 2.3599999999996726)
('lralrlra', 2.3899999999998727)
('laarlraa', 2.3400000000001455)
('alralara', 2.3700000000003456)
('laraaaaa', 2.4299999999998363)
('alaralra', 2.4699999999998)
('larlraaa', 2.480000000000018)
('lraaalra', 2.519999999999982)
('laralraa', 2.4700000000002547)
('laarlara', 2.5300000000002)
('alaaraaa', 2.5799999999999272)
('alraaaaa', 2.5399999999999636)
('laaaaara', 2.5400000000004184)
('laaaraaa', 2.5900000000001455)
('alaaaraa', 2.6100000000001273)
('lrlraaaa', 2.630000000000109)
('alarlara', 2.6400000000003274)
('lrlrlraa', 2.6899999999996)
('lrlaaara', 2.649999999999636)
('laaaaraa', 2.6700000000000728)
('laraalra', 2.6900000000000546)
('larlaraaa', 2.7400000000002365)
('lrlarlra', 2.7199999999998)
('alaraalra', 2.7799999999997453)
('alrlaara', 2.7100000000000364)
('laaralrlr', 2.769999999999982)
('lraaaalr', 2.7199999999998)
('laralaar', 2.7599999999997635)
('laralrlr', 2.75)
('alraalar', 2.819999999999709)
('lralralr', 2.849999999999909)
('alaarlra', 2.8600000000001273)
('alrlrlar', 2.900000000000091)
('laarlaar', 2.8899999999998727)
('lrlrlaar', 2.950000000000273)
('alraaalr', 2.900000000000091)
('laaralra', 2.9599999999995816)
('lraalrlr', 2.949999999999818)
('alaaaaar', 2.9400000000000546)
('alarlrlr', 3.019999999999982)
('lrlralar', 3.0)
('larlralr', 3.1100000000001273)
('laaaarlr', 3.0299999999997453)
('lraaalar', 3.0599999999999454)
('laaarlar', 3.1299999999996544)
('larlarlr', 3.130000000000109)
('larlrlar', 3.1799999999998363)
('laaraaaa', 3.230000000000018)
('larlaara', 3.180000000000291)
('lraalara', 3.1599999999998545)
('alarlaar', 3.2200000000002547)
('lrlraalr', 3.149999999999636)
('lrlaarlr', 3.2200000000002547)
('alaarlar', 3.269999999999982)
('alraalra', 3.3099999999999454)
('lralrlar', 3.3099999999999454)
('laarlrlr', 3.25)
('alrlralr', 3.349999999999909)
('alrlarlr', 3.299999999999727)
('alralrlr', 3.4699999999998)
('lraalaar', 3.419999999999618)
('alaralar', 3.4400000000000546)
('lrlaralr', 3.4400000000000546)
('alrlaraa', 3.4099999999998545)
('lraalralr', 3.519999999999982)
('lrlaaaar', 3.4600000000000364)
('alaaaaara', 3.480000000000018)
('lrlrlraaa', 3.5099999999997635)
('lralarlr', 3.5799999999999272)
('laaaaaar', 3.630000000000109)
('lrlaarlar', 3.599999999999909)
('laaraalr', 3.6399999999998727)
('larlraaaa', 3.5700000000001637)
('laraaalr', 3.600000000000364)

Time taken to extract lstar-dfa: 402.14837193489075
number of states of the dfa: 300
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'larala'}, 'alrlra': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraa'}, 'lraaalr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alaaraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alr': {'l': 'alrl', 'r': 'rr', 'a': 'alra'}, 'alarlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlarl': {'l': 'alr', 'r': 'lrlarlr', 'a': 'alraala'}, 'alar': {'l': 'alarl', 'r': 'l', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alrlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'alr', 'r': 'lraaalr', 'a': 'alraala'}, 'alaraa': {'l': 'alaraal', 'r': 'alr', 'a': 'alaraaa'}, 'laaral': {'l': 'laral', 'r': 'laaralr', 'a': 'alraala'}, 'larlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alaarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaa': {'l': 'l', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'alraala', 'r': 'alr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaar': {'l': 'alraala', 'r': 'alr', 'a': 'alaaara'}, 'lraalralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaa': {'l': 'alr', 'r': 'alrlaar', 'a': 'alraala'}, 'lara': {'l': 'laral', 'r': 'l', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'l', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'l', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaraaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lrlral': {'l': 'laral', 'r': 'lrlralr', 'a': 'alraala'}, 'lraalaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lralraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larl': {'l': 'l', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'alraala', 'r': 'alr', 'a': 'laaraaa'}, 'laraal': {'l': 'laral', 'r': 'laraalr', 'a': 'alraala'}, 'alaarla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laaaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaara': {'l': 'alraala', 'r': 'alr', 'a': 'laaaraa'}, 'laralar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alrlaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaaalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'l', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laaralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alarlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laraaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'laraaaa'}, 'larlra': {'l': 'alraala', 'r': 'alr', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alraaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlr': {'l': 'alraala', 'r': 'alr', 'a': 'lrlrlra'}, 'lraaala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alraal': {'l': 'laral', 'r': 'alraalr', 'a': 'alraala'}, 'alaaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lral': {'l': 'rr', 'r': 'lralr', 'a': 'lrala'}, 'lrlaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'l', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlrl': {'l': 'alr', 'r': 'larlrlr', 'a': 'alraala'}, 'alarlr': {'l': 'alraala', 'r': 'alr', 'a': 'alarlra'}, 'alraaa': {'l': 'alraala', 'r': 'alr', 'a': 'alraaaa'}, 'larlaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlrl': {'l': 'alr', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lrlrl': {'l': 'rr', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'laaralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alral': {'l': 'alr', 'r': 'alralr', 'a': 'alrala'}, 'alrlr': {'l': 'alrlrl', 'r': 'alr', 'a': 'alrlra'}, 'lraala': {'l': 'laral', 'r': 'lraalar', 'a': 'alraala'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'l', 'a': 'alaraa'}, 'lrlaaa': {'l': 'alr', 'r': 'lrlaaar', 'a': 'alraala'}, 'alrlaaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lralrl': {'l': 'alr', 'r': 'lralrlr', 'a': 'alraala'}, 'lraaaaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralr': {'l': 'alraala', 'r': 'alr', 'a': 'alralra'}, 'alarla': {'l': 'laral', 'r': 'alarlar', 'a': 'alraala'}, 'lar': {'l': 'larl', 'r': 'l', 'a': 'lara'}, 'lrlrlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alrlraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laaarla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaralr': {'l': 'alraala', 'r': 'laral', 'a': 'alarlraa'}, 'alralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaa': {'l': 'laral', 'r': 'alaaaar', 'a': 'alaaaaa'}, 'laraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lrlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alrlrla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alaara': {'l': 'alraala', 'r': 'alr', 'a': 'alaaraa'}, 'la': {'l': 'l', 'r': 'lar', 'a': 'laa'}, 'lraalr': {'l': 'alraala', 'r': 'alr', 'a': 'lraalra'}, 'lralra': {'l': 'alraala', 'r': 'alr', 'a': 'lralraa'}, 'alaraal': {'l': 'laral', 'r': 'alaraalr', 'a': 'lrlrlrlrl'}, 'laaaaa': {'l': 'alr', 'r': 'laaaaar', 'a': 'alraala'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alaralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaarl': {'l': 'laral', 'r': 'alaarlr', 'a': 'alraala'}, 'alarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'lrlrlraa'}, 'alraaal': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laarlrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alaaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarl': {'l': 'alr', 'r': 'laarlr', 'a': 'laarla'}, 'larlaaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaaal': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alraa': {'l': 'alraal', 'r': 'l', 'a': 'alraaa'}, 'alarl': {'l': 'alr', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lralaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alaaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lralrlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lrlrlaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alrlarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'larlr': {'l': 'larlrl', 'r': 'l', 'a': 'larlra'}, 'larlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alaaaa'}, 'alraaalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlrlrl': {'l': 'laral', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'alaral': {'l': 'alr', 'r': 'alaralr', 'a': 'alraala'}, 'laa': {'l': 'l', 'r': 'laar', 'a': 'laaa'}, 'alarlrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaralrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lralrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlar': {'l': 'alraala', 'r': 'alr', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'lra'}, 'laraalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lralaaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaa': {'l': 'laral', 'r': 'larlaar', 'a': 'alraala'}, 'laarala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlrlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlrla': {'l': 'laral', 'r': 'lrlrlar', 'a': 'alraala'}, 'alralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'ala': {'l': 'l', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'alraala', 'r': 'alr', 'a': 'lraaaaa'}, 'alralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaralr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lraalra': {'l': 'alraala', 'r': 'laral', 'a': 'alarlraa'}, 'laar': {'l': 'laarl', 'r': 'l', 'a': 'laara'}, 'laralrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlaar': {'l': 'lrlaarl', 'r': 'alr', 'a': 'lrlaara'}, 'alrlar': {'l': 'alraala', 'r': 'alr', 'a': 'alrlara'}, 'laaaral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'larlaraa'}, 'alaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'laralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lrlarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraa': {'l': 'laraal', 'r': 'l', 'a': 'laraaa'}, 'alrlrl': {'l': 'alr', 'r': 'alrlrlr', 'a': 'alraala'}, 'lrlaara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lraaalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'aa': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'aa'}, 'larlrla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaarl': {'l': 'alr', 'r': 'laaarlr', 'a': 'alraala'}, 'lralralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alarala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlraal': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laralr': {'l': 'alraala', 'r': 'alr', 'a': 'laralra'}, 'lrlraa': {'l': 'alraala', 'r': 'alr', 'a': 'lrlraaa'}, 'lralral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaar': {'l': 'alraala', 'r': 'l', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'l', 'a': 'alaara'}, 'laarlra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lraalara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaa': {'l': 'l', 'r': 'laaaar', 'a': 'laaaaa'}, 'larlralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'laaraaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'larlral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlara': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaraa'}, 'larala': {'l': 'alr', 'r': 'laralar', 'a': 'alraala'}, 'lrlaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrl': {'l': 'rr', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lrlaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alaraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lrlarla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alrala': {'l': 'alr', 'r': 'alralar', 'a': 'alraala'}, 'lrlar': {'l': 'lrlarl', 'r': 'l', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'larlaa'}, 'alralar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lralaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrala': {'l': 'rr', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'lrlrlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alarlaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alrlarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'l', 'a': 'lralra'}, 'laarla': {'l': 'alr', 'r': 'laarlar', 'a': 'alraala'}, 'lraalrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lra': {'l': 'lral', 'r': 'rr', 'a': 'lraa'}, 'lralar': {'l': 'alraala', 'r': 'rr', 'a': 'lralara'}, 'lralaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'alraala'}, 'lralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'larlraaa'}, 'alrlara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'alrlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alarlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaraal': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laarlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaarl': {'l': 'laral', 'r': 'alarlraa', 'a': 'alraala'}, 'laraala': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlrlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'alralrl': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alaaral': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laarlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaaa': {'l': 'laral', 'r': 'alaaaaar', 'a': 'lrlrlrlrl'}, 'larlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'rr', 'a': 'lraaa'}, 'lrlaarla': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alra': {'l': 'alral', 'r': 'l', 'a': 'alraa'}, 'laralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaaa': {'l': 'laral', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'rr', 'a': 'lrlra'}, 'lrlarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laaaara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}, 'laaraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'laaarlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alarlraa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.296905          None            None              []          0         0         0          300                    None                                    None             402.148372        False     0.25    0.1
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11198139190673828  s
EQ test took  0.0006747245788574219  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12388753890991211  s
EQ test took  0.07146406173706055  s


epsilon= 0.25 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3112950325012207
Interrupted due to time limit
overall guided extraction time took: 401.6700000000001
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.03000000000020009)
('aa', 0.02999999999974534)
('lr', 0.03999999999996362)
('rra', 0.11999999999989086)
('lra', 0.36000000000012733)
('laraa', 0.42000000000007276)
('alr', 0.42000000000007276)
('lar', 0.4499999999998181)
('laar', 0.4699999999997999)
('alra', 0.5399999999999636)
('lrlr', 0.6099999999996726)
('alar', 0.6100000000001273)
('lraa', 0.6399999999998727)
('alara', 0.6900000000000546)
('lrlra', 0.7699999999999818)
('alraa', 0.8099999999999454)
('alrlr', 0.7999999999997272)
('lralr', 0.8699999999998909)
('laara', 0.8299999999999272)
('laaar', 0.900000000000091)
('lraaa', 0.9699999999997999)
('lrlar', 1.0)
('laarlr', 1.050000000000182)
('alaar', 1.0299999999997453)
('alrlar', 1.1599999999998545)
('alaara', 1.0700000000001637)
('alaaar', 1.0900000000001455)
('lrlara', 1.25)
('lraaaa', 1.2699999999999818)
('alarlr', 1.319999999999709)
('laaaar', 1.2899999999999636)
('alralr', 1.3999999999996362)
('lralra', 1.449999999999818)
('laaraa', 1.400000000000091)
('alaraa', 1.430000000000291)
('alraaa', 1.5199999999999818)
('alrlra', 1.6299999999996544)
('lrlrlr', 1.5900000000001455)
('lralar', 1.5199999999999818)
('lrlraa', 1.5900000000001455)
('lraalr', 1.650000000000091)
('laaara', 1.6400000000003274)
('alrlaar', 1.680000000000291)
('lrlaar', 1.6600000000003092)
('lraaaaa', 1.7300000000000182)
('alaaaar', 1.7399999999997817)
('laaaaar', 1.7999999999997272)
('alraalr', 1.8500000000003638)
('lraalra', 1.8600000000001273)
('lralara', 1.949999999999818)
('laaralr', 1.9099999999998545)
('alaaraa', 1.9600000000000364)
('lralraa', 2.0100000000002183)
('alarlar', 2.0599999999999454)
('alaraaa', 2.1100000000001273)
('alraaaa', 2.0899999999996908)
('laaaara', 2.0799999999999272)
('laaarlr', 2.130000000000109)
('lralrlr', 2.149999999999636)
('alarlra', 2.3100000000004)
('alrlraa', 2.3099999999999454)
('lrlaara', 2.300000000000182)
('alrlara', 2.349999999999909)
('lrlaraa', 2.380000000000109)
('lrlraaa', 2.449999999999818)
('alaaara', 2.4400000000000546)
('laaaraa', 2.5100000000002183)
('laarlra', 2.5399999999999636)
('lrlrlra', 2.5599999999999454)
('alralra', 2.5700000000001637)
('laaraaa', 2.6900000000000546)
('alrlaraa', 2.650000000000091)
('lrlaaara', 2.6599999999998545)
('laaaaara', 2.7600000000002183)
('lrlaaar', 2.8099999999999454)
('laarlraa', 2.819999999999709)
('alrlaara', 2.8899999999998727)
('alaaraaa', 2.8900000000003274)
('lralrlra', 3.0)
('laaraaaa', 2.9600000000000364)
('alaaaara', 3.0)
('alaarlr', 2.949999999999818)
('lrlarlr', 3.0)
('alraalar', 3.019999999999982)
('lralaar', 3.1299999999996544)
('lraaalr', 3.0799999999999272)
('lraalar', 3.1900000000000546)
('alaralr', 3.1600000000003092)
('lrlrlar', 3.1799999999998363)
('alrlrlr', 3.2600000000002183)
('alralar', 3.2900000000004184)
('lrlralr', 3.3399999999996908)
('alrlrlra', 3.399999999999636)
('laarlar', 3.4700000000002547)
('lrlraalr', 3.5799999999999272)
('laarlrlr', 3.7599999999997635)
('lraalaar', 3.8200000000001637)
('lrlarlra', 3.850000000000364)
('lraalara', 3.9400000000000546)
('lralralr', 3.900000000000091)
('alraaalr', 4.110000000000127)
('alaraalr', 4.1599999999998545)
('alarlraa', 4.050000000000182)
('lrlrlraa', 4.150000000000091)
('alraaaaa', 4.210000000000036)
('lrlaarlr', 4.170000000000073)
('alrlraaa', 4.2199999999998)
('laaralar', 4.3400000000001455)
('laaralra', 4.25)
('lralrlar', 4.420000000000073)
('lrlaraaa', 4.3400000000001455)
('laarlaar', 4.309999999999945)
('laaaralr', 4.369999999999891)
('lralarlr', 4.5)
('alaraaaa', 4.420000000000073)
('alraalra', 4.489999999999782)
('lrlrlara', 4.630000000000109)
('alaaaaar', 4.630000000000109)
('laaraalr', 4.639999999999873)
('alarlara', 4.779999999999745)
('alrlralr', 4.6599999999998545)
('alaarlra', 4.609999999999673)
('lrlralra', 4.870000000000346)
('lraaaaaa', 4.940000000000055)
('lrlarlar', 4.889999999999873)
('alaralra', 4.9699999999998)
('alaaarlr', 4.869999999999891)
('lraaaalr', 5.099999999999909)
('alarlrlr', 5.039999999999964)
('alrlarlr', 5.0300000000002)
('lrlrlaar', 5.150000000000091)
('alralrlr', 5.300000000000182)
('laaaarlr', 5.3400000000001455)
('alaralar', 5.320000000000164)
('lrlaaraa', 5.2199999999998)
('lraaalra', 5.380000000000109)
('lralaaar', 5.489999999999782)
('laaaaraa', 5.269999999999982)
('lrlralar', 5.400000000000091)
('lrlaralr', 5.540000000000418)
('lrlraaaa', 5.710000000000036)

Time taken to extract lstar-dfa: 401.6599931716919
number of states of the dfa: 214
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'alrlra': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraa'}, 'lralraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alaaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alarlraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alr': {'l': 'alrl', 'r': 'rr', 'a': 'alra'}, 'alraaaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlarl': {'l': 'alr', 'r': 'lrlarlr', 'a': 'alraala'}, 'alar': {'l': 'alarl', 'r': 'rr', 'a': 'alara'}, 'lrlraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'alr', 'r': 'lraaalr', 'a': 'lralrlrl'}, 'alaraa': {'l': 'alraala', 'r': 'rr', 'a': 'alaraaa'}, 'laaral': {'l': 'alr', 'r': 'laaralr', 'a': 'alraala'}, 'alrlraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaarlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaa': {'l': 'rr', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'alraala', 'r': 'rr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaar': {'l': 'alraala', 'r': 'rr', 'a': 'lralraa'}, 'alrlaa': {'l': 'alr', 'r': 'alrlaar', 'a': 'lralrlrl'}, 'lara': {'l': 'lralrlrl', 'r': 'rr', 'a': 'lralraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'rr', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'rr', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alralrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlral': {'l': 'alr', 'r': 'lrlralr', 'a': 'alraala'}, 'lraalaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlaaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alraala': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laaaaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlralra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaraa': {'l': 'alraala', 'r': 'rr', 'a': 'laaraaa'}, 'lrlarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laaaarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaara': {'l': 'alraala', 'r': 'alr', 'a': 'lralraa'}, 'alaaaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alraaal': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laaaaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaalra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaralra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaaalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'rr', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alarlrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraalar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alrlral': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alarlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lrlrlra'}, 'alraal': {'l': 'alr', 'r': 'alraalr', 'a': 'alraala'}, 'alaaaaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lral': {'l': 'rr', 'r': 'lralr', 'a': 'lrala'}, 'lralarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'rr', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alarlr': {'l': 'alraala', 'r': 'rr', 'a': 'alarlra'}, 'alraaa': {'l': 'alraala', 'r': 'rr', 'a': 'alraaaa'}, 'alraalar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrl': {'l': 'alr', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'laaralar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaralar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlralar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alral': {'l': 'rr', 'r': 'alralr', 'a': 'alraala'}, 'alrlr': {'l': 'alrlrl', 'r': 'rr', 'a': 'alrlra'}, 'lraala': {'l': 'alr', 'r': 'lraalar', 'a': 'alraala'}, 'alara': {'l': 'alaral', 'r': 'rr', 'a': 'alaraa'}, 'laaa': {'l': 'rr', 'r': 'laaar', 'a': 'laaaa'}, 'lrlaaa': {'l': 'alr', 'r': 'lara', 'a': 'lralrlrl'}, 'lralrl': {'l': 'rr', 'r': 'lralrlr', 'a': 'alraala'}, 'lraaaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alralr': {'l': 'alraala', 'r': 'rr', 'a': 'lralraa'}, 'alarla': {'l': 'alr', 'r': 'alarlar', 'a': 'lralrlrl'}, 'lar': {'l': 'lralrlrl', 'r': 'rr', 'a': 'lara'}, 'lrlrlara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alraalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alrlraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlaralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alaaaa': {'l': 'alr', 'r': 'alaaaar', 'a': 'alraala'}, 'lrlrlar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lralrlar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaara': {'l': 'lralrlrl', 'r': 'rr', 'a': 'alaaraa'}, 'la': {'l': 'rr', 'r': 'lar', 'a': 'laa'}, 'lralra': {'l': 'alraala', 'r': 'rr', 'a': 'lralraa'}, 'lraalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alarlar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laaaaa': {'l': 'alr', 'r': 'laaaaar', 'a': 'lralrlrl'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'rr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaraal': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alaralra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaarl': {'l': 'alr', 'r': 'alaarlr', 'a': 'lralrlrl'}, 'alarlara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laarlrl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laarl': {'l': 'rr', 'r': 'laarlr', 'a': 'laarla'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaaraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alraalra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaaal': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alraa': {'l': 'alraal', 'r': 'rr', 'a': 'alraaa'}, 'alarl': {'l': 'rr', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alaaarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralrlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alrlarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlaa': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laaaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alraaalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaa': {'l': 'rr', 'r': 'alaaar', 'a': 'alaaaa'}, 'alarlrl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alaral': {'l': 'alr', 'r': 'alaralr', 'a': 'alraala'}, 'laa': {'l': 'rr', 'r': 'laar', 'a': 'laaa'}, 'lralrla': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lraalaa': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'lra'}, 'lralaaa': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laarlar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laarala': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrlrala': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrlrla': {'l': 'alr', 'r': 'lrlrlar', 'a': 'alraala'}, 'ala': {'l': 'rr', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'alraala', 'r': 'rr', 'a': 'lraaaaa'}, 'alaralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lraalra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laar': {'l': 'laarl', 'r': 'rr', 'a': 'laara'}, 'lrlaar': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaara'}, 'alrlar': {'l': 'alraala', 'r': 'rr', 'a': 'alrlara'}, 'laaaral': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alaarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlarlar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laraa': {'l': 'lralrlrl', 'r': 'rr', 'a': 'aa'}, 'alrlrl': {'l': 'alr', 'r': 'alrlrlr', 'a': 'lralrlrl'}, 'lrlaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'aa': {'l': 'lralrlrl', 'r': 'rr', 'a': 'aa'}, 'laaarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lralralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlaral': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alarala': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrlraal': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrlraa': {'l': 'alraala', 'r': 'alr', 'a': 'lralraa'}, 'lralral': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laaaar': {'l': 'alraala', 'r': 'rr', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'rr', 'a': 'alaara'}, 'laarlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lraalara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaa': {'l': 'rr', 'r': 'laaaar', 'a': 'laaaaa'}, 'alaaaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laaraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlara': {'l': 'alraala', 'r': 'rr', 'a': 'lrlaraa'}, 'lrlaraaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrl': {'l': 'rr', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'rr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lralrlrl': {'l': 'alr', 'r': 'aa', 'a': 'lralrlrl'}, 'lrlralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alaraalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlarla': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alrala': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrlar': {'l': 'lrlarl', 'r': 'rr', 'a': 'lrlara'}, 'alralar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralaaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlaa': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaar': {'l': 'alraala', 'r': 'rr', 'a': 'laaara'}, 'lrlrlaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lraaaaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'rr', 'a': 'lralra'}, 'laarla': {'l': 'alr', 'r': 'lralraa', 'a': 'alraala'}, 'lra': {'l': 'lral', 'r': 'rr', 'a': 'lraa'}, 'lralar': {'l': 'alraala', 'r': 'alr', 'a': 'lralraa'}, 'lralaa': {'l': 'alr', 'r': 'lralraa', 'a': 'alraala'}, 'lralaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'laaaaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alrlaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlrlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaraal': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'laarlaar': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlaarl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alralrl': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'alaaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaaaa': {'l': 'alr', 'r': 'lralraa', 'a': 'lralrlrl'}, 'lraa': {'l': 'lraal', 'r': 'rr', 'a': 'lraaa'}, 'alra': {'l': 'alral', 'r': 'rr', 'a': 'alraa'}, 'lrlarlra': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'rr', 'a': 'lrlra'}, 'lrlraalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaralr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'rra': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alrlrlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laaaara': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'alaraaaa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'laaraalr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlaraa': {'l': 'lralrlrl', 'r': 'alr', 'a': 'lralraa'}, 'laaarlr': {'l': 'lralrlrl', 'r': 'alr', 'a': 'aa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.311295          None            None              []          0         0         0          214                    None                                    None             401.659993        False     0.25   0.05
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1194767951965332  s
EQ test took  0.0003330707550048828  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11806058883666992  s
EQ test took  0.0690922737121582  s


epsilon= 0.1 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3097412586212158
overall guided extraction time took: 0.05999999999994543
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('aa', 0.0)
('lr', 0.0)
('rra', 0.010000000000218279)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.05814361572265625
number of states of the dfa: 8
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'lr'}, 'lr': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'a': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'rr', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'rra': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.309741          None            None              []          0         0         0            8                    None                                    None               0.058144         True      0.1    0.5
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12192940711975098  s
EQ test took  0.0007271766662597656  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11893153190612793  s
EQ test took  0.09885954856872559  s


epsilon= 0.1 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.34445881843566895
overall guided extraction time took: 0.5199999999999818
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('rr', 0.0)
('lr', 0.01999999999998181)
('aa', 0.04999999999972715)
('lra', 0.0500000000001819)
('lrlr', 0.0500000000001819)
('lrlra', 0.07000000000016371)
('lrrraa', 0.07999999999992724)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.5127253532409668
number of states of the dfa: 16
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'lrr', 'a': 'a'}, 'lr': {'l': 'lrl', 'r': 'lrr', 'a': 'a'}, 'a': {'l': 'l', 'r': 'lrr', 'a': 'aa'}, 'l': {'l': 'lrr', 'r': 'lr', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'lrr', 'a': 'aa'}, 'lrlrl': {'l': 'lrr', 'r': 'aa', 'a': 'lrlrl'}, 'lrr': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lrrra': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lrrraa': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lrlra': {'l': 'lrlrl', 'r': 'lrr', 'a': 'aa'}, 'rr': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lrlr': {'l': 'lrlrl', 'r': 'lrr', 'a': 'a'}, 'lrrr': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lra': {'l': 'lrlrl', 'r': 'lrr', 'a': 'aa'}, 'r': {'l': 'lrr', 'r': 'lrr', 'a': 'lrr'}, 'lrl': {'l': 'lrr', 'r': 'lrlr', 'a': 'lrlrl'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.344459          None            None              []          0         0         0           16                    None                                    None               0.512725         True      0.1   0.25
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1183922290802002  s
EQ test took  0.0006835460662841797  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11679553985595703  s
EQ test took  0.1285080909729004  s


epsilon= 0.1 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3676156997680664
Interrupted due to time limit
overall guided extraction time took: 403.05999999999995
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.009999999999763531)
('lr', 0.009999999999763531)
('aa', 0.0500000000001819)
('rra', 0.0500000000001819)
('lra', 0.17000000000007276)
('lraa', 0.22000000000025466)
('alraaa', 0.2300000000000182)
('alr', 0.24000000000023647)
('lralr', 0.23999999999978172)
('alar', 0.2699999999999818)
('lralrlra', 0.30999999999994543)
('lar', 0.3200000000001637)
('lrlr', 0.3100000000004002)
('laar', 0.31999999999970896)
('lrlar', 0.3900000000003274)
('laara', 0.3799999999996544)
('lara', 0.44000000000005457)
('larlr', 0.42000000000007276)
('lraaa', 0.41000000000030923)
('lrlra', 0.4499999999998181)
('laraa', 0.4800000000000182)
('laaar', 0.4899999999997817)
('alara', 0.5299999999997453)
('alaar', 0.5100000000002183)
('lrlaar', 0.5300000000002001)
('lralar', 0.5500000000001819)
('alarlr', 0.6099999999996726)
('laarlr', 0.6100000000001273)
('laralr', 0.6599999999998545)
('alaraa', 0.6199999999998909)
('laaaar', 0.6799999999998363)
('laraaa', 0.6700000000000728)
('lraalr', 0.7100000000000364)
('lralra', 0.7000000000002728)
('laaara', 0.7400000000002365)
('larlar', 0.75)
('lrlraa', 0.7799999999997453)
('lrlrlr', 0.7100000000000364)
('laaraa', 0.7800000000002001)
('larlra', 0.7899999999999636)
('lraaaa', 0.8699999999998909)
('lrlara', 0.9099999999998545)
('alaara', 0.9400000000000546)
('lralraa', 0.930000000000291)
('lralara', 0.9400000000000546)
('lrlraaa', 1.0)
('lralrlr', 0.9899999999997817)
('laaaraa', 1.0099999999997635)
('lrlrlra', 1.0300000000002)
('larlara', 1.0399999999999636)
('lraaaaa', 1.050000000000182)
('laraalr', 1.0900000000001455)
('alaaar', 1.0700000000001637)
('lrlarlr', 1.0899999999996908)
('lraalar', 1.1400000000003274)
('lraalra', 1.1300000000001091)
('larlrlr', 1.1799999999998363)
('larlaar', 1.1799999999998363)
('laaralr', 1.25)
('lrlrlar', 1.2199999999998)
('alaarlr', 1.2199999999998)
('alarlar', 1.2800000000002)
('alaaara', 1.2600000000002183)
('alaaaar', 1.2300000000000182)
('alaraaa', 1.3100000000004002)
('alaaaraa', 1.3400000000001455)
('lralaar', 1.3799999999996544)
('alaaraa', 1.400000000000091)
('lrlaraa', 1.330000000000382)
('alarlra', 1.3399999999996908)
('laaaaar', 1.5)
('laaraaa', 1.4899999999997817)
('laaaara', 1.449999999999818)
('lrlaaar', 1.4900000000002365)
('lraaalr', 1.4700000000002547)
('laralar', 1.5599999999999454)
('lrlralr', 1.5599999999999454)
('larlraa', 1.599999999999909)
('alaralr', 1.569999999999709)
('larlraaa', 1.6099999999996726)
('laaarlar', 1.6700000000000728)
('lrlarlar', 1.6799999999998363)
('laaarlr', 1.6900000000000546)
('laralra', 1.7100000000000364)
('lrlrlraa', 1.6300000000001091)
('alaaaara', 1.6900000000000546)
('laarlra', 1.7699999999999818)
('laaralra', 1.7899999999999636)
('laaaraaa', 1.7899999999999636)
('lrlaara', 1.8900000000003274)
('laaralar', 1.849999999999909)
('alaaarlr', 1.9500000000002728)
('laraaaa', 1.8299999999999272)
('alaarlar', 1.75)
('laarlar', 1.849999999999909)
('lralaara', 1.9600000000000364)
('lraaaaaa', 1.9700000000002547)
('lrlrlaar', 1.9200000000000728)
('larlralr', 1.9699999999998)
('lralaraa', 2.0299999999997453)
('lraalraa', 2.0700000000001637)
('laaaaara', 2.050000000000182)
('larlaraa', 2.0799999999999272)
('laraalar', 2.0)
('lraalara', 1.9699999999998)
('lrlralar', 2.1100000000001273)
('alaaralr', 2.099999999999909)
('alaralra', 2.0300000000002)
('laaaaraa', 2.0599999999999454)
('laarlraa', 2.0700000000001637)
('alaralar', 2.1599999999998545)
('laraaaaa', 2.269999999999982)
('lrlrlara', 2.3099999999999454)
('laaaaaar', 2.2399999999997817)
('lrlaaara', 2.200000000000273)
('lralarlr', 2.300000000000182)
('alarlraa', 2.2400000000002365)
('laarlaar', 2.2200000000002547)
('lrlraalr', 2.3600000000001273)
('lraaaalr', 2.3600000000001273)
('lraalrlr', 2.4400000000000546)
('lrlraaaa', 2.3799999999996544)
('larlarlr', 2.450000000000273)
('laaraalr', 2.4099999999998545)
('lrlralra', 2.4600000000000364)
('alarlara', 2.4400000000000546)
('alaraalr', 2.599999999999909)
('lralaaar', 2.5599999999999454)
('lralralr', 2.5399999999999636)
('laraaalr', 2.549999999999727)
('laralaar', 2.5799999999999272)
('lrlaarlr', 2.5399999999999636)
('laralraa', 2.6399999999998727)
('alaraaaa', 2.5)
('alaarlra', 2.480000000000018)
('lraaalra', 2.4900000000002365)
('alaaaaar', 2.7100000000000364)
('lralraaa', 2.730000000000018)
('larlrlar', 2.7599999999997635)
('lrlaraaa', 2.6799999999998363)
('laralara', 2.7200000000002547)
('laarlara', 2.6700000000000728)
('laaraaaa', 2.8099999999999454)
('laaarlra', 2.7800000000002)
('lrlaaraa', 2.880000000000109)
('lraaalar', 2.880000000000109)
('alarlrlr', 2.8600000000001273)
('lrlarlra', 2.880000000000109)
('laaaarlr', 3.0)
('lralrlar', 2.980000000000018)
('lraalaar', 2.769999999999982)
('alarlaar', 2.849999999999909)
('larlrlra', 2.8400000000001455)
('lrlaralr', 2.799999999999727)
('lralralra', 2.8899999999998727)
('lrlrlrlr', 2.9100000000003092)
('laaraalra', 2.900000000000091)
('alaaaaraa', 2.9600000000000364)
('laaaaaraa', 2.9600000000000364)
('lralraaaa', 3.0299999999997453)
('larlaara', 3.019999999999982)
('laaraaaaa', 2.9899999999997817)
('larlrlara', 3.0399999999999636)
('laralaara', 3.150000000000091)
('alaaraaa', 3.349999999999909)
('laraalra', 3.4100000000003092)
('alaaaraaa', 3.230000000000018)
('laarlrlra', 3.3600000000001273)
('laralrlr', 3.4400000000000546)
('larlaaar', 3.3400000000001455)
('lraalaara', 3.4099999999998545)
('laaraaalr', 3.519999999999982)
('laraaalar', 3.5399999999999636)
('laaaralr', 3.5299999999997453)
('lralaralr', 3.5)
('laaaraaaa', 3.519999999999982)
('lrlaaaar', 3.4700000000002547)
('lrlralara', 3.5399999999999636)
('laarlrlr', 3.549999999999727)
('laraaaaaa', 3.5799999999999272)
('alaaralra', 3.5900000000001455)
('laarlarlr', 3.6900000000000546)
('lrlralaar', 3.630000000000109)
('alarlrlra', 3.569999999999709)
('lraalaaar', 3.6399999999998727)
('lraalrlar', 3.4600000000000364)
('larlaaraa', 3.4400000000000546)
('lrlrlarlr', 3.7200000000002547)
('alarlarlr', 3.730000000000018)
('lrlaaraaa', 3.75)
('alaaraaaa', 3.6900000000000546)
('lralaarlr', 3.800000000000182)
('lrlarlrlr', 3.75)

Time taken to extract lstar-dfa: 403.0520830154419
number of states of the dfa: 289
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'laral': {'l': 'l', 'r': 'laralr', 'a': 'larala'}, 'lralraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'lralraaa'}, 'lraaalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alaaraaa'}, 'alarlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alr': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'alra'}, 'alaaaraaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lrlarl': {'l': 'l', 'r': 'lrlarlr', 'a': 'laaraaal'}, 'alar': {'l': 'alarl', 'r': 'rr', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laarlrlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'alarlraa'}, 'lraal': {'l': 'l', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'l', 'r': 'lraaalr', 'a': 'laaraaal'}, 'alaraa': {'l': 'laaraaal', 'r': 'l', 'a': 'alaraaa'}, 'laaral': {'l': 'l', 'r': 'laaralr', 'a': 'laaraaal'}, 'larlraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlralara': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alaa': {'l': 'l', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'laarlrl', 'r': 'l', 'a': 'laarlra'}, 'alaaar': {'l': 'laaraaal', 'r': 'l', 'a': 'alaaara'}, 'larlaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lara': {'l': 'laral', 'r': 'rr', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laara': {'l': 'laaral', 'r': 'rr', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'l', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laraaalar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alaraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaraaal': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlral': {'l': 'l', 'r': 'lrlralr', 'a': 'lrlrala'}, 'lraalaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'laaaaara'}, 'lralraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larl': {'l': 'rr', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'laaraal', 'r': 'l', 'a': 'laaraaa'}, 'laraal': {'l': 'l', 'r': 'laraalr', 'a': 'laaraaal'}, 'alaarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaaarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaara': {'l': 'laaraaal', 'r': 'l', 'a': 'laaaraa'}, 'laralar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'larlrlar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laralaa': {'l': 'l', 'r': 'laralaar', 'a': 'lrlrlrlrl'}, 'laaralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'rr', 'r': 'lrlar', 'a': 'lrlaa'}, 'lraalaaar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alarlrlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraalar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laraaaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laraaa': {'l': 'laraaal', 'r': 'l', 'a': 'laraaaa'}, 'larlra': {'l': 'laaraaal', 'r': 'l', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlr': {'l': 'laaraaal', 'r': 'l', 'a': 'lrlrlra'}, 'lraaala': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alaaaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lral': {'l': 'rr', 'r': 'lralr', 'a': 'lrala'}, 'alaaraaaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lralarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'rr', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraalrlar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laralraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlrlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlrl': {'l': 'l', 'r': 'larlrlr', 'a': 'larlrla'}, 'alarlr': {'l': 'alarlrl', 'r': 'l', 'a': 'alarlra'}, 'alaaralra': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alraaa': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'aa'}, 'larlaaar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laarlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlrlrl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lralara': {'l': 'laaraaal', 'r': 'l', 'a': 'alarlraa'}, 'lrlrl': {'l': 'rr', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'laaralar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlralar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaralar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaaaa': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraala': {'l': 'l', 'r': 'lraalar', 'a': 'lraalaa'}, 'laralaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'l', 'a': 'alaraa'}, 'lrlaaa': {'l': 'l', 'r': 'lrlaaar', 'a': 'laaraaal'}, 'laraalra': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lralrl': {'l': 'rr', 'r': 'laarlrlr', 'a': 'laaraaal'}, 'lraaaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaraaalr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lralaral': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alarla': {'l': 'l', 'r': 'alarlar', 'a': 'laaraaal'}, 'lar': {'l': 'larl', 'r': 'rr', 'a': 'lara'}, 'lrlrlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlaralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laarlarlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lrlrlar': {'l': 'laaraaal', 'r': 'l', 'a': 'alarlraa'}, 'laraalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaaa': {'l': 'l', 'r': 'alaaaar', 'a': 'laaraaal'}, 'laaaaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaara': {'l': 'alaaral', 'r': 'l', 'a': 'alaaraa'}, 'la': {'l': 'rr', 'r': 'lar', 'a': 'laa'}, 'lraalr': {'l': 'lraalrl', 'r': 'l', 'a': 'lraalra'}, 'lralra': {'l': 'lralral', 'r': 'l', 'a': 'lralraa'}, 'alarlar': {'l': 'laaraaal', 'r': 'l', 'a': 'alarlraa'}, 'laaaaa': {'l': 'l', 'r': 'laaaaar', 'a': 'laaraaal'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'ala'}, 'alaralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaaalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaraal': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alarlrlra': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alaarl': {'l': 'l', 'r': 'alaarlr', 'a': 'laaraaal'}, 'alarlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laralaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laarlrlra': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laarlrl': {'l': 'alaa', 'r': 'laarlrlr', 'a': 'lrlrlrlrl'}, 'laarl': {'l': 'l', 'r': 'laarlr', 'a': 'laarla'}, 'larlaaa': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaaraaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'alarlraa'}, 'lrlralaar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'larlaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alarlarlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaaal': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alraa': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'alarlraa'}, 'alarl': {'l': 'l', 'r': 'alarlr', 'a': 'alarla'}, 'lralaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'larlarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaraaaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alaaarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralrlra': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'aa'}, 'lrlrlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'alarlraa'}, 'lrlrlaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lralaarl': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'laaaraaa'}, 'larlr': {'l': 'larlrl', 'r': 'rr', 'a': 'larlra'}, 'lraalaara': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alarlrl': {'l': 'l', 'r': 'alarlrlr', 'a': 'lrlrlrlrl'}, 'alaaa': {'l': 'l', 'r': 'alaaar', 'a': 'alaaaa'}, 'laraaalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlrlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaral': {'l': 'l', 'r': 'alaralr', 'a': 'laaraaal'}, 'laa': {'l': 'rr', 'r': 'laar', 'a': 'laaa'}, 'lrlrlrlrl': {'l': 'l', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'lralrlar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralrla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalaa': {'l': 'l', 'r': 'lraalaar', 'a': 'laaraaal'}, 'lraalrlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlar': {'l': 'laaraaal', 'r': 'l', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'larlaara'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'lra'}, 'laraalar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laarlar': {'l': 'laaraaal', 'r': 'l', 'a': 'alarlraa'}, 'lralaaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlaa': {'l': 'l', 'r': 'larlaar', 'a': 'laaraaal'}, 'laarala': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlrala': {'l': 'l', 'r': 'lrlralar', 'a': 'laaraaal'}, 'lralaarlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lrlrla': {'l': 'l', 'r': 'lrlrlar', 'a': 'laaraaal'}, 'ala': {'l': 'rr', 'r': 'alar', 'a': 'alaa'}, 'laaraaaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaaa': {'l': 'laaraaal', 'r': 'l', 'a': 'lraaaaa'}, 'lralaralr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'alaralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraalra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laar': {'l': 'laarl', 'r': 'rr', 'a': 'laara'}, 'laralrl': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalaaa': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlaar': {'l': 'laaraaal', 'r': 'l', 'a': 'lrlaara'}, 'laaaral': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlarlar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraalrla': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laraa': {'l': 'laraal', 'r': 'l', 'a': 'laraaa'}, 'lrlaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'lrlaaraa'}, 'lraaalar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'aa': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'aa'}, 'larlrla': {'l': 'l', 'r': 'larlrlar', 'a': 'lrlrlrlrl'}, 'laaarl': {'l': 'l', 'r': 'laaarlr', 'a': 'laaraaal'}, 'lralralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaarlar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaral': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'alarala': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laraaaaaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laralara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlraal': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laralr': {'l': 'laaraaal', 'r': 'l', 'a': 'laralra'}, 'lrlraa': {'l': 'laaraaal', 'r': 'l', 'a': 'lrlraaa'}, 'lralral': {'l': 'l', 'r': 'lralralr', 'a': 'lrlrlrlrl'}, 'laaaraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaaar': {'l': 'laaraaal', 'r': 'l', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'l', 'a': 'alaara'}, 'laraaala': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlarlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lraalara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaa': {'l': 'l', 'r': 'laaaar', 'a': 'laaaaa'}, 'laaraalra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlaaraa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'larlralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alaaaara'}, 'laaraaa': {'l': 'laaraaal', 'r': 'l', 'a': 'laaraaaa'}, 'larlral': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlara': {'l': 'laaraaal', 'r': 'l', 'a': 'lrlaraa'}, 'larala': {'l': 'l', 'r': 'laralar', 'a': 'laralaa'}, 'lrlaraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrl': {'l': 'rr', 'r': 'lrlr', 'a': 'lrla'}, 'lralralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaaaar': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaraalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlar': {'l': 'lrlarl', 'r': 'rr', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larla': {'l': 'l', 'r': 'larlar', 'a': 'larlaa'}, 'lralaaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laarlaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrala': {'l': 'l', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaaraaa': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'laraaaaa'}, 'lrlrlaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alarlaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlralaa': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraaaaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'rr', 'a': 'lralra'}, 'laarla': {'l': 'l', 'r': 'laarlar', 'a': 'laaraaal'}, 'laraaal': {'l': 'l', 'r': 'alarlraa', 'a': 'laaraaal'}, 'lrlrlarl': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laarlarl': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lraalrl': {'l': 'l', 'r': 'alarlraa', 'a': 'laaraaal'}, 'lra': {'l': 'lral', 'r': 'rr', 'a': 'lraa'}, 'lralar': {'l': 'laaraaal', 'r': 'l', 'a': 'lralara'}, 'lralaa': {'l': 'l', 'r': 'lralaar', 'a': 'laaraaal'}, 'lralaar': {'l': 'laaraaal', 'r': 'l', 'a': 'alarlraa'}, 'larlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaa': {'l': 'l', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'laaaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaraal': {'l': 'l', 'r': 'laaraalr', 'a': 'lrlrlrlrl'}, 'alarlaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laarlaar': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laraala': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlrlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alaaaraa'}, 'alaaral': {'l': 'l', 'r': 'alaaralr', 'a': 'lrlrlrlrl'}, 'laarlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'larlarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'rr', 'a': 'lraaa'}, 'alra': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'laarlrlr'}, 'alarlarl': {'l': 'alaa', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'laaaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaaaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrlrl'}, 'lrlarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'rr', 'a': 'lrlra'}, 'lrlraalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laralrlr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'laaaralr': {'l': 'lrlrlrlrl', 'r': 'alaa', 'a': 'aa'}, 'rra': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaraalr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaarlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'alarlraa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.367616          None            None              []          0         0         0          289                    None                                    None             403.052083        False      0.1    0.1
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.13033342361450195  s
EQ test took  0.0007157325744628906  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1274549961090088  s
EQ test took  0.14554548263549805  s


epsilon= 0.1 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.4081888198852539
Interrupted due to time limit
overall guided extraction time took: 401.90999999999985
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.03000000000020009)
('aa', 0.02999999999974534)
('lr', 0.03999999999996362)
('lra', 0.11000000000012733)
('lraa', 0.23999999999978172)
('lraaa', 0.36999999999989086)
('raalraaaa', 0.44000000000005457)
('alraaaa', 0.5300000000002001)
('alr', 0.5)
('lar', 0.5)
('lara', 0.5399999999999636)
('lrlr', 0.5900000000001455)
('laar', 0.599999999999909)
('alar', 0.6600000000003092)
('laraa', 0.6999999999998181)
('lrlar', 0.7599999999997635)
('laaar', 0.75)
('laara', 0.8299999999999272)
('alaar', 0.900000000000091)
('alara', 0.9699999999997999)
('lralr', 0.9800000000000182)
('lraalr', 1.0799999999999272)
('lrlra', 1.069999999999709)
('larlr', 1.1100000000001273)
('laarlr', 1.150000000000091)
('laralr', 1.199999999999818)
('laraaa', 1.2699999999999818)
('laaaar', 1.2699999999999818)
('lrlaar', 1.25)
('laaraa', 1.400000000000091)
('larlra', 1.2900000000004184)
('lralra', 1.3699999999998909)
('lraaaa', 1.5300000000002)
('larlar', 1.4899999999997817)
('lralar', 1.550000000000182)
('laaara', 1.5599999999999454)
('lrlrlr', 1.5900000000001455)
('lrlara', 1.7000000000002728)
('alaara', 1.6100000000001273)
('alaraa', 1.6100000000001273)
('lrlraa', 1.650000000000091)
('lraalra', 1.849999999999909)
('lraaaaa', 1.900000000000091)
('laarlra', 1.9099999999998545)
('lrlaara', 1.8900000000003274)
('alarlr', 1.9699999999998)
('alaaar', 1.900000000000091)
('lrlaaar', 1.9799999999995634)
('larlara', 2.099999999999909)
('alaralr', 2.0900000000001455)
('laaaraa', 2.230000000000018)
('laaaara', 2.0300000000002)
('lrlralr', 2.1900000000000546)
('alaaaar', 2.2600000000002183)
('laralra', 2.3299999999999272)
('laralar', 2.400000000000091)
('lrlrlar', 2.400000000000091)
('laaraaa', 2.4899999999997817)
('alarlar', 2.450000000000273)
('laaralr', 2.4899999999997817)
('lrlrlra', 2.5)
('lrlarlr', 2.4899999999997817)
('laarlar', 2.449999999999818)
('lralraa', 2.5400000000004184)
('lrlaraa', 2.6900000000000546)
('lralaar', 2.650000000000091)
('lrlraaa', 2.7899999999999636)
('alaraaa', 2.650000000000091)
('larlrlr', 2.75)
('lralrlr', 2.9299999999998363)
('alaaraa', 2.7400000000002365)
('alaaara', 2.8200000000001637)
('lralara', 2.9200000000000728)
('alarlra', 3.019999999999982)
('larlraa', 3.099999999999909)
('alaarlr', 2.869999999999891)
('laaarlr', 2.930000000000291)
('lraalar', 2.980000000000018)
('larlaar', 2.9700000000002547)
('lraalraa', 3.0700000000001637)
('laaaaar', 3.1099999999996726)
('laraalr', 3.1200000000003456)
('lraaalr', 3.1599999999998545)
('laraaaa', 3.150000000000091)
('lrlaarlr', 3.2399999999997817)
('lrlarlar', 3.2400000000002365)
('alaralra', 3.3600000000001273)
('laralara', 3.330000000000382)
('alaaaaar', 3.400000000000091)
('alaaarlr', 3.4700000000002547)
('alaaraaa', 3.4699999999998)
('lrlaaara', 3.519999999999982)
('lraaalra', 3.4900000000002365)
('lrlaralr', 3.599999999999909)
('laralraa', 3.650000000000091)
('lralralr', 3.6299999999996544)
('alaraaaa', 3.699999999999818)
('laaralar', 3.6900000000000546)
('laaaarlr', 3.7399999999997817)
('lraalara', 3.869999999999891)
('alaarlra', 3.7899999999999636)
('lralrlar', 3.8600000000001273)
('lralarlr', 3.9100000000003092)
('lrlrlaar', 3.900000000000091)
('alaraalr', 3.9700000000002547)
('alaaralr', 3.9299999999998363)
('lrlraalr', 4.059999999999945)
('laraaaaa', 4.139999999999873)
('lrlrlraa', 4.179999999999836)
('laaarlar', 4.220000000000255)
('laralrlr', 4.199999999999818)
('lralaraa', 4.179999999999836)
('laarlrlr', 4.2800000000002)
('lrlrlrlr', 4.300000000000182)
('laraalra', 4.329999999999927)
('lrlralra', 4.470000000000255)
('alaaaraa', 4.429999999999836)
('larlraaa', 4.489999999999782)
('laaaaraa', 4.480000000000018)
('laarlraa', 4.650000000000091)
('laarlara', 4.639999999999873)
('lrlraaaa', 4.539999999999964)
('lrlaaraa', 4.809999999999945)
('laaaaara', 4.889999999999873)
('lralaara', 4.7599999999997635)
('laaralra', 4.830000000000382)
('lrlarlra', 4.789999999999964)
('lralraaa', 4.889999999999873)
('larlrlra', 4.989999999999782)
('larlaraa', 4.930000000000291)
('alarlraa', 4.869999999999891)
('lraaaaaa', 4.880000000000109)
('alaaaara', 5.0099999999997635)
('laaaraaa', 5.050000000000182)
('lralrlra', 5.119999999999891)
('laaarlra', 5.0900000000001455)
('laaraaaa', 5.210000000000036)
('lrlaraaa', 5.309999999999491)
('laarlrlra', 5.180000000000291)
('lrlrlara', 5.259999999999309)

Time taken to extract lstar-dfa: 401.9160256385803
number of states of the dfa: 211
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'raal', 'a': 'a'}, 'laral': {'l': 'raal', 'r': 'laralr', 'a': 'larala'}, 'lralraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraaalr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alarlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alr': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'alra'}, 'lrlarl': {'l': 'l', 'r': 'lrlarlr', 'a': 'alarla'}, 'alar': {'l': 'alarl', 'r': 'raal', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laarlrlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraal': {'l': 'raal', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'l', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'alaraa': {'l': 'alarla', 'r': 'l', 'a': 'alaraaa'}, 'laaral': {'l': 'l', 'r': 'laaralr', 'a': 'alarla'}, 'alaarlra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaa': {'l': 'raal', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'laarlrl', 'r': 'raal', 'a': 'laarlra'}, 'alaaar': {'l': 'alarla', 'r': 'l', 'a': 'alaaara'}, 'lara': {'l': 'laral', 'r': 'raal', 'a': 'laraa'}, 'l': {'l': 'raal', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'raal', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'raal', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaraaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlral': {'l': 'l', 'r': 'lrlralr', 'a': 'lrlrlrl'}, 'lrlaaara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lralraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'larl': {'l': 'raal', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'laaraaa'}, 'laraal': {'l': 'l', 'r': 'laraalr', 'a': 'lrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaaarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'laaaraa'}, 'laralar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaralra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alraaaa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'aa'}, 'lrla': {'l': 'raal', 'r': 'lrlar', 'a': 'lrlaa'}, 'lraalar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laraaaaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laraaa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'laraaaa'}, 'larlra': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laaarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'lrlrlra'}, 'alaaaaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lral': {'l': 'raal', 'r': 'lralr', 'a': 'lrala'}, 'lralarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'raal', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laralraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlrl': {'l': 'l', 'r': 'larlrlr', 'a': 'lrlrlrl'}, 'alarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlra'}, 'alraaa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'alarlraa'}, 'raal': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laarlara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'raalraa': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'lrlrlrl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lralara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrl': {'l': 'raal', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'laaralar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraala': {'l': 'l', 'r': 'lraalar', 'a': 'lrlrlrl'}, 'laraalra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaa': {'l': 'raal', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'raal', 'a': 'alaraa'}, 'lrlaaa': {'l': 'l', 'r': 'lrlaaar', 'a': 'lrlrlrl'}, 'lralrl': {'l': 'l', 'r': 'lralrlr', 'a': 'alarla'}, 'lraaaaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lar': {'l': 'larl', 'r': 'raal', 'a': 'lara'}, 'laaaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laaarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrlaralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaaa': {'l': 'l', 'r': 'alaaaar', 'a': 'alarla'}, 'lrlrlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laraalr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lralrlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaara': {'l': 'alarla', 'r': 'l', 'a': 'alaaraa'}, 'la': {'l': 'raal', 'r': 'lar', 'a': 'laa'}, 'lraalr': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'lraalra'}, 'lralra': {'l': 'alarla', 'r': 'raal', 'a': 'lralraa'}, 'alarlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaaa': {'l': 'l', 'r': 'laaaaar', 'a': 'lrlrlrl'}, 'al': {'l': 'raal', 'r': 'alr', 'a': 'ala'}, 'alaralra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaraal': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'alaarl': {'l': 'l', 'r': 'alaarlr', 'a': 'lrlrlrl'}, 'laarlrlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laarlrl': {'l': 'l', 'r': 'laarlrlr', 'a': 'lrlrlrl'}, 'ra': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laarl': {'l': 'raal', 'r': 'laarlr', 'a': 'laarla'}, 'r': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'alaaraaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'larlaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'raal', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'alraa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'alraaa'}, 'alarl': {'l': 'l', 'r': 'alarlr', 'a': 'alarla'}, 'lralaraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralrlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlrlraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laaaraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'larlr': {'l': 'larlrl', 'r': 'raal', 'a': 'larlra'}, 'larlrlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaa': {'l': 'l', 'r': 'alaaar', 'a': 'alaaaa'}, 'lrlrlrlrl': {'l': 'l', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'alaral': {'l': 'l', 'r': 'alaralr', 'a': 'lrlrlrl'}, 'laa': {'l': 'raal', 'r': 'laar', 'a': 'laaa'}, 'lralrla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'larlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lr': {'l': 'lrl', 'r': 'raal', 'a': 'lra'}, 'raa': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laarlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'larlaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laarala': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrlrla': {'l': 'l', 'r': 'alarlraa', 'a': 'alarla'}, 'ala': {'l': 'raal', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'lraaaaa'}, 'alaralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraalra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laar': {'l': 'laarl', 'r': 'raal', 'a': 'laara'}, 'laralrl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrlaar': {'l': 'alarla', 'r': 'raal', 'a': 'lrlaara'}, 'larlara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaarlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'laralra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlarlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laraa': {'l': 'laraal', 'r': 'raal', 'a': 'laraaa'}, 'lrlaara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'aa': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'aa'}, 'laaarl': {'l': 'l', 'r': 'laaarlr', 'a': 'alarla'}, 'lralralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaarlar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaral': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laralara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlraal': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laralr': {'l': 'alarla', 'r': 'raal', 'a': 'laralra'}, 'lrlraa': {'l': 'alarla', 'r': 'l', 'a': 'lrlraaa'}, 'lralral': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laaaraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaar': {'l': 'alarla', 'r': 'raal', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'raal', 'a': 'alaara'}, 'raalr': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laarlra': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lraalara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaa': {'l': 'raal', 'r': 'laaaar', 'a': 'laaaaa'}, 'alaaaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'raalraaa': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laaraaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlara': {'l': 'alarla', 'r': 'l', 'a': 'lrlaraa'}, 'larala': {'l': 'l', 'r': 'laralar', 'a': 'lrlrlrl'}, 'lrlaraaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrl': {'l': 'raal', 'r': 'lrlr', 'a': 'lrla'}, 'lrlralr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaraalr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlarla': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrlar': {'l': 'lrlarl', 'r': 'raal', 'a': 'lrlara'}, 'larla': {'l': 'l', 'r': 'larlar', 'a': 'alarla'}, 'lrala': {'l': 'l', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'raal', 'a': 'laaara'}, 'raalraaaa': {'l': 'raal', 'r': 'raal', 'a': 'raal'}, 'laraaaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlrlaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lraaaaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'raal', 'a': 'lralra'}, 'laarla': {'l': 'l', 'r': 'laarlar', 'a': 'lrlrlrl'}, 'lra': {'l': 'lral', 'r': 'raal', 'a': 'lraa'}, 'lralar': {'l': 'alarla', 'r': 'l', 'a': 'lralara'}, 'lralaa': {'l': 'l', 'r': 'lralaar', 'a': 'lrlrlrl'}, 'lralaar': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'larlraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaa': {'l': 'raal', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'laaaaara': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lrlraaaa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlaarl': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'larlrlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'alaaral': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'laarlraa': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaaaaa': {'l': 'l', 'r': 'alarlraa', 'a': 'lrlrlrl'}, 'lraa': {'l': 'lraal', 'r': 'raal', 'a': 'lraaa'}, 'alra': {'l': 'lrlrlrl', 'r': 'raal', 'a': 'alraa'}, 'laralrlr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlarlra': {'l': 'lrlrlrlrl', 'r': 'l', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'raal', 'a': 'lrlra'}, 'lrlraalr': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'alaraaaa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'aa'}, 'laaaara': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'lrlaraa': {'l': 'lrlrlrl', 'r': 'l', 'a': 'alarlraa'}, 'raalra': {'l': 'raal', 'r': 'raal', 'a': 'raal'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.408189          None            None              []          0         0         0          211                    None                                    None             401.916026        False      0.1   0.05
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11307382583618164  s
EQ test took  0.0006279945373535156  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12562155723571777  s
EQ test took  0.13812994956970215  s


epsilon= 0.05 delta= 0.5 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.3806438446044922
overall guided extraction time took: 0.15999999999985448
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.009999999999308784)
('aa', 0.0)
('rr', 0.0)
('lr', 0.010000000000218279)
('alr', 0.019999999999527063)
('lrlr', 0.02999999999974534)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.16141939163208008
number of states of the dfa: 12
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'lrlrl'}, 'aa': {'l': 'lrlrl', 'r': 'rr', 'a': 'aa'}, 'alr': {'l': 'lrlrl', 'r': 'rr', 'a': 'aa'}, 'lrlrl': {'l': 'rr', 'r': 'aa', 'a': 'lrlrl'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'lrlrl'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrlr': {'l': 'lrlrl', 'r': 'rr', 'a': 'aa'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrl': {'l': 'rr', 'r': 'aa', 'a': 'lrlrl'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.380644          None            None              []          0         0         0           12                    None                                    None               0.161419         True     0.05    0.5
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11018228530883789  s
EQ test took  0.000629425048828125  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12655949592590332  s
EQ test took  0.18169140815734863  s


epsilon= 0.05 delta= 0.25 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.42229461669921875
overall guided extraction time took: 27.5
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.0)
('aa', 0.0)
('lr', 0.0)
('lra', 0.010000000000218279)
('lrlraa', 0.03999999999996362)
('rar', 0.010000000000218279)
('alr', 0.07000000000061846)
('lar', 0.07999999999992724)
('lrlr', 0.07999999999992724)
('alra', 0.08000000000083674)
('laar', 0.0999999999994543)
('lraa', 0.08999999999923602)
('lralr', 0.11999999999989086)
('alar', 0.13000000000010914)
('lraaa', 0.13000000000010914)
('lara', 0.14000000000032742)
('alaar', 0.13999999999941792)
('larlr', 0.15999999999985448)
('laaar', 0.13999999999941792)
('alraa', 0.15999999999985448)
('lrlar', 0.17000000000007276)
('alara', 0.18999999999959982)
('alrlr', 0.18000000000029104)
('laralr', 0.19000000000050932)
('larlaar', 0.21000000000003638)
('laraa', 0.21000000000003638)
('alaarlr', 0.22000000000025466)
('laraaa', 0.22999999999956344)
('alralr', 0.21000000000003638)
('laara', 0.23000000000047294)
('larlra', 0.2600000000002183)
('alaaar', 0.24000000000069122)
('lrlaar', 0.25)
('lraaaa', 0.2600000000002183)
('lrlara', 0.27999999999974534)
('alarlr', 0.27999999999974534)
('lralra', 0.28000000000065484)
('alarlar', 0.3099999999994907)
('laralra', 0.3000000000001819)
('larlar', 0.32999999999992724)
('alrlra', 0.3400000000001455)
('lraalr', 0.3599999999996726)
('laaaar', 0.36999999999989086)
('laarlr', 0.36999999999989086)
('laaara', 0.36999999999989086)
('lralar', 0.3900000000003274)
('laaaara', 0.4099999999998545)
('laaaaar', 0.4099999999998545)
('alrlar', 0.3999999999996362)
('alaraa', 0.4099999999998545)
('lralaar', 0.3900000000003274)
('alaaaar', 0.43000000000029104)
('laaraa', 0.43000000000029104)
('alrlara', 0.4399999999995998)
('alaaarlr', 0.4399999999995998)
('alraaa', 0.4600000000000364)
('laarlar', 0.4899999999997817)
('alraalr', 0.4499999999998181)
('alaara', 0.43000000000029104)
('lrlaara', 0.4600000000000364)
('alralar', 0.4900000000006912)
('alaralar', 0.4899999999997817)
('lrlaaar', 0.5500000000001819)
('lraaaaa', 0.5100000000002183)
('alaraalr', 0.5500000000001819)
('larlara', 0.5500000000001819)
('lrlaraa', 0.5500000000001819)
('lralara', 0.5600000000004002)
('larlarlr', 0.5700000000006185)
('lrlarlr', 0.569999999999709)
('lraalra', 0.6000000000003638)
('alaaraa', 0.5700000000006185)
('alraaaa', 0.6099999999996726)
('alaaara', 0.6200000000008004)
('alaaaraa', 0.5799999999999272)
('laaaraa', 0.5799999999999272)

Time taken to extract lstar-dfa: 27.505138635635376
number of states of the dfa: 120
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rar', 'a': 'a'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'lrlarl'}, 'alrlra': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alaaraa': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'alr': {'l': 'alrl', 'r': 'rar', 'a': 'alra'}, 'lrlarl': {'l': 'rar', 'r': 'alrlra', 'a': 'lrlarl'}, 'alar': {'l': 'alarl', 'r': 'rar', 'a': 'alara'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lrlarl'}, 'alaraa': {'l': 'alraal', 'r': 'alr', 'a': 'aa'}, 'alaa': {'l': 'rar', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alaaar': {'l': 'alraal', 'r': 'alr', 'a': 'alaaara'}, 'lara': {'l': 'laral', 'r': 'rar', 'a': 'laraa'}, 'l': {'l': 'rar', 'r': 'lr', 'a': 'la'}, 'laara': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lrlra': {'l': 'lrlarl', 'r': 'rar', 'a': 'alrlra'}, 'lrlaaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'laaaaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'larl': {'l': 'rar', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lrlarlr': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'laaara': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lrla': {'l': 'rar', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'laraaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'rar': {'l': 'rar', 'r': 'rar', 'a': 'rar'}, 'larlra': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alraal': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lral': {'l': 'rar', 'r': 'lralr', 'a': 'lrala'}, 'lraaa': {'l': 'lrlarl', 'r': 'rar', 'a': 'lraaaa'}, 'alarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alraaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lralara': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alaralar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alral': {'l': 'alr', 'r': 'alrlra', 'a': 'alraal'}, 'alrlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'laaa': {'l': 'rar', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'rar', 'a': 'alaraa'}, 'lrlaaa': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lraaaaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alralr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alarla': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lar': {'l': 'larl', 'r': 'rar', 'a': 'lara'}, 'alraalr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alaaaa': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'alaara': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'la': {'l': 'rar', 'r': 'lar', 'a': 'laa'}, 'lralra': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alarlar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lraalr': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'laaaaa': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'al': {'l': 'rar', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alaraal': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'alaarl': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'ra': {'l': 'rar', 'r': 'rar', 'a': 'rar'}, 'laarl': {'l': 'alr', 'r': 'alrlra', 'a': 'alraal'}, 'r': {'l': 'rar', 'r': 'rar', 'a': 'rar'}, 'a': {'l': 'al', 'r': 'rar', 'a': 'aa'}, 'alraa': {'l': 'alraal', 'r': 'rar', 'a': 'alraaa'}, 'alarl': {'l': 'alr', 'r': 'alrlra', 'a': 'alraal'}, 'larlarl': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'alaaaraa': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'alaaarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'laaaraa': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'larlr': {'l': 'lrlarl', 'r': 'rar', 'a': 'alrlra'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alraal'}, 'alaral': {'l': 'alr', 'r': 'aa', 'a': 'alraal'}, 'laa': {'l': 'rar', 'r': 'laar', 'a': 'laaa'}, 'larlar': {'l': 'alraal', 'r': 'alr', 'a': 'alrlra'}, 'larlaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lr': {'l': 'lrl', 'r': 'rar', 'a': 'lra'}, 'laarlar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'larlaa': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'ala': {'l': 'rar', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lraalra': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'aa'}, 'laar': {'l': 'laarl', 'r': 'rar', 'a': 'laara'}, 'lrlaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'alrlar': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'larlara': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alaarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'laralra': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'laraa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lrlaara': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'aa': {'l': 'lrlarl', 'r': 'rar', 'a': 'aa'}, 'alarala': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'laralr': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lrlraa': {'l': 'lrlarl', 'r': 'rar', 'a': 'aa'}, 'laaaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'alaar': {'l': 'alraal', 'r': 'rar', 'a': 'alaara'}, 'laaaa': {'l': 'alr', 'r': 'laaaar', 'a': 'alraal'}, 'alaaaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lrlara': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lrl': {'l': 'rar', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'lrlarl'}, 'alaraalr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alrala': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lrlar': {'l': 'lrlarl', 'r': 'rar', 'a': 'lrlara'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'alraal'}, 'alralar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'alraal'}, 'lrlarlrl': {'l': 'alr', 'r': 'aa', 'a': 'lrlarlrl'}, 'laaar': {'l': 'lrlarl', 'r': 'rar', 'a': 'laaara'}, 'lralr': {'l': 'lrlarl', 'r': 'rar', 'a': 'alrlra'}, 'laarla': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lra': {'l': 'lral', 'r': 'rar', 'a': 'lraa'}, 'lralar': {'l': 'lrlarl', 'r': 'alr', 'a': 'alrlra'}, 'lralaa': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'lralaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'alrlara': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'alraal'}, 'alaaarl': {'l': 'alr', 'r': 'alrlra', 'a': 'lrlarl'}, 'alaaara': {'l': 'lrlarlrl', 'r': 'alr', 'a': 'alrlra'}, 'larlarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'rar', 'a': 'lraaa'}, 'alra': {'l': 'alral', 'r': 'rar', 'a': 'alraa'}, 'lrlr': {'l': 'lrlarl', 'r': 'rar', 'a': 'lrlra'}, 'laaaara': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}, 'lrlaraa': {'l': 'lrlarl', 'r': 'alr', 'a': 'aa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.422295          None            None              []          0         0         0          120                    None                                    None              27.505139         True     0.05   0.25
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1091310977935791  s
EQ test took  0.0007226467132568359  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1321699619293213  s
EQ test took  0.2517967224121094  s


epsilon= 0.05 delta= 0.1 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.4974524974822998
Interrupted due to time limit
overall guided extraction time took: 402.91000000000076
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.010000000000218279)
('rr', 0.020000000000436557)
('aa', 0.0999999999994543)
('lr', 0.11999999999989086)
('alr', 0.1499999999996362)
('lar', 0.15999999999985448)
('lra', 0.18999999999959982)
('alar', 0.21000000000003638)
('lara', 0.23999999999978172)
('lrlr', 0.27999999999974534)
('alra', 0.26999999999952706)
('lraa', 0.2899999999999636)
('laar', 0.31999999999970896)
('laaar', 0.3400000000001455)
('alraa', 0.32999999999992724)
('alara', 0.3900000000003274)
('laraa', 0.3999999999996362)
('lrlra', 0.4399999999995998)
('lrlar', 0.4399999999995998)
('alaar', 0.4499999999998181)
('larlr', 0.4600000000000364)
('alrlr', 0.5)
('lralr', 0.5199999999995271)
('laara', 0.47999999999956344)
('alraaa', 0.5100000000002183)
('alrlra', 0.5600000000004002)
('lraaa', 0.5799999999999272)
('laaara', 0.569999999999709)
('larlra', 0.6300000000001091)
('alaara', 0.6199999999998909)
('alaraa', 0.6899999999995998)
('lraalr', 0.6899999999995998)
('laaaar', 0.680000000000291)
('laarlr', 0.7200000000002547)
('lralar', 0.7700000000004366)
('lrlaar', 0.7700000000004366)
('larlar', 0.7899999999999636)
('lralra', 0.8400000000001455)
('lrlraa', 0.8400000000001455)
('lrlara', 0.8200000000006185)
('alralr', 0.8500000000003638)
('alarlr', 0.8900000000003274)
('laaraa', 0.9200000000000728)
('alaaar', 0.9000000000005457)
('alraaaa', 0.9200000000000728)
('laralr', 0.9699999999993452)
('alrlar', 0.9899999999997817)
('lraaaa', 1.0200000000004366)
('larlaar', 0.9899999999997817)
('laraaa', 0.9700000000002547)
('lrlrlr', 0.9800000000004729)
('alralar', 1.019999999999527)
('laaralr', 1.0900000000001455)
('larlara', 1.1300000000001091)
('alrlrlr', 1.0600000000004002)
('lralraa', 1.1700000000000728)
('alrlraa', 1.1499999999996362)
('lrlralr', 1.1599999999998545)
('alarlar', 1.2100000000000364)
('alrlaar', 1.2100000000000364)
('laralar', 1.2400000000006912)
('alaarlr', 1.1900000000005093)
('laaaara', 1.2600000000002183)
('lrlaraa', 1.319999999999709)
('lraaalr', 1.3299999999999272)
('lrlarlr', 1.269999999999527)
('laaaaar', 1.2799999999997453)
('lraalar', 1.3400000000001455)
('alralra', 1.3999999999996362)
('laarlra', 1.3500000000003638)
('alaaara', 1.4399999999995998)
('lraaaaa', 1.5)
('laralra', 1.5399999999999636)
('laaaraa', 1.5299999999997453)
('larlraa', 1.4700000000002547)
('laaarlr', 1.5200000000004366)
('lraalra', 1.5200000000004366)
('laaraaa', 1.6000000000003638)
('alaralr', 1.5299999999997453)
('laraalr', 1.6199999999998909)
('lrlaara', 1.6500000000005457)
('laarlar', 1.5600000000004002)
('lrlaaar', 1.6599999999998545)
('lralrlr', 1.7399999999997817)
('lrlraaa', 1.7600000000002183)
('laraaaa', 1.75)
('alarlra', 1.680000000000291)
('alaraaa', 1.75)
('alaaaar', 1.8500000000003638)
('larlrlr', 1.8699999999998909)
('alraalr', 1.8599999999996726)
('alaaraa', 1.9000000000005457)
('lralara', 1.8900000000003274)
('lrlrlar', 1.9600000000000364)
('laaraaaa', 1.980000000000473)
('alrlara', 1.9700000000002547)
('lrlrlra', 2.0)
('alrlaara', 1.9700000000002547)
('alaaarlr', 1.8900000000003274)
('alaaaaar', 1.9000000000005457)
('lraaaaaa', 1.9600000000000364)
('lralaar', 1.9700000000002547)
('laarlaar', 1.9600000000000364)
('lralrlra', 1.949999999999818)
('laralrlr', 1.9400000000005093)
('lraalrlr', 2.0)
('alralaar', 2.069999999999709)
('larlrlar', 2.100000000000364)
('alrlaaar', 2.030000000000655)
('alaraalr', 2.0900000000001455)
('laarlraa', 2.0999999999994543)
('alarlraa', 2.139999999999418)
('lrlaaara', 2.110000000000582)
('lrlraaaa', 2.119999999999891)
('larlaaar', 2.180000000000291)
('alaarlar', 2.1699999999991633)
('lraaalra', 2.25)
('larlralr', 2.2799999999997453)
('lrlrlrlr', 2.2600000000002183)
('laralara', 2.369999999999891)
('laarlara', 2.360000000000582)
('alaaaara', 2.3100000000004)
('lralaraa', 2.399999999999636)
('lrlaraaa', 2.4799999999995634)
('alaralra', 2.5)
('lrlralra', 2.4500000000007276)
('alrlaraa', 2.5200000000004366)
('laraalra', 2.6700000000000728)
('alaraaaa', 2.6599999999998545)
('alaarlra', 2.5799999999999272)
('larlrlra', 2.7100000000000364)
('laaralra', 2.699999999999818)
('larlaraa', 2.7399999999997817)
('lrlaaraa', 2.7200000000002547)
('lraalara', 2.769999999999527)
('alrlraaa', 2.7399999999997817)
('lrlarlra', 2.8099999999994907)
('alraaaaa', 2.850000000000364)
('larlaara', 2.610000000000582)
('alrlrlra', 2.610000000000582)
('lraalraa', 2.6400000000003274)
('laralraa', 2.6099999999996726)
('alralraa', 2.6099999999996726)
('laraaaaa', 2.619999999999891)
('larlraaa', 2.7600000000002183)
('larlaaara', 2.7100000000000364)
('alarlara', 2.7399999999997817)
('alraalra', 2.7600000000002183)
('lralraaa', 2.6900000000005093)
('laaarlra', 2.759999999999309)
('alaaraaa', 2.7899999999999636)
('lralaara', 2.7899999999999636)
('alralara', 2.8299999999999272)
('alaralraa', 2.8799999999991996)
('alaaraaaa', 2.9099999999998545)
('lrlaaaraa', 2.8400000000001455)
('alaaaraa', 2.9200000000000728)
('alaaaaara', 2.9399999999996)
('lrlrlara', 2.9799999999995634)
('laaarlara', 2.9799999999995634)
('laaaralr', 2.9000000000005457)
('lralarlr', 2.949999999999818)
('laaaaara', 2.980000000000473)
('lrlraalr', 2.949999999999818)
('alaralar', 2.9700000000002547)
('alaaralr', 2.9899999999997817)
('alraalar', 3.0100000000002183)
('alraaalr', 3.0399999999999636)
('laaraalr', 2.9700000000002547)
('larlarlr', 3.069999999999709)
('alarlaar', 3.139999999999418)
('lrlarlar', 3.1099999999996726)
('alrlarlr', 3.139999999999418)
('laarlrlr', 3.110000000000582)
('laaralar', 3.149999999999636)
('lrlaaaar', 3.219999999999345)
('laaarlar', 3.2200000000002547)
('laaaarlr', 3.1900000000005093)
('laaaaaar', 3.2799999999997453)
('lraalaar', 3.259999999999309)
('lrlaarlr', 3.3100000000004)
('lraaalar', 3.2899999999999636)
('lralaaar', 3.319999999999709)
('lralralr', 3.339999999999236)
('lraaaalr', 3.360000000000582)
('laralaar', 3.3900000000003274)
('lrlrlaar', 3.380000000000109)
('lrlralar', 3.4099999999998545)
('alrlrlar', 3.380000000000109)
('alarlrlr', 3.4200000000000728)
('lrlaralr', 3.4200000000000728)
('lralrlar', 3.5399999999999636)
('laraalar', 3.5200000000004366)
('alralrlr', 3.519999999999527)
('laaaaraa', 3.4899999999997817)
('alarlraaa', 3.5799999999999272)
('laralaara', 3.5799999999999272)
('alrlralr', 3.6500000000005457)
('laaaraaa', 3.630000000000109)

Time taken to extract lstar-dfa: 402.90916872024536
number of states of the dfa: 296
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'alrlra': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraa'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'larala'}, 'lralraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lraaalr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alaaraaa'}, 'alr': {'l': 'alrl', 'r': 'rr', 'a': 'alra'}, 'alarlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlarl': {'l': 'alr', 'r': 'lrlarlr', 'a': 'alraala'}, 'alar': {'l': 'alarl', 'r': 'l', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'alrlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'alr', 'r': 'lraaalr', 'a': 'alraala'}, 'alaraa': {'l': 'alraala', 'r': 'alr', 'a': 'alaraaa'}, 'laaral': {'l': 'alr', 'r': 'laaralr', 'a': 'alraala'}, 'alaarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaa': {'l': 'l', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'alraala', 'r': 'alr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaar': {'l': 'alraala', 'r': 'alr', 'a': 'alaaara'}, 'larlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaa': {'l': 'alr', 'r': 'alrlaar', 'a': 'alraala'}, 'lara': {'l': 'laral', 'r': 'l', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'alr', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'l', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'lrlaaara'}, 'alralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlral': {'l': 'alr', 'r': 'lrlralr', 'a': 'alraala'}, 'alaralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lraalaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lralaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lralraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larl': {'l': 'l', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'alraala', 'r': 'alr', 'a': 'laaraaa'}, 'laraal': {'l': 'laral', 'r': 'laraalr', 'a': 'alraala'}, 'alaarla': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaara': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraaa'}, 'laralar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alrlaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraaal': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'l', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lraaaalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laralaa': {'l': 'laral', 'r': 'laralaar', 'a': 'lrlrlrlrl'}, 'alarlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlral': {'l': 'alrlra', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laraaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'laraaaa'}, 'larlra': {'l': 'alraala', 'r': 'alr', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alarlraa'}, 'alraaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlr': {'l': 'alraala', 'r': 'alr', 'a': 'alrlraaa'}, 'lraaala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alraal': {'l': 'laral', 'r': 'alraalr', 'a': 'alraala'}, 'alaaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lral': {'l': 'alr', 'r': 'lralr', 'a': 'lrala'}, 'lrlaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'alr', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'larlrl': {'l': 'laral', 'r': 'larlrlr', 'a': 'alraala'}, 'alarlr': {'l': 'alraala', 'r': 'alr', 'a': 'alarlra'}, 'alraaa': {'l': 'alraala', 'r': 'alr', 'a': 'alraaaa'}, 'larlaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alraalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlrl': {'l': 'alr', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlrl': {'l': 'l', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'alaralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaaaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlralar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlralr': {'l': 'lrlrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alral': {'l': 'alr', 'r': 'alralr', 'a': 'alrala'}, 'alrlr': {'l': 'alrlrl', 'r': 'alr', 'a': 'alrlra'}, 'lraala': {'l': 'alr', 'r': 'lraalar', 'a': 'alraala'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'alaral', 'r': 'l', 'a': 'alaraa'}, 'lrlaaa': {'l': 'laral', 'r': 'lrlaaar', 'a': 'alraala'}, 'alrlaaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lralrl': {'l': 'laral', 'r': 'lralrlr', 'a': 'alraala'}, 'lraaaaa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alralr': {'l': 'alraala', 'r': 'alr', 'a': 'alralra'}, 'alarla': {'l': 'alr', 'r': 'alarlar', 'a': 'alraala'}, 'lar': {'l': 'larl', 'r': 'rr', 'a': 'lara'}, 'lrlrlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'alrlraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaarla': {'l': 'laral', 'r': 'laaarlar', 'a': 'lrlrlrlrl'}, 'laaralr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaa': {'l': 'laral', 'r': 'alaaaar', 'a': 'alaaaaa'}, 'laraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laaaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaara': {'l': 'alraala', 'r': 'alr', 'a': 'alaaraa'}, 'la': {'l': 'rr', 'r': 'lar', 'a': 'laa'}, 'lraalr': {'l': 'alraala', 'r': 'alr', 'a': 'lraalra'}, 'lralra': {'l': 'alraala', 'r': 'alr', 'a': 'lralraa'}, 'alarlar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaaaa': {'l': 'alr', 'r': 'laaaaar', 'a': 'alraala'}, 'al': {'l': 'rr', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alaraal': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alaralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'alaarl': {'l': 'alr', 'r': 'alaarlr', 'a': 'alraala'}, 'alarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlrl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laralaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarl': {'l': 'alr', 'r': 'laarlr', 'a': 'laarla'}, 'larlaaa': {'l': 'laral', 'r': 'larlaaar', 'a': 'lrlrlrlrl'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'alaaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'larlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'alraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraaaal': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alraa': {'l': 'alraal', 'r': 'l', 'a': 'alraaa'}, 'alarl': {'l': 'alr', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lralaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alaaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlrlaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlr': {'l': 'larlrl', 'r': 'l', 'a': 'larlra'}, 'lrlaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alaaaa'}, 'alraaalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlrlrlrl': {'l': 'laral', 'r': 'aa', 'a': 'lrlrlrlrl'}, 'alaral': {'l': 'laral', 'r': 'alaralr', 'a': 'alraala'}, 'laa': {'l': 'l', 'r': 'laar', 'a': 'laaa'}, 'laaarlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alarlrl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lralrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralrla': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lraalaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lraalrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlar': {'l': 'alraala', 'r': 'alr', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lr': {'l': 'lrl', 'r': 'rr', 'a': 'lra'}, 'lralaaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laraalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaa': {'l': 'alr', 'r': 'larlaar', 'a': 'larlaaa'}, 'laarala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlrala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlrla': {'l': 'laral', 'r': 'lrlrlar', 'a': 'alraala'}, 'alralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrla': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'ala': {'l': 'l', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'alraala', 'r': 'alr', 'a': 'lraaaaa'}, 'alralraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alaralra'}, 'lraalra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laar': {'l': 'laarl', 'r': 'l', 'a': 'laara'}, 'laralrl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlaar': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaara'}, 'alrlar': {'l': 'alraala', 'r': 'alr', 'a': 'alrlara'}, 'laaaral': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'larlara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alaarlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laralra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laraa': {'l': 'laraal', 'r': 'l', 'a': 'laraaa'}, 'alrlrl': {'l': 'alr', 'r': 'alrlrlr', 'a': 'alraala'}, 'lrlaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lraaalar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'aa': {'l': 'lrlrlrlrl', 'r': 'rr', 'a': 'aa'}, 'larlrla': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laaarl': {'l': 'laral', 'r': 'laaarlr', 'a': 'laaarla'}, 'lralralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlaral': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alarala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laralara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlraal': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laralr': {'l': 'alraala', 'r': 'alr', 'a': 'laralra'}, 'lrlraa': {'l': 'alraala', 'r': 'alr', 'a': 'lrlraaa'}, 'lralral': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laaaar': {'l': 'alraala', 'r': 'alr', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'l', 'a': 'alaara'}, 'laarlra': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lraalara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaa': {'l': 'alr', 'r': 'laaaar', 'a': 'laaaaa'}, 'alarlraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'laaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'larlral': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlara': {'l': 'alraala', 'r': 'alr', 'a': 'lrlaraa'}, 'larala': {'l': 'alr', 'r': 'laralar', 'a': 'laralaa'}, 'lrlaraaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrl': {'l': 'rr', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lrlaaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alaraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlarla': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alrala': {'l': 'alr', 'r': 'alralar', 'a': 'alraala'}, 'lrlar': {'l': 'lrlarl', 'r': 'l', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'larlaa'}, 'alralar': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'lralaaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'lralaa'}, 'lrlaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaar': {'l': 'laaarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlrlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'larlaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alarlaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlrlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lraaaaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lralr': {'l': 'lralrl', 'r': 'alr', 'a': 'lralra'}, 'laarla': {'l': 'laral', 'r': 'laarlar', 'a': 'alraala'}, 'lraalrl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lra': {'l': 'lral', 'r': 'l', 'a': 'lraa'}, 'lralar': {'l': 'alraala', 'r': 'alr', 'a': 'lralara'}, 'lralaa': {'l': 'laral', 'r': 'lralaar', 'a': 'alraala'}, 'lralaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'larlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'alrlara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'alrlrlar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaara': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaraal': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alarlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laarlaar': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaarl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laraala': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'larlrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}, 'alralrl': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'alaaara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'alaaral': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'laarlraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaaaaa': {'l': 'laral', 'r': 'alaaaaar', 'a': 'lrlrlrlrl'}, 'larlarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lraa': {'l': 'lraal', 'r': 'l', 'a': 'lraaa'}, 'laaaaraa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alra': {'l': 'alral', 'r': 'l', 'a': 'alraa'}, 'laralrlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'laaaaaa': {'l': 'laral', 'r': 'alrlraaa', 'a': 'lrlrlrlrl'}, 'lrlarlra': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'l', 'a': 'lrlra'}, 'laaaralr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alaraaaa': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'alrlrlr': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaaara': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaraalr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'aa'}, 'lrlaraa': {'l': 'lrlrlrlrl', 'r': 'alr', 'a': 'alrlraaa'}, 'laaarlr': {'l': 'lrlrlrlrl', 'r': 'laral', 'a': 'alrlraaa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.497452          None            None              []          0         0         0          296                    None                                    None             402.909169        False     0.05    0.1
target: balanced parentheses
query: false


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.10878658294677734  s
EQ test took  0.0006916522979736328  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.11667943000793457  s
EQ test took  0.2639322280883789  s


epsilon= 0.05 delta= 0.05 max_trace_length= 50
query: false
final ltl:  false

Time taken to extract ltl: 0.4940814971923828
Interrupted due to time limit
overall guided extraction time took: 401.3699999999999
generated counterexamples were: (format: (counterexample, counterexample generation time))
('', 0.0)
('a', 0.019999999999527063)
('rr', 0.030000000000654836)
('lr', 0.22000000000025466)
('aa', 0.2600000000002183)
('lra', 0.27999999999974534)
('lraa', 0.38000000000010914)
('lrlr', 0.42999999999938154)
('lraaa', 0.4500000000007276)
('lralr', 0.47999999999956344)
('alr', 0.4399999999995998)
('lar', 0.4600000000000364)
('alar', 0.47999999999956344)
('alra', 0.5199999999995271)
('lara', 0.5299999999997453)
('laar', 0.5799999999999272)
('laaar', 0.6499999999996362)
('larlr', 0.6499999999996362)
('laara', 0.6700000000000728)
('alara', 0.7199999999993452)
('alrlr', 0.7300000000004729)
('lrlar', 0.7899999999999636)
('laraa', 0.819999999999709)
('alaar', 0.8599999999996726)
('alraa', 0.8800000000001091)
('lrlra', 0.9200000000000728)
('lrlara', 0.9900000000006912)
('laarlr', 1.0200000000004366)
('lralra', 1.0799999999999272)
('laaaar', 1.1000000000003638)
('laraaa', 1.1300000000001091)
('lraaaa', 1.1000000000003638)
('larlra', 1.1900000000005093)
('lralar', 1.230000000000473)
('lrlaar', 1.2899999999999636)
('laralr', 1.2700000000004366)
('alaraa', 1.300000000000182)
('alarlr', 1.3599999999996726)
('alrlra', 1.3800000000001091)
('laaraa', 1.4600000000000364)
('lraalr', 1.4700000000002547)
('alaara', 1.550000000000182)
('laaara', 1.5100000000002183)
('alraaa', 1.519999999999527)
('alrlar', 1.5900000000001455)
('larlar', 1.6499999999996362)
('lrlrlr', 1.6300000000001091)
('lrlraa', 1.7600000000002183)
('laraaaa', 1.8299999999999272)
('alrlraa', 1.819999999999709)
('laaaraa', 1.930000000000291)
('alaaara', 1.860000000000582)
('alaaar', 1.9200000000000728)
('alaraaa', 1.9500000000007276)
('alralr', 1.9799999999995634)
('alaarlr', 2.0200000000004366)
('alrlrlr', 2.050000000000182)
('lrlarlr', 2.0599999999994907)
('laarlra', 2.1400000000003274)
('laaralr', 2.0900000000001455)
('alraaaa', 2.139999999999418)
('laraalr', 2.2299999999995634)
('lraaalr', 2.2700000000004366)
('laarlar', 2.2399999999997817)
('laralar', 2.360000000000582)
('laaaaar', 2.4200000000000728)
('lrlraaa', 2.449999999999818)
('lralara', 2.490000000000691)
('larlraa', 2.449999999999818)
('lraaaaa', 2.5299999999997453)
('larlrlr', 2.550000000000182)
('laralra', 2.5600000000004)
('lrlrlra', 2.6200000000008004)
('alaaaar', 2.6599999999998545)
('larlaar', 2.6900000000005093)
('lralaar', 2.75)
('lrlrlar', 2.6900000000005093)
('lralrlr', 2.8100000000004)
('lralraa', 2.8900000000003274)
('lraalra', 2.8900000000003274)
('lrlralr', 2.930000000000291)
('larlara', 2.9400000000005093)
('alarlra', 2.9799999999995634)
('lraalar', 2.9700000000002547)
('alaaraa', 3.0399999999999636)
('alarlar', 3.0600000000004)
('alrlara', 3.100000000000364)
('lrlaraa', 3.130000000000109)
('alralar', 3.119999999999891)
('lrlaara', 3.1700000000000728)
('alralra', 3.230000000000473)
('laaarlr', 3.319999999999709)
('alrlaar', 3.3099999999994907)
('alaralr', 3.4099999999998545)
('laaaara', 3.380000000000109)
('laaraaa', 3.449999999999818)
('alraalr', 3.4399999999996)
('lrlaaar', 3.4099999999998545)
('alrlaara', 3.530000000000655)
('laarlraa', 3.5799999999999272)
('laaaaaar', 3.6400000000003274)
('alaaaaar', 3.719999999999345)
('lrlaaaar', 3.7100000000000364)
('lrlaarlr', 3.699999999999818)
('larlraaa', 3.7399999999997817)
('larlaraa', 3.8100000000004)
('laaaarlr', 3.869999999999891)
('laaaralr', 3.8900000000003274)
('lralarlr', 3.880000000000109)
('alaraaaa', 3.930000000000291)
('alrlaaar', 3.9600000000000364)
('laarlrlr', 4.069999999999709)
('lraaaalr', 4.019999999999527)
('lraalrlr', 4.119999999999891)
('alrlralr', 4.0900000000001455)
('lralralr', 4.0600000000004)
('lralaaar', 4.1899999999996)
('alaaaara', 4.220000000000255)
('lraalara', 4.380000000000109)
('laaralra', 4.420000000000073)
('alarlraa', 4.380000000000109)
('lrlralar', 4.510000000000218)
('laaaaraa', 4.530000000000655)
('lralraaa', 4.519999999999527)
('laraaalr', 4.600000000000364)
('lrlralra', 4.619999999999891)
('alrlaraa', 4.610000000000582)
('laaaraaa', 4.680000000000291)
('laarlaar', 4.760000000000218)
('alarlara', 4.8200000000006185)
('lralaraa', 4.859999999999673)
('lrlaaara', 4.9099999999998545)
('alraaalr', 4.930000000000291)
('lraaaaaa', 4.970000000000255)
('lrlrlaar', 5.009999999999309)
('alaarlar', 4.989999999999782)
('alaarlra', 5.050000000000182)
('lraalraa', 5.020000000000437)
('lraaalra', 5.109999999999673)
('larlralr', 5.280000000000655)
('laaraaaa', 5.199999999999818)
('alralara', 5.1899999999996)
('laralaar', 5.369999999999891)
('laralara', 5.319999999999709)
('alrlrlar', 5.329999999999927)
('larlrlar', 5.4099999999998545)

Time taken to extract lstar-dfa: 401.33575963974
number of states of the dfa: 218
returned flag: False
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': 'a'}, 'laral': {'l': 'alr', 'r': 'laralr', 'a': 'larala'}, 'alrlra': {'l': 'lrlarl', 'r': 'alr', 'a': 'alaaraa'}, 'lraaalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lralraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alaaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alr': {'l': 'alrl', 'r': 'l', 'a': 'alra'}, 'alarlraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlarl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alar': {'l': 'alarl', 'r': 'l', 'a': 'alara'}, 'lrlraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lraal': {'l': 'alr', 'r': 'lraalr', 'a': 'lraala'}, 'lraaal': {'l': 'alr', 'r': 'lraaalr', 'a': 'lrlrlrl'}, 'alaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaraaa'}, 'laaral': {'l': 'alr', 'r': 'laaralr', 'a': 'lrlrlrl'}, 'larlraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaarlra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaa': {'l': 'alr', 'r': 'alaar', 'a': 'alaaa'}, 'laarlr': {'l': 'lrlarl', 'r': 'alr', 'a': 'laarlra'}, 'alrlaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alrlaa': {'l': 'alr', 'r': 'alrlaar', 'a': 'lrlarl'}, 'lara': {'l': 'laral', 'r': 'l', 'a': 'laraa'}, 'l': {'l': 'rr', 'r': 'lr', 'a': 'la'}, 'lrlaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laara': {'l': 'laaral', 'r': 'l', 'a': 'laaraa'}, 'lrlra': {'l': 'lrlral', 'r': 'alr', 'a': 'lrlraa'}, 'lrlaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alaraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlral': {'l': 'alr', 'r': 'lrlralr', 'a': 'lrlarl'}, 'lrlaaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lralraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlralra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larl': {'l': 'l', 'r': 'larlr', 'a': 'larla'}, 'laaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'laaraaa'}, 'laraal': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alaarla': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrlarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaara': {'l': 'lrlarl', 'r': 'alr', 'a': 'laaaraa'}, 'laralar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alrlaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaaara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alraaal': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laaralra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaalra': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'lrla': {'l': 'alr', 'r': 'lrlar', 'a': 'lrlaa'}, 'alraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laralaa': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lraalar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alrlral': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laraaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alaaraa'}, 'larlra': {'l': 'lrlarl', 'r': 'alr', 'a': 'larlraa'}, 'alarlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alraal': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alaaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lral': {'l': 'l', 'r': 'lralr', 'a': 'lrala'}, 'lralarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaa': {'l': 'lraaal', 'r': 'l', 'a': 'lraaaa'}, 'laaraaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larlrl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alarlra'}, 'alraaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlrlrl': {'l': 'alr', 'r': 'aa', 'a': 'lrlrlrl'}, 'lralara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlrl': {'l': 'l', 'r': 'lrlrlr', 'a': 'lrlrla'}, 'alrlralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaaaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrlralar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alral': {'l': 'alr', 'r': 'alralr', 'a': 'alrala'}, 'alrlr': {'l': 'alrlrl', 'r': 'alr', 'a': 'alrlra'}, 'lraala': {'l': 'alr', 'r': 'lraalar', 'a': 'lrlrlrl'}, 'laaa': {'l': 'l', 'r': 'laaar', 'a': 'laaaa'}, 'alara': {'l': 'lrlarl', 'r': 'l', 'a': 'alaraa'}, 'lrlaaa': {'l': 'alr', 'r': 'lrlaaar', 'a': 'lrlarl'}, 'alrlaaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lralrl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lraaaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alarla': {'l': 'alr', 'r': 'alarlar', 'a': 'lrlrlrl'}, 'lar': {'l': 'larl', 'r': 'l', 'a': 'lara'}, 'laaaarl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alraalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alaaaa': {'l': 'alr', 'r': 'alaaaar', 'a': 'lrlarl'}, 'laraalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'la': {'l': 'l', 'r': 'lar', 'a': 'laa'}, 'lralra': {'l': 'lrlarl', 'r': 'alr', 'a': 'lralraa'}, 'lraalr': {'l': 'lrlarl', 'r': 'alr', 'a': 'lraalra'}, 'alarlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'laaaaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlarl'}, 'al': {'l': 'l', 'r': 'alr', 'a': 'ala'}, 'alrl': {'l': 'alr', 'r': 'alrlr', 'a': 'alrla'}, 'alralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lraaaalr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaarl': {'l': 'alr', 'r': 'alaarlr', 'a': 'lrlarl'}, 'alarlara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laralaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlrlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlrl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laarl': {'l': 'alr', 'r': 'laarlr', 'a': 'laarla'}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'larlaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'a': {'l': 'al', 'r': 'rr', 'a': 'aa'}, 'lraalraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaaal': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'alraa': {'l': 'lrlarl', 'r': 'alr', 'a': 'alraaa'}, 'alarl': {'l': 'alr', 'r': 'alarlr', 'a': 'alarla'}, 'alrlaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lralaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlaa': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laaaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'larlr': {'l': 'lrlarl', 'r': 'l', 'a': 'larlra'}, 'alraaalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaa': {'l': 'alr', 'r': 'alaaar', 'a': 'alaaaa'}, 'laraaalr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaral': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laa': {'l': 'l', 'r': 'laar', 'a': 'laaa'}, 'lraalrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'larlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'larlara'}, 'larlaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lr': {'l': 'lrl', 'r': 'l', 'a': 'lra'}, 'lralaaa': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laarlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'larlaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrlrala': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrlrla': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlarl'}, 'alralara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlrla': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'ala': {'l': 'l', 'r': 'alar', 'a': 'alaa'}, 'lraaaa': {'l': 'lrlarl', 'r': 'alr', 'a': 'lraaaaa'}, 'alaralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lraalra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'laar': {'l': 'laarl', 'r': 'l', 'a': 'laara'}, 'lrlaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'alaaraa'}, 'alrlar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alrlara'}, 'laaaral': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'larlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'laralra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laraa': {'l': 'lrlarl', 'r': 'alr', 'a': 'laraaa'}, 'alrlrl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlarl'}, 'lrlaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'aa': {'l': 'lrlrlrl', 'r': 'rr', 'a': 'aa'}, 'laaarl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lralralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laralara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lralral': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laaaraaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaar': {'l': 'lrlarl', 'r': 'alr', 'a': 'laaaara'}, 'alaar': {'l': 'alaarl', 'r': 'alr', 'a': 'alaara'}, 'laarlra': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lraalara': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laaaa': {'l': 'alr', 'r': 'laaaar', 'a': 'laaaaa'}, 'larlralr': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'laaraaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'larlral': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'larala': {'l': 'alr', 'r': 'laralar', 'a': 'lrlarl'}, 'lralarl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrl': {'l': 'l', 'r': 'lrlr', 'a': 'lrla'}, 'alrla': {'l': 'alr', 'r': 'alrlar', 'a': 'alrlaa'}, 'lrlaaaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alrala': {'l': 'alr', 'r': 'alralar', 'a': 'lrlrlrl'}, 'lrlar': {'l': 'lrlarl', 'r': 'alr', 'a': 'lrlara'}, 'alaarlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'larla': {'l': 'alr', 'r': 'larlar', 'a': 'lrlarl'}, 'alralar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lralaaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laarlaa': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lrala': {'l': 'alr', 'r': 'lralar', 'a': 'lralaa'}, 'laaar': {'l': 'lrlarl', 'r': 'l', 'a': 'laaara'}, 'laraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlrlaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lraaaaaa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lralr': {'l': 'lrlarl', 'r': 'l', 'a': 'lralra'}, 'laarla': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlarl'}, 'laraaal': {'l': 'alrlra', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lraalrl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lra': {'l': 'lral', 'r': 'l', 'a': 'lraa'}, 'lralar': {'l': 'lrlarl', 'r': 'alr', 'a': 'lralara'}, 'lralaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlarl'}, 'lralaar': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'larlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'alrlara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlaa': {'l': 'alr', 'r': 'lrlaar', 'a': 'lrlaaa'}, 'alrlrlar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'alrlaraa': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'laarlaar': {'l': 'lrlrlrl', 'r': 'alrlra', 'a': 'aa'}, 'lrlaarl': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'larlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laarlraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alaaaaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'lraa': {'l': 'lraal', 'r': 'l', 'a': 'lraaa'}, 'alra': {'l': 'alral', 'r': 'l', 'a': 'alraa'}, 'laaaaaa': {'l': 'alr', 'r': 'alaaraa', 'a': 'lrlrlrl'}, 'laaaralr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'lrlr': {'l': 'lrlrl', 'r': 'l', 'a': 'lrlra'}, 'alaraaaa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'alrlrlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaaara': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'alaaraa'}, 'lrlaraa': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}, 'laaarlr': {'l': 'lrlrlrl', 'r': 'alr', 'a': 'aa'}}
target  query explanation status  test accuracy rnn score explanation score explanation score on ground truth  extraction time revised delta revised epsilon counterexamples train size test size ltl_depth lstar_states lstar explanation score lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  false       false   True          100.0      None              None                              None         0.494081          None            None              []          0         0         0          218                    None                                    None              401.33576        False     0.05   0.05
target: balanced parentheses
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.12712812423706055  s
No positive counterexample found
EQ test took  0.0034465789794921875  s
new counterexample: l  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['l']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12023138999938965  s
EQ test took  0.0016200542449951172  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['l']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ l)
Learning took:  0.18810105323791504  s
No positive counterexample found
EQ test took  0.013303518295288086  s
new counterexample: r  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['l', 'r']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (l | r))
Learning took:  0.34433674812316895  s
No positive counterexample found
EQ test took  0.03078913688659668  s
new counterexample: ar  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['l', 'r', 'ar']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: (G (! (x1 | x0)))
Learning formula with depth 3
learned LTL formula: (G (~ (l | r)))
Learning took:  0.579481840133667  s
EQ test took  0.024300336837768555  s
new counterexample: lr  should be accepted by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['l', 'r', 'ar']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: (((F x1) -> x0) & (x0 -> (F x1)))
Learning formula with depth 3
learned LTL formula: ((l -> (F r)) & ((F r) -> l))
Learning took:  1.2430286407470703  s
EQ test took  0.023694276809692383  s
new counterexample: al  should be rejected by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['l', 'r', 'ar', 'al']



5  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((F (x1 | x0)) -> ((X x1) & (x1 | x0)))
Learning formula with depth 3
learned LTL formula: ((F (l | r)) -> ((l | r) & (X r)))
Learning took:  2.8357644081115723  s
EQ test took  0.01113128662109375  s
new counterexample: alr  should be accepted by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'r', 'ar', 'al']



6  iteration complete



start formula depth: 7
Before normalization: (((F x1) | (F x0)) -> ((F x1) & (F x0)))
Learning formula with depth 3
learned LTL formula: (((F l) | (F r)) -> ((F l) & (F r)))
Learning took:  3.065520763397217  s
EQ test took  0.015104532241821289  s
new counterexample: arl  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'r', 'ar', 'al', 'arl']



7  iteration complete



start formula depth: 7
Before normalization: (! ((x0 -> (G x0)) U (x1 | (G x0))))
Learning formula with depth 4
learned LTL formula: (~ ((l -> (G l)) U (r | (G l))))
Learning took:  2.2738683223724365  s
No positive counterexample found
EQ test took  0.040996551513671875  s
new counterexample: llr  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'r', 'ar', 'al', 'arl', 'llr']



8  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: (! ((x0 -> x1) U ((x0 -> (X x1)) -> x1)))
Learning formula with depth 5
learned LTL formula: (~ ((l -> r) U ((l -> (X r)) -> r)))
Learning took:  27.5677752494812  s
EQ test took  0.015548229217529297  s
new counterexample: lar  should be accepted by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'r', 'ar', 'al', 'arl', 'llr']



9  iteration complete



start formula depth: 8
Before normalization: (! ((! x0) U (((X (! x0)) U (! x0)) -> x1)))
Learning formula with depth 6
learned LTL formula: (~ ((~ l) U (((X (~ l)) U (~ l)) -> r)))
Learning took:  108.47178816795349  s
EQ test took  0.015581369400024414  s
new counterexample: la  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'r', 'ar', 'al', 'arl', 'llr', 'la']



10  iteration complete





epsilon= 0.5 delta= 0.5 max_trace_length= 50
query: true
final ltl:  (~ ((~ l) U (((X (~ l)) U (~ l)) -> r)))
incomplete formula
Number of samples: 17
Number of counterexamples returned: 4
3.578185279286624 0.6513848420942665

Time taken to extract ltl: 401.04022312164307
overall guided extraction time took: 0.2899999999999636
generated counterexamples were: (format: (counterexample, counterexample generation time))
('rlr', 0.0)
('larllllrlraraarlaalaalrarrr', 0.009999999999308784)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.2929513454437256
number of states of the dfa: 31
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rl', 'a': ''}, 'larllllrlraraarlaalaa': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllrlraraarlaalaalr': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllr': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'lar': {'l': 'l', 'r': 'rl', 'a': ''}, 'rl': {'l': 'rl', 'r': 'rl', 'a': 'rl'}, 'larllll': {'l': 'rl', 'r': 'larllllrlraraarlaalaa', 'a': 'larllll'}, 'larllllrlraraarlaalaalra': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'l': {'l': 'larllllrlraraarla', 'r': '', 'a': 'l'}, 'la': {'l': 'larllllrlraraarla', 'r': '', 'a': 'l'}, 'larllllrlraraarlaal': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllrlraraarla': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larllllrl': {'l': 'rl', 'r': 'larllllrlraraarlaalaa', 'a': 'larllll'}, 'larllllrlrar': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larllllrlraraarlaalaalrarrr': {'l': 'l', 'r': 'rl', 'a': ''}, 'larllllrlraraa': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larllllrlraraarlaala': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larl': {'l': 'larllllrlraraarla', 'r': '', 'a': 'l'}, 'r': {'l': 'rl', 'r': 'rl', 'a': 'rl'}, 'larllllrlraraarlaalaal': {'l': 'rl', 'r': 'larllllrlraraarlaalaa', 'a': 'larllll'}, 'larllllrlraraarlaalaalrar': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larlll': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllrlr': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllrlraraarl': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larllllrlra': {'l': 'larllll', 'r': 'larllllrlraraarla', 'a': 'larllllrlraraarlaalaa'}, 'larllllrlraraarlaa': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'larll': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}, 'rlr': {'l': 'rl', 'r': 'rl', 'a': 'rl'}, 'larllllrlraraar': {'l': 'larllllrlraraarla', 'r': '', 'a': 'l'}, 'larllllrlraraarlaalaalrarr': {'l': 'larllllrlraraarla', 'r': '', 'a': 'l'}, 'larllllrlrara': {'l': 'larllllrlraraarlaalaa', 'r': 'l', 'a': 'larllllrlraraarla'}}
Explanation matches RNN: 59.13
RNN matches ground truth: 100.0
Explanation matches ground truth: 59.13
Lstar matches RNN: 94.77
Lstar matches ground truth: 94.77
target query                               explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta  revised epsilon                               counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  true  (~ ((~ l) U (((X (~ l)) U (~ l)) -> r)))  False          100.0      100.0              59.13                              59.13       401.040223       3.578185         0.651385  [l, , r, ar, lr, al, alr, arl, llr, lar, la]          0         0         6           31                    94.77                                    94.77               0.292951         True      0.5    0.5
target: balanced parentheses
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11150479316711426  s
No positive counterexample found
EQ test took  0.0039825439453125  s
new counterexample: r  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['r']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.1145775318145752  s
EQ test took  0.0016245841979980469  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['r']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ r)
Learning took:  0.18164658546447754  s
No positive counterexample found
EQ test took  0.01700568199157715  s
new counterexample: ar  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['r', 'ar']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (! (F x1))
Learning formula with depth 2
learned LTL formula: (~ (F r))
Learning took:  0.24012970924377441  s
No positive counterexample found
EQ test took  0.026287555694580078  s
new counterexample: l  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['r', 'ar', 'l']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
increasing formula depth to  5
Before normalization: (! (x0 | (F x1)))
Learning formula with depth 3
learned LTL formula: (~ (l | (F r)))
Learning took:  0.6836659908294678  s
EQ test took  0.005935192108154297  s
new counterexample: lr  should be accepted by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['r', 'ar', 'l']



4  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: ((x0 | (F x1)) -> ((F x1) & x0))
Learning formula with depth 3
learned LTL formula: ((l | (F r)) -> (l & (F r)))
Learning took:  1.2566568851470947  s
EQ test took  0.03847026824951172  s
new counterexample: aal  should be rejected by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['r', 'ar', 'l', 'aal']



5  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: (((F x1) | (F x0)) -> (x0 & (F x1)))
Learning formula with depth 3
learned LTL formula: (((F l) | (F r)) -> (l & (F r)))
Learning took:  2.8892998695373535  s
EQ test took  0.03366351127624512  s
new counterexample: aallarr  should be accepted by implementation


positive traces---> 
['', 'lr', 'aallarr']


negative traces---> 
['r', 'ar', 'l', 'aal']



6  iteration complete



start formula depth: 7
Before normalization: (((F x0) | (F x1)) -> ((F x1) & (F x0)))
Learning formula with depth 3
learned LTL formula: (((F l) | (F r)) -> ((F l) & (F r)))
Learning took:  3.1457300186157227  s
EQ test took  0.01566290855407715  s
new counterexample: lrr  should be rejected by implementation


positive traces---> 
['', 'lr', 'aallarr']


negative traces---> 
['r', 'ar', 'l', 'aal', 'lrr']



7  iteration complete





epsilon= 0.5 delta= 0.25 max_trace_length= 50
query: true
final ltl:  (((F l) | (F r)) -> ((F l) & (F r)))
incomplete formula
Number of samples: 14
Number of counterexamples returned: 14
1.0 None

Time taken to extract ltl: 401.1165843009949
overall guided extraction time took: 0.5399999999999636
generated counterexamples were: (format: (counterexample, counterexample generation time))
('rr', 0.010000000000218279)
('lallllalrlrraarllrrrrlaaralaarr', 0.03999999999996362)
<IPython.core.display.Image object>

Time taken to extract lstar-dfa: 0.5411534309387207
number of states of the dfa: 34
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'r', 'a': ''}, 'lallllalrlrraarllrrrrlaaralaa': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraar': {'l': 'lalll', 'r': 'lallllalrlrraarllrrrrlaaralaa', 'a': 'lallllalrlrraar'}, 'lallllalrlr': {'l': 'lallllalrl', 'r': 'lalll', 'a': 'lallllalrlr'}, 'lallllalr': {'l': 'lallllalrl', 'r': 'lalll', 'a': 'lallllalrlr'}, 'l': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'la': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'lallllalrl': {'l': 'r', 'r': 'lallllalrlr', 'a': 'lallllalrl'}, 'lall': {'l': 'lalll', 'r': 'lallllalrlrraarllrrrrlaaralaa', 'a': 'lallllalrlrraar'}, 'lalll': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lalllla': {'l': 'lallllalrl', 'r': 'lalll', 'a': 'lallllalrlr'}, 'lallllalrlrraarllrrrrlaaralaarr': {'l': 'l', 'r': 'r', 'a': ''}, 'lallllalrlrr': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lallllalrlrraarllrrrrla': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraarllrrrrl': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraarllrrr': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraarllrrrr': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'r': {'l': 'r', 'r': 'r', 'a': 'r'}, 'lallllalrlrraa': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lallllalrlrraarllrrrrlaara': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'lallllalrlrraarllrrrrlaaralaar': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'rr': {'l': 'r', 'r': 'r', 'a': 'r'}, 'lallll': {'l': 'lallllalrl', 'r': 'lalll', 'a': 'lallllalrlr'}, 'lallllalrlrraarllrrrrlaa': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraarllrrrrlaaral': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrra': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lallllalrlrraarllr': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lallllalrlrraarllrrrrlaar': {'l': 'lallllalrlrraarllrrrrlaaralaa', 'r': '', 'a': 'l'}, 'lallllalrlrraarl': {'l': 'lallllalrlr', 'r': 'lallllalrlrraar', 'a': 'lalll'}, 'lallllal': {'l': 'r', 'r': 'lallllalrlr', 'a': 'lallllalrl'}, 'lallllalrlrraarllrr': {'l': 'lalll', 'r': 'lallllalrlrraarllrrrrlaaralaa', 'a': 'lallllalrlrraar'}, 'lal': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}, 'lallllalrlrraarll': {'l': 'lallllalrl', 'r': 'lalll', 'a': 'lallllalrlr'}, 'lallllalrlrraarllrrrrlaarala': {'l': 'lallllalrlrraar', 'r': 'l', 'a': 'lallllalrlrraarllrrrrlaaralaa'}}
Explanation matches RNN: 48.42
RNN matches ground truth: 100.0
Explanation matches ground truth: 48.42
Lstar matches RNN: 99.27
Lstar matches ground truth: 99.27
target query                           explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                      counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  true  (((F l) | (F r)) -> ((F l) & (F r)))  False          100.0      100.0              48.42                              48.42       401.116584            1.0            None  [r, , ar, l, lr, aal, aallarr, lrr]          0         0         3           34                    99.27                                    99.27               0.541153         True      0.5   0.25
target: balanced parentheses
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.11431622505187988  s
No positive counterexample found
EQ test took  0.004952430725097656  s
new counterexample: l  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['l']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12402677536010742  s
EQ test took  0.0016510486602783203  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['l']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x0)
Learning formula with depth 1
learned LTL formula: (~ l)
Learning took:  0.1745152473449707  s
EQ test took  0.0058650970458984375  s
new counterexample: lr  should be accepted by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['l']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
Before normalization: (x0 U (! x0))
Learning formula with depth 2
learned LTL formula: (l U (~ l))
Learning took:  0.24560332298278809  s
EQ test took  0.009534358978271484  s
new counterexample: al  should be rejected by implementation


positive traces---> 
['', 'lr']


negative traces---> 
['l', 'al']



3  iteration complete



start formula depth: 3
increasing formula depth to  4
Before normalization: (x0 U (! (F x0)))
Learning formula with depth 3
learned LTL formula: (l U (~ (F l)))
Learning took:  0.4036743640899658  s
EQ test took  0.00957632064819336  s
new counterexample: alr  should be accepted by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'al']



4  iteration complete



start formula depth: 4
Before normalization: (! (F (G x0)))
Learning formula with depth 3
learned LTL formula: (~ (F (G l)))
Learning took:  0.38811683654785156  s
EQ test took  0.011289834976196289  s
new counterexample: r  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'al', 'r']



5  iteration complete



start formula depth: 4
increasing formula depth to  5
increasing formula depth to  6
Before normalization: (! ((F (G x0)) | x1))
Learning formula with depth 4
learned LTL formula: (~ (r | (F (G l))))
Learning took:  1.956848382949829  s
No positive counterexample found
EQ test took  0.028759241104125977  s
new counterexample: la  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'al', 'r', 'la']



6  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((x1 | (F x0)) -> (F (X x1)))
Learning formula with depth 3
learned LTL formula: ((r | (F l)) -> (F (X r)))
Learning took:  3.659149169921875  s
No positive counterexample found
EQ test took  0.016429662704467773  s
new counterexample: rr  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr']


negative traces---> 
['l', 'al', 'r', 'la', 'rr']



7  iteration complete



start formula depth: 7
Before normalization: ((x1 | (F x0)) -> ((F x0) & ((F x0) U x1)))
Learning formula with depth 4
learned LTL formula: ((r | (F l)) -> ((F l) & ((F l) U r)))
Learning took:  2.4511983394622803  s
EQ test took  0.012478351593017578  s
new counterexample: lar  should be accepted by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'al', 'r', 'la', 'rr']



8  iteration complete



start formula depth: 7
Before normalization: (((F x0) -> (F x1)) & (x1 -> x0))
Learning formula with depth 3
learned LTL formula: ((r -> l) & ((F l) -> (F r)))
Learning took:  2.261260986328125  s
EQ test took  0.02632594108581543  s
new counterexample: ar  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'al', 'r', 'la', 'rr', 'ar']



9  iteration complete



start formula depth: 7
Before normalization: (((F x0) -> (F x1)) & ((F x1) -> (F x0)))
Learning formula with depth 3
learned LTL formula: (((F l) -> (F r)) & ((F r) -> (F l)))
Learning took:  3.2915027141571045  s
No positive counterexample found
EQ test took  0.01894545555114746  s
new counterexample: rl  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'al', 'r', 'la', 'rr', 'ar', 'rl']



10  iteration complete



start formula depth: 7
increasing formula depth to  8
Before normalization: ((F (x1 | x0)) -> (F ((F x1) & x0)))
Learning formula with depth 4
learned LTL formula: ((F (l | r)) -> (F (l & (F r))))
Learning took:  32.49753952026367  s
No positive counterexample found
EQ test took  0.02142620086669922  s
new counterexample: llr  should be rejected by implementation


positive traces---> 
['', 'lr', 'alr', 'lar']


negative traces---> 
['l', 'al', 'r', 'la', 'rr', 'ar', 'rl', 'llr']



11  iteration complete





epsilon= 0.5 delta= 0.1 max_trace_length= 50
query: true
final ltl:  ((F (l | r)) -> (F (l & (F r))))
incomplete formula
Number of samples: 22
Number of counterexamples returned: 22
1.0 None

Time taken to extract ltl: 401.11573815345764
overall guided extraction time took: 1.9700000000002547
generated counterexamples were: (format: (counterexample, counterexample generation time))
('rr', 0.010000000000218279)
('lalrr', 0.09000000000014552)
('laalaalarlrlaarrr', 0.11999999999989086)
('aaalaaarlraalrlalraaalallrrrr', 0.1499999999996362)
('llllralaaalrrrlalrllaaraarlaalraralralrrrr', 0.18999999999959982)

Time taken to extract lstar-dfa: 1.9725017547607422
number of states of the dfa: 93
returned flag: True
transitions:->
{'': {'l': 'l', 'r': 'rr', 'a': ''}, 'laalaalarl': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaaraarlaalraralralrrrr': {'l': 'l', 'r': 'rr', 'a': ''}, 'llllralaaalrrrlalrllaaraarlaalr': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllra': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'laalaalar': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'laalaal': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'l': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaaraarlaalrara': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaa': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaa': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalr': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'rr': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'aaalaaarlraalrl': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlalr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllral': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaaarlraalrlalraaalallrrrr': {'l': 'l', 'r': 'rr', 'a': ''}, 'aaalaaarlraalr': {'l': 'l', 'r': 'rr', 'a': ''}, 'laalaalarlr': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'lal': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'aaalaaarlraalrlal': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrrrlalrllaaraarlaalrar': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'll': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'aaalaaarlra': {'l': 'l', 'r': 'rr', 'a': ''}, 'llllralaaalrrrlalrll': {'l': 'rr', 'r': 'llllralaaalrrrlalrllaaraarlaalr', 'a': 'llllralaaalrrrlalrll'}, 'llllralaaalrrrlalrllaaraa': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'lalrr': {'l': 'l', 'r': 'rr', 'a': ''}, 'llllralaaal': {'l': 'rr', 'r': 'llllralaaalrrrlalrllaaraarlaalr', 'a': 'llllralaaalrrrlalrll'}, 'la': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'laal': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrrrlalrllaaraarlaalraralral': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaaarlraalrla': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'laalaa': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrrrlalrllaaraarlaalraralralrrr': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aaalaaarlr': {'l': 'l', 'r': 'rr', 'a': ''}, 'aaalaaarlraa': {'l': 'l', 'r': 'rr', 'a': ''}, 'r': {'l': 'rr', 'r': 'rr', 'a': 'rr'}, 'llllralaaalrrrlalrllaaraarl': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'a': {'l': 'l', 'r': 'rr', 'a': ''}, 'llllrala': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllralaaalrrr': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrrrla': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaaraarlaal': {'l': 'rr', 'r': 'llllralaaalrrrlalrllaaraarlaalr', 'a': 'llllralaaalrrrlalrll'}, 'llllralaaalrrrl': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaa': {'l': 'rr', 'r': 'llllralaaalrrrlalrllaaraarlaalr', 'a': 'llllralaaalrrrlalrll'}, 'aaalaaarlraalrlalr': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaa': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllralaaalrrrlalrllaaraarlaalraralr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'laa': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aaalaaarlraalrlalraaal': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'laalaalarlrl': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'laala': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'aaalaaarlraalrlalraa': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlalrllaara': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaal': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aaalaaarlraalrlalraaa': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlalrllaaraarlaalraralralr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'aaalaaarlraalrlalraaalallr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'aaalaaarl': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlalrllaar': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllralaaalrrrlalrllaaraarlaa': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllralaaalrrrlalrllaaraarlaalraralralrr': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'aaalaaar': {'l': 'l', 'r': 'rr', 'a': ''}, 'aaalaaarlraal': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aa': {'l': 'l', 'r': 'rr', 'a': ''}, 'aaalaaa': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aaalaaarlraalrlalra': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'aaa': {'l': 'l', 'r': 'rr', 'a': ''}, 'llllralaaalrrrlalrllaaraarlaalraral': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'llllralaaalrrrlalrlla': {'l': 'rr', 'r': 'llllralaaalrrrlalrllaaraarlaalr', 'a': 'llllralaaalrrrlalrll'}, 'aaalaaarlraalrlalraaalall': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaaarlraalrlalraaala': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'aaalaaarlraalrlalraaalallrr': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrrrlalrllaaraarla': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'laalaalarlrlaarrr': {'l': 'l', 'r': 'rr', 'a': ''}, 'laalaalarlrlaar': {'l': 'laalaalarl', 'r': 'l', 'a': 'laalaalar'}, 'llllralaaalrr': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llll': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaaarlraalrlalraaalallrrr': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'laalaalarlrlaarr': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlalrllaaraar': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'aaala': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'llllralaaalrrrlal': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'laalaala': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaaraarlaalraralra': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrl': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'aaalaaarlraalrlalraaalal': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'lll': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'llllralaaalrrrlalrllaaraarlaalra': {'l': 'llllralaaalrrrlalrll', 'r': 'laalaalarl', 'a': 'llllralaaalrrrlalrllaaraarlaalr'}, 'laalaalarlrla': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}, 'lalr': {'l': 'laalaalar', 'r': '', 'a': 'l'}, 'laalaalarlrlaa': {'l': 'llllralaaalrrrlalrllaaraarlaalr', 'r': 'laalaalar', 'a': 'laalaalarl'}}
Explanation matches RNN: 49.17
RNN matches ground truth: 100.0
Explanation matches ground truth: 49.17
Lstar matches RNN: 97.84
Lstar matches ground truth: 97.84
target query                       explanation status  test accuracy  rnn score  explanation score  explanation score on ground truth  extraction time  revised delta revised epsilon                                  counterexamples train size test size ltl_depth lstar_states  lstar explanation score  lstar explanation score on ground truth  lstar extraction time lstar_status  epsilon  delta
balanced parentheses  true  ((F (l | r)) -> (F (l & (F r))))  False          100.0      100.0              49.17                              49.17       401.115738            1.0            None  [l, , lr, al, alr, r, la, rr, lar, ar, rl, llr]          0         0         4           93                    97.84                                    97.84               1.972502         True      0.5    0.1
target: balanced parentheses
query: true


positive traces---> 
[]


negative traces---> 
[]



Learning formula with depth 0
learned LTL formula: true
Learning took:  0.1239161491394043  s
No positive counterexample found
EQ test took  0.005274057388305664  s
new counterexample: r  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['r']



0  iteration complete



Learning formula with depth 0
learned LTL formula: false
Learning took:  0.12031126022338867  s
EQ test took  0.0015940666198730469  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['r']



1  iteration complete



start formula depth: 1
increasing formula depth to  2
Before normalization: (! x1)
Learning formula with depth 1
learned LTL formula: (~ r)
Learning took:  0.1839616298675537  s
No positive counterexample found
EQ test took  0.02664804458618164  s
new counterexample: l  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['r', 'l']



2  iteration complete



start formula depth: 2
increasing formula depth to  3
increasing formula depth to  4
Before normalization: (! (x0 | x1))
Learning formula with depth 2
learned LTL formula: (~ (l | r))
Learning took:  0.35216689109802246  s
EQ test took  0.021043062210083008  s
new counterexample: lar  should be accepted by implementation


positive traces---> 
['', 'lar']


negative traces---> 
['r', 'l']



3  iteration complete



start formula depth: 4
increasing formula depth to  5
Before normalization: ((x0 | x1) U (! (x0 | x1)))
Learning formula with depth 3
learned LTL formula: ((l | r) U (~ (l | r)))
Learning took:  0.6979835033416748  s
EQ test took  0.009923696517944336  s
new counterexample: ra  should be rejected by implementation


positive traces---> 
['', 'lar']


negative traces---> 
['r', 'l', 'ra']



4  iteration complete



start formula depth: 5
Before normalization: (! (x1 | (G x0)))
Learning formula with depth 3
learned LTL formula: (~ (r | (G l)))
Learning took:  0.6286141872406006  s
No positive counterexample found
EQ test took  0.03865981101989746  s
new counterexample: la  should be rejected by implementation


positive traces---> 
['', 'lar']


negative traces---> 
['r', 'l', 'ra', 'la']



5  iteration complete



start formula depth: 5
increasing formula depth to  6
Before normalization: ((x1 -> x0) & (x0 -> (F x1)))
Learning formula with depth 3
learned LTL formula: ((r -> l) & (l -> (F r)))
Learning took:  1.619605302810669  s
No positive counterexample found
EQ test took  0.02245807647705078  s
new counterexample: al  should be rejected by implementation


positive traces---> 
['', 'lar']


negative traces---> 
['r', 'l', 'ra', 'la', 'al']



6  iteration complete



start formula depth: 6
increasing formula depth to  7
Before normalization: ((x1 | (F x0)) -> (F (X x1)))
Learning formula with depth 3
learned LTL formula: ((r | (F l)) -> (F (X r)))
Learning took:  3.760892868041992  s
No positive counterexample found
EQ test took  0.011714458465576172  s
new counterexample: ar  should be rejected by implementation


positive traces---> 
['', 'lar']


negative traces---> 
['r', 'l', 'ra', 'la', 'al', 'ar']



7  iteration complete



start formula depth: 7
Before normalization: ((F (x0 | x1)) -> (X (X x1)))
Learning formula with depth 3
learned LTL formula: ((F (l | r)) -> (X (X r)))
Learning took:  2.1625335216522217  s
EQ test took  0.021466493606567383  s
new counterexample: lr  should be accepted by implementation


positive traces---> 
['', 'lar', 'lr']


negative traces---> 
['r', 'l', 'ra', 'la', 'al', 'ar']



8  iteration complete



start formula depth: 7
Before normalization: (((F x1) -> x0) & ((((F x1) -> x0) U x0) -> (F x1)))
Learning formula with depth 5
learned LTL formula: (((F r) -> l) & ((((F r) -> l) U l) -> (F r)))
Learning took:  2.5914103984832764  s
EQ test took  0.03052520751953125  s
new counterexample: lrr  should be rejected by implementation


positive traces---> 
['', 'lar', 'lr']


negative traces---> 
['r', 'l', 'ra', 'la', 'al', 'ar', 'lrr']



9  iteration complete





epsilon= 0.5 delta= 0.05 max_trace_length= 50
query: true
final ltl:  (((F r) -> l) & ((((F r) -> l) U l) -> (F r)))
incomplete formula
Number of samples: 20
Number of counterexamples returned: 2
0.02344786277646913 0.4579309080952487

Time taken to extract ltl: 401.1153631210327
Interrupted due to time limit
