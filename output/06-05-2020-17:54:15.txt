made train set of size: 825 , of which positive examples: 246
The dy.parameter(...) call is now DEPRECATED.
        There is no longer need to explicitly add parameters to the computation graph.
        Any used parameter will be added automatically.
current average loss is:  0.18547559678554534
current average loss is:  0.11642018126412515
current average loss is:  0.026988699471223218
current average loss is:  0.0025314431122664943
current average loss is:  0.0005455073125111604
classification loss on last batch was: 0.0004979940977963535
testing on train set, i.e. test set is train set
test set size: 825
rnn score against target on test set:                              825 (100.0)
query: false


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.07508063316345215  s
EQ test took  0.00028896331787109375  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.06676244735717773  s
EQ test took  0.1466693878173828  s


epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: false
final ltl:  false

Time taken: 0.29102563858032227
target  query explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  false       false   True      100.0                0.0                                0.0         0.291026
query: true


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.06574821472167969  s
No positive counterexample found
EQ test took  0.010017871856689453  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



learned LTL formula: false
Learning took:  0.06985902786254883  s
EQ test took  0.00035834312438964844  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ c)
Learning took:  0.1290149688720703  s
No positive counterexample found
EQ test took  0.0660088062286377  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (a | c))
Learning took:  0.2762174606323242  s
EQ test took  0.014169692993164062  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'a']



3  iteration complete



start formula depth: 4
learned LTL formula: ((a | c) -> (X c))
Learning took:  0.506324291229248  s
EQ test took  0.07057738304138184  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'a', 'b']



4  iteration complete



start formula depth: 5
learned LTL formula: (((c | a) | b) -> (X c))
Learning took:  2.301459550857544  s
EQ test took  0.037651777267456055  s
new counterexample: aac  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b']



5  iteration complete



start formula depth: 7
learned LTL formula: (((b | c) | a) -> (X ((b | c) | a)))
Learning took:  1.3352994918823242  s
EQ test took  0.06517553329467773  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b', 'aa']



6  iteration complete



start formula depth: 7
learned LTL formula: (~ ((b | c) | (G a)))
Learning took:  1.9127843379974365  s
No positive counterexample found
EQ test took  0.16801691055297852  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b', 'aa', 'ab']



7  iteration complete



start formula depth: 7
learned LTL formula: (~ ((G (b | a)) | c))
Learning took:  2.2479517459869385  s
EQ test took  0.0697317123413086  s
new counterexample: aaaa  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['c', 'a', 'b', 'aa', 'ab']



8  iteration complete



start formula depth: 7
learned LTL formula: (((G (b | a)) | c) -> (X (X a)))
Learning took:  130.4256272315979  s
EQ test took  0.12191486358642578  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['c', 'a', 'b', 'aa', 'ab', 'dc']



9  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: true
final ltl:  (((G (b | a)) | c) -> (X (X a)))
incomplete formula

Time taken: 401.11136984825134
target query                       explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  true  (((G (b | a)) | c) -> (X (X a)))  False      100.0                0.0                                0.0        401.11137
query: F(a&X(c))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.06925415992736816  s
EQ test took  0.000270843505859375  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.06611347198486328  s
EQ test took  0.13140082359313965  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['ac']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
learned LTL formula: a
Learning took:  0.09249544143676758  s
EQ test took  0.11548852920532227  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ac']


negative traces---> 
['', 'a']



2  iteration complete



start formula depth: 1
learned LTL formula: (X c)
Learning took:  0.12889456748962402  s
EQ test took  0.03295564651489258  s
new counterexample: aac  should be accepted by implementation


positive traces---> 
['ac', 'aac']


negative traces---> 
['', 'a']



3  iteration complete



start formula depth: 2
learned LTL formula: (F c)
Learning took:  0.12811851501464844  s
EQ test took  0.04270148277282715  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['ac', 'aac']


negative traces---> 
['', 'a', 'c']



4  iteration complete



start formula depth: 2
learned LTL formula: (X (b -> b))
Learning took:  0.23559951782226562  s
No positive counterexample found
EQ test took  0.026511192321777344  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['ac', 'aac']


negative traces---> 
['', 'a', 'c', 'ad']



5  iteration complete



start formula depth: 3
learned LTL formula: (X (F c))
Learning took:  0.22273635864257812  s
No positive counterexample found
EQ test took  0.07587146759033203  s
new counterexample: cc  should be rejected by implementation


positive traces---> 
['ac', 'aac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc']



6  iteration complete



start formula depth: 3
learned LTL formula: (a & (F c))
Learning took:  0.5253033638000488  s
EQ test took  0.033176422119140625  s
new counterexample: dac  should be accepted by implementation


positive traces---> 
['ac', 'aac', 'dac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc']



7  iteration complete



start formula depth: 4
learned LTL formula: ((~ c) & (F c))
Learning took:  0.4793221950531006  s
EQ test took  0.13965344429016113  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc']



8  iteration complete



start formula depth: 4
learned LTL formula: ((F c) & ((F c) U a))
Learning took:  1.2723643779754639  s
No positive counterexample found
EQ test took  0.14511895179748535  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca']



9  iteration complete



start formula depth: 5
learned LTL formula: ((F c) U ((F c) & a))
Learning took:  0.971752405166626  s
No positive counterexample found
EQ test took  0.1525123119354248  s
new counterexample: adc  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc']



10  iteration complete



start formula depth: 5
learned LTL formula: (F (a & (X c)))
Learning took:  1.0620107650756836  s
No positive counterexample found
EQ test took  0.22707009315490723  s
new counterexample: acd  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc', 'acd']



11  iteration complete



start formula depth: 5
learned LTL formula: (F ((X (G c)) & a))
Learning took:  4.294499635696411  s
EQ test took  0.13710260391235352  s
new counterexample: acbd  should be accepted by implementation


positive traces---> 
['ac', 'aac', 'dac', 'acbd']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc', 'acd']



12  iteration complete



start formula depth: 6
learned LTL formula: (~ (((F c) U d) U ((F c) -> c)))
Learning took:  64.65362930297852  s
EQ test took  0.07038569450378418  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac', 'acbd']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc', 'acd', 'bc']



13  iteration complete



start formula depth: 7
learned LTL formula: ((X (~ (d | (X d)))) & (d U a))
Learning took:  143.09191393852234  s
EQ test took  0.3382225036621094  s
new counterexample: ddac  should be accepted by implementation


positive traces---> 
['ac', 'aac', 'dac', 'acbd', 'ddac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc', 'acd', 'bc']



14  iteration complete



start formula depth: 8
learned LTL formula: (d U (a & (X (~ (d | (X d))))))
Learning took:  39.011064529418945  s
EQ test took  0.28934693336486816  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['ac', 'aac', 'dac', 'acbd', 'ddac']


negative traces---> 
['', 'a', 'c', 'ad', 'cc', 'dc', 'ca', 'adc', 'acd', 'bc', 'aa']



15  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: F(a&X(c))
final ltl:  (d U (a & (X (~ (d | (X d))))))
incomplete formula

Time taken: 401.11423087120056
target      query                      explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  F(a&X(c))  (d U (a & (X (~ (d | (X d))))))  False      100.0                0.0                                0.0       401.114231
query: (F(a&X(c))) | (F(b&X(d)))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.0843956470489502  s
EQ test took  0.00025463104248046875  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.08096671104431152  s
EQ test took  0.13140392303466797  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['ac']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
learned LTL formula: a
Learning took:  0.10735464096069336  s
EQ test took  0.04036545753479004  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['ac']


negative traces---> 
['', 'a']



2  iteration complete



start formula depth: 1
learned LTL formula: (X c)
Learning took:  0.14214730262756348  s
EQ test took  0.03296232223510742  s
new counterexample: dac  should be accepted by implementation


positive traces---> 
['ac', 'dac']


negative traces---> 
['', 'a']



3  iteration complete



start formula depth: 2
learned LTL formula: (F c)
Learning took:  0.14522624015808105  s
EQ test took  0.037596702575683594  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['ac', 'dac']


negative traces---> 
['', 'a', 'c']



4  iteration complete



start formula depth: 2
learned LTL formula: (X (~ d))
Learning took:  0.24951410293579102  s
EQ test took  0.03741884231567383  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['ac', 'dac', 'bddd']


negative traces---> 
['', 'a', 'c']



5  iteration complete



start formula depth: 3
learned LTL formula: (X (~ b))
Learning took:  0.319530725479126  s
EQ test took  0.15055632591247559  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd']


negative traces---> 
['', 'a', 'c', 'aa']



6  iteration complete



start formula depth: 3
learned LTL formula: ((~ a) U (X (~ a)))
Learning took:  0.5832440853118896  s
EQ test took  0.031197071075439453  s
new counterexample: aac  should be accepted by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac']


negative traces---> 
['', 'a', 'c', 'aa']



7  iteration complete



start formula depth: 4
learned LTL formula: (X (~ (G a)))
Learning took:  0.5345122814178467  s
EQ test took  0.037709951400756836  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac']


negative traces---> 
['', 'a', 'c', 'aa', 'ad']



8  iteration complete



start formula depth: 4
learned LTL formula: (((F c) -> c) -> b)
Learning took:  1.3525428771972656  s
EQ test took  0.06703495979309082  s
new counterexample: ddbdd  should be accepted by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd']


negative traces---> 
['', 'a', 'c', 'aa', 'ad']



9  iteration complete



start formula depth: 5
learned LTL formula: (F (b | (X c)))
Learning took:  1.186396598815918  s
EQ test took  0.049723148345947266  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b']



10  iteration complete



start formula depth: 5
learned LTL formula: (X (c | (X (c -> c))))
Learning took:  1.3983709812164307  s
No positive counterexample found
EQ test took  0.054318904876708984  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b', 'bc']



11  iteration complete



start formula depth: 5
learned LTL formula: ((F (~ (d | a))) & (F (d | a)))
Learning took:  20.797600746154785  s
No positive counterexample found
EQ test took  0.06878256797790527  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b', 'bc', 'cd']



12  iteration complete



start formula depth: 7
learned LTL formula: ((b U (~ (c | b))) & ((~ (c | b)) U (c | b)))
Learning took:  22.358981609344482  s
No positive counterexample found
EQ test took  0.27103662490844727  s
new counterexample: ab  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b', 'bc', 'cd', 'ab']



13  iteration complete



start formula depth: 7
learned LTL formula: (((X c) -> b) -> (X (X ((X c) -> b))))
Learning took:  33.19534373283386  s
EQ test took  0.06344485282897949  s
new counterexample: dacc  should be accepted by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd', 'dacc']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b', 'bc', 'cd', 'ab']



14  iteration complete



start formula depth: 7
learned LTL formula: (((a U c) -> c) -> (X (X ((a U c) -> c))))
Learning took:  76.40112519264221  s
EQ test took  0.08316302299499512  s
new counterexample: ccc  should be rejected by implementation


positive traces---> 
['ac', 'dac', 'bddd', 'aac', 'ddbdd', 'dacc']


negative traces---> 
['', 'a', 'c', 'aa', 'ad', 'b', 'bc', 'cd', 'ab', 'ccc']



15  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: (F(a&X(c))) | (F(b&X(d)))
final ltl:  (((a U c) -> c) -> (X (X ((a U c) -> c))))
incomplete formula

Time taken: 401.11629009246826
target                      query                                 explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  (F(a&X(c))) | (F(b&X(d)))  (((a U c) -> c) -> (X (X ((a U c) -> c))))  False      100.0                0.0                                0.0        401.11629
query: F(a&X(b))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.09115767478942871  s
EQ test took  0.0002529621124267578  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.08959174156188965  s
EQ test took  0.14855384826660156  s


epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: F(a&X(b))
final ltl:  false

Time taken: 0.33113574981689453
target      query explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  F(a&X(b))       false   True      100.0                0.0                                0.0         0.331136
query: F(b&X(a))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.09165072441101074  s
EQ test took  0.00024819374084472656  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.09097409248352051  s
EQ test took  0.15230989456176758  s


epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: F(b&X(a))
final ltl:  false

Time taken: 0.33681535720825195
target      query explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  F(b&X(a))       false   True      100.0                0.0                                0.0         0.336815
query: F(c&X(d))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.09680581092834473  s
EQ test took  0.0002484321594238281  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.09334135055541992  s
EQ test took  0.14722776412963867  s
new counterexample: ddacccaaacccdac  should be accepted by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
learned LTL formula: d
Learning took:  0.12377500534057617  s
EQ test took  0.027774572372436523  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd']



2  iteration complete



start formula depth: 1
learned LTL formula: (F c)
Learning took:  0.20354151725769043  s
No positive counterexample found
EQ test took  0.0424041748046875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c']



3  iteration complete



start formula depth: 2
learned LTL formula: (X d)
Learning took:  0.2008075714111328  s
No positive counterexample found
EQ test took  0.184736967086792  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad']



4  iteration complete



start formula depth: 2
learned LTL formula: (d & (X d))
Learning took:  0.4868900775909424  s
No positive counterexample found
EQ test took  0.24775004386901855  s
new counterexample: dd  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad', 'dd']



5  iteration complete



start formula depth: 3
learned LTL formula: (X (F c))
Learning took:  0.4331858158111572  s
No positive counterexample found
EQ test took  0.06452345848083496  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc']



6  iteration complete



start formula depth: 3
learned LTL formula: (X (X a))
Learning took:  0.4566159248352051  s
No positive counterexample found
EQ test took  0.23485827445983887  s
new counterexample: bba  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba']



7  iteration complete



start formula depth: 3
learned LTL formula: (d U (X a))
Learning took:  1.2613091468811035  s
No positive counterexample found
EQ test took  0.23072314262390137  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da']



8  iteration complete



start formula depth: 4
learned LTL formula: (X (X (X c)))
Learning took:  1.0180821418762207  s
No positive counterexample found
EQ test took  0.2696394920349121  s
new counterexample: ddcc  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc']



9  iteration complete



start formula depth: 4
learned LTL formula: (F (a & (X a)))
Learning took:  1.0948262214660645  s
EQ test took  0.12820196151733398  s
new counterexample: acccdbdd  should be accepted by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc']



10  iteration complete



start formula depth: 4
learned LTL formula: (X (X (F d)))
Learning took:  1.3074500560760498  s
EQ test took  0.11387133598327637  s
new counterexample: aad  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad']



11  iteration complete



start formula depth: 4
learned LTL formula: ((c -> (G c)) U (~ (c -> (G c))))
Learning took:  3.6492512226104736  s
No positive counterexample found
EQ test took  0.1015012264251709  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca']



12  iteration complete



start formula depth: 5
learned LTL formula: ((F c) U ((F c) & a))
Learning took:  2.8443799018859863  s
No positive counterexample found
EQ test took  0.1754300594329834  s
new counterexample: ac  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac']



13  iteration complete



start formula depth: 5
learned LTL formula: ((F d) U (c & (F d)))
Learning took:  3.381568670272827  s
No positive counterexample found
EQ test took  0.18908905982971191  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd']



14  iteration complete



start formula depth: 5
learned LTL formula: (F (c & (X (X c))))
Learning took:  4.042530536651611  s
No positive counterexample found
EQ test took  0.33765101432800293  s
new counterexample: ccc  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc']



15  iteration complete



start formula depth: 5
learned LTL formula: (X (F (X (X d))))
Learning took:  2.8823089599609375  s
No positive counterexample found
EQ test took  0.18050074577331543  s
new counterexample: dbcd  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc', 'dbcd']



16  iteration complete



start formula depth: 5
learned LTL formula: ((X (X (X c))) U ((X c) & (X (X (X c)))))
Learning took:  12.901116371154785  s
EQ test took  0.16264605522155762  s
new counterexample: daacd  should be accepted by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd', 'daacd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc', 'dbcd']



17  iteration complete



start formula depth: 6
learned LTL formula: (X (((X c) -> c) & (X (X c))))
Learning took:  9.628763198852539  s
EQ test took  0.37299036979675293  s
new counterexample: accc  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd', 'daacd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc', 'dbcd', 'accc']



18  iteration complete



start formula depth: 6
learned LTL formula: (F (X (X (X (X d)))))
Learning took:  52.85161375999451  s
No positive counterexample found
EQ test took  0.23419833183288574  s
new counterexample: dabcd  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd', 'daacd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc', 'dbcd', 'accc', 'dabcd']



19  iteration complete



start formula depth: 6
learned LTL formula: (d U (a & ((a U c) U d)))
Learning took:  156.66712832450867  s
No positive counterexample found
EQ test took  0.6980023384094238  s
new counterexample: acd  should be rejected by implementation


positive traces---> 
['ddacccaaacccdac', 'acccdbdd', 'daacd']


negative traces---> 
['', 'd', 'c', 'ad', 'dd', 'dc', 'bba', 'da', 'ddcc', 'aad', 'ca', 'ac', 'cd', 'ccc', 'dbcd', 'accc', 'dabcd', 'acd']



20  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: F(c&X(d))
final ltl:  (d U (a & ((a U c) U d)))
incomplete formula

Time taken: 401.12171149253845
target      query                explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  F(c&X(d))  (d U (a & ((a U c) U d)))  False      100.0                0.0                                0.0       401.121711
query: F(d&X(c))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.13145089149475098  s
EQ test took  0.0002624988555908203  s
new counterexample:   should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['']



0  iteration complete



learned LTL formula: false
Learning took:  0.1306447982788086  s
EQ test took  0.1528322696685791  s
new counterexample: dacbddbdc  should be accepted by implementation


positive traces---> 
['dacbddbdc']


negative traces---> 
['']



1  iteration complete



start formula depth: 1
learned LTL formula: d
Learning took:  0.16002345085144043  s
EQ test took  0.053145647048950195  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['dacbddbdc']


negative traces---> 
['', 'd']



2  iteration complete



start formula depth: 1
learned LTL formula: (F b)
Learning took:  0.2115492820739746  s
EQ test took  0.03745841979980469  s
new counterexample: ddddc  should be accepted by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd']



3  iteration complete



start formula depth: 2
learned LTL formula: (F c)
Learning took:  0.21535658836364746  s
EQ test took  0.04629206657409668  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c']



4  iteration complete



start formula depth: 2
learned LTL formula: (F (X d))
Learning took:  0.4033632278442383  s
No positive counterexample found
EQ test took  0.05357241630554199  s
new counterexample: dd  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c', 'dd']



5  iteration complete



start formula depth: 3
learned LTL formula: (F (X c))
Learning took:  0.3695218563079834  s
No positive counterexample found
EQ test took  0.07102251052856445  s
new counterexample: bc  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc']



6  iteration complete



start formula depth: 3
learned LTL formula: (d & (F c))
Learning took:  0.8634395599365234  s
No positive counterexample found
EQ test took  0.22265863418579102  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc']



7  iteration complete



start formula depth: 4
learned LTL formula: (X (F (X d)))
Learning took:  0.7457163333892822  s
No positive counterexample found
EQ test took  0.10234403610229492  s
new counterexample: bad  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad']



8  iteration complete



start formula depth: 4
learned LTL formula: (X (F (X c)))
Learning took:  0.8268814086914062  s
No positive counterexample found
EQ test took  0.09931159019470215  s
new counterexample: bac  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac']



9  iteration complete



start formula depth: 4
learned LTL formula: (d & (X (X (F d))))
Learning took:  2.093473196029663  s
EQ test took  0.1296100616455078  s
new counterexample: accbbdc  should be accepted by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac']



10  iteration complete



start formula depth: 5
learned LTL formula: (X (F (X (X d))))
Learning took:  1.7811801433563232  s
EQ test took  0.14470148086547852  s
new counterexample: ddcd  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd']



11  iteration complete



start formula depth: 5
learned LTL formula: (F (X (X (X c))))
Learning took:  2.8078291416168213  s
No positive counterexample found
EQ test took  0.1370251178741455  s
new counterexample: cddc  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc']



12  iteration complete



start formula depth: 5
learned LTL formula: (F (X (X (X (X c)))))
Learning took:  16.685133457183838  s
No positive counterexample found
EQ test took  0.18811273574829102  s
new counterexample: dabac  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc', 'dabac']



13  iteration complete



start formula depth: 6
learned LTL formula: (F ((X (X (X d))) & (d -> (X (X d)))))
Learning took:  50.553900480270386  s
No positive counterexample found
EQ test took  0.16464948654174805  s
new counterexample: bccd  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc', 'dabac', 'bccd']



14  iteration complete



start formula depth: 7
learned LTL formula: ((d U ((F d) -> a)) & (X (F d)))
Learning took:  85.74790930747986  s
No positive counterexample found
EQ test took  0.38569068908691406  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc', 'dabac', 'bccd', 'ad']



15  iteration complete



start formula depth: 7
learned LTL formula: (((F b) U d) & (X (X ((F b) U d))))
Learning took:  90.46639490127563  s
No positive counterexample found
EQ test took  0.22131657600402832  s
new counterexample: bdd  should be rejected by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc', 'dabac', 'bccd', 'ad', 'bdd']



16  iteration complete



start formula depth: 7
learned LTL formula: (((X (X (X d))) -> (X (X d))) & (F (X (X (X d)))))
Learning took:  11.065976619720459  s
EQ test took  0.24375319480895996  s
new counterexample: cbbddbdddddc  should be accepted by implementation


positive traces---> 
['dacbddbdc', 'ddddc', 'accbbdc', 'cbbddbdddddc']


negative traces---> 
['', 'd', 'c', 'dd', 'bc', 'dc', 'bad', 'bac', 'ddcd', 'cddc', 'dabac', 'bccd', 'ad', 'bdd']



17  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: F(d&X(c))
final ltl:  (((X (X (X d))) -> (X (X d))) & (F (X (X (X d)))))
incomplete formula

Time taken: 401.1253547668457
target      query                                        explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  F(d&X(c))  (((X (X (X d))) -> (X (X d))) & (F (X (X (X d)...  False      100.0                0.0                                0.0       401.125355
query: ~F(a & X(a))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.1608262062072754  s
No positive counterexample found
EQ test took  0.010036468505859375  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



learned LTL formula: false
Learning took:  0.1597459316253662  s
EQ test took  0.0004353523254394531  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ a)
Learning took:  0.21275615692138672  s
EQ test took  0.01039743423461914  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (G a))
Learning took:  0.28040385246276855  s
EQ test took  0.019836902618408203  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a', 'b']



3  iteration complete



start formula depth: 3
learned LTL formula: (a U (~ (a | b)))
Learning took:  0.695753812789917  s
EQ test took  0.07831978797912598  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b']



4  iteration complete



start formula depth: 5
learned LTL formula: (~ (G (a | b)))
Learning took:  0.6551949977874756  s
EQ test took  0.03256678581237793  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b', 'c']



5  iteration complete



start formula depth: 5
learned LTL formula: (~ (c | (G (a | b))))
Learning took:  5.060639381408691  s
No positive counterexample found
EQ test took  0.0898582935333252  s
new counterexample: bd  should be rejected by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b', 'c', 'bd']



6  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F(a & X(a))
final ltl:  (~ (c | (G (a | b))))
incomplete formula

Time taken: 401.1266827583313
target         query            explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F(a & X(a))  (~ (c | (G (a | b))))  False      100.0                0.0                                0.0       401.126683
query: ~F(b & X(b))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.15497469902038574  s
No positive counterexample found
EQ test took  0.010158061981201172  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



learned LTL formula: false
Learning took:  0.15497350692749023  s
EQ test took  0.000385284423828125  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ c)
Learning took:  0.20278620719909668  s
No positive counterexample found
EQ test took  0.0669548511505127  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (a | c))
Learning took:  0.3588559627532959  s
EQ test took  0.052083492279052734  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'a']



3  iteration complete



start formula depth: 4
learned LTL formula: ((a | c) -> (X c))
Learning took:  0.5961596965789795  s
EQ test took  0.017987966537475586  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'a', 'b']



4  iteration complete



start formula depth: 5
learned LTL formula: (((c | a) | b) -> (X c))
Learning took:  2.505635976791382  s
EQ test took  0.0574030876159668  s
new counterexample: aac  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b']



5  iteration complete



start formula depth: 7
learned LTL formula: (((b | c) | a) -> (X ((b | c) | a)))
Learning took:  1.5186307430267334  s
EQ test took  0.1285696029663086  s
new counterexample: ca  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b', 'ca']



6  iteration complete



start formula depth: 7
learned LTL formula: (~ ((c | b) | (G a)))
Learning took:  1.8703460693359375  s
No positive counterexample found
EQ test took  0.16181445121765137  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['c', 'a', 'b', 'ca', 'ad']



7  iteration complete



start formula depth: 7
learned LTL formula: ((a -> (F c)) & ((c | b) -> a))
Learning took:  12.05995774269104  s
EQ test took  0.1561875343322754  s
new counterexample: aaaa  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['c', 'a', 'b', 'ca', 'ad']



8  iteration complete



start formula depth: 8
learned LTL formula: ((b | (c | a)) -> ((X (c | a)) & a))
Learning took:  6.763646602630615  s
EQ test took  0.21501374244689941  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['c', 'a', 'b', 'ca', 'ad', 'aa']



9  iteration complete



start formula depth: 8
learned LTL formula: ((b | (a | c)) -> (X ((X (a | c)) | c)))
Learning took:  190.9982295036316  s
EQ test took  0.09259963035583496  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa', 'bddd']


negative traces---> 
['c', 'a', 'b', 'ca', 'ad', 'aa']



10  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F(b & X(b))
final ltl:  ((b | (a | c)) -> (X ((X (a | c)) | c)))
incomplete formula

Time taken: 401.1259751319885
target         query                               explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F(b & X(b))  ((b | (a | c)) -> (X ((X (a | c)) | c)))  False      100.0                0.0                                0.0       401.125975
query: ~F(c & X(c))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.16169095039367676  s
No positive counterexample found
EQ test took  0.009977102279663086  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



learned LTL formula: false
Learning took:  0.16378569602966309  s
EQ test took  0.00041031837463378906  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ a)
Learning took:  0.21117901802062988  s
EQ test took  0.011822223663330078  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (G a))
Learning took:  0.27195262908935547  s
EQ test took  0.018079757690429688  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a', 'b']



3  iteration complete



start formula depth: 3
learned LTL formula: (a U (~ (a | b)))
Learning took:  0.6748533248901367  s
EQ test took  0.05625104904174805  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b']



4  iteration complete



start formula depth: 5
learned LTL formula: (~ (G (a | b)))
Learning took:  0.6199772357940674  s
EQ test took  0.03740644454956055  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b', 'c']



5  iteration complete



start formula depth: 5
learned LTL formula: (~ (c | (G (a | b))))
Learning took:  4.67160701751709  s
No positive counterexample found
EQ test took  0.0803985595703125  s
new counterexample: dc  should be rejected by implementation


positive traces---> 
['', 'ac', 'bddd']


negative traces---> 
['a', 'b', 'c', 'dc']



6  iteration complete



start formula depth: 7
learned LTL formula: (((a | (F c)) | (G b)) -> ((F c) & a))
Learning took:  141.45967864990234  s
EQ test took  0.10955262184143066  s
new counterexample: aaaa  should be accepted by implementation


positive traces---> 
['', 'ac', 'bddd', 'aaaa']


negative traces---> 
['a', 'b', 'c', 'dc']



7  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F(c & X(c))
final ltl:  (((a | (F c)) | (G b)) -> ((F c) & a))
incomplete formula

Time taken: 401.12686944007874
target         query                             explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F(c & X(c))  (((a | (F c)) | (G b)) -> ((F c) & a))  False      100.0                0.0                                0.0       401.126869
query: ~F(d & X(d))


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.16365981101989746  s
No positive counterexample found
EQ test took  0.009029865264892578  s
new counterexample: c  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['c']



0  iteration complete



learned LTL formula: false
Learning took:  0.17049193382263184  s
EQ test took  0.00041413307189941406  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['c']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ c)
Learning took:  0.21152019500732422  s
No positive counterexample found
EQ test took  0.05002784729003906  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (b | c))
Learning took:  0.36934828758239746  s
No positive counterexample found
EQ test took  0.11335635185241699  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['c', 'b', 'a']



3  iteration complete



start formula depth: 4
learned LTL formula: (~ (a | (c | b)))
Learning took:  1.0749621391296387  s
EQ test took  0.014421463012695312  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'b', 'a']



4  iteration complete



start formula depth: 6
learned LTL formula: ((c | (a | b)) -> (X c))
Learning took:  2.12363338470459  s
EQ test took  0.01914811134338379  s
new counterexample: dd  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['c', 'b', 'a', 'dd']



5  iteration complete



start formula depth: 7
learned LTL formula: ((c | (d | (b | a))) -> (X c))
Learning took:  66.13607883453369  s
EQ test took  0.01868438720703125  s
new counterexample: d  should be accepted by implementation


positive traces---> 
['', 'ac', 'd']


negative traces---> 
['c', 'b', 'a', 'dd']



6  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F(d & X(d))
final ltl:  ((c | (d | (b | a))) -> (X c))
incomplete formula

Time taken: 401.1262016296387
target         query                     explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F(d & X(d))  ((c | (d | (b | a))) -> (X c))  False      100.0                0.0                                0.0       401.126202
query: ~F( a U c )


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.1712360382080078  s
No positive counterexample found
EQ test took  0.0106353759765625  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



learned LTL formula: false
Learning took:  0.17019987106323242  s
EQ test took  0.00043272972106933594  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ b)
Learning took:  0.2164018154144287  s
No positive counterexample found
EQ test took  0.052465200424194336  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (a | b))
Learning took:  0.3701355457305908  s
EQ test took  0.07853960990905762  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'a']



3  iteration complete



start formula depth: 4
learned LTL formula: (b U (~ (a | b)))
Learning took:  0.6918458938598633  s
EQ test took  0.07579660415649414  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'a', 'c']



4  iteration complete



start formula depth: 5
learned LTL formula: (b U (~ (b | (c | a))))
Learning took:  2.9896135330200195  s
No positive counterexample found
EQ test took  0.1751415729522705  s
new counterexample: db  should be rejected by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'a', 'c', 'db']



5  iteration complete



start formula depth: 7
learned LTL formula: (~ (G (F (c | (a | b)))))
Learning took:  8.224649667739868  s
No positive counterexample found
EQ test took  0.07220005989074707  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'a', 'c', 'db', 'cd']



6  iteration complete



start formula depth: 8
learned LTL formula: ((a | (F b)) U (~ ((a | (F b)) | c)))
Learning took:  5.299656391143799  s
EQ test took  0.06575727462768555  s
new counterexample: aaaa  should be accepted by implementation


positive traces---> 
['', 'bddd', 'aaaa']


negative traces---> 
['b', 'a', 'c', 'db', 'cd']



7  iteration complete



start formula depth: 8
learned LTL formula: (b U ((F (b | (a | c))) -> (X a)))
Learning took:  100.46746706962585  s
EQ test took  0.026453018188476562  s
new counterexample: aa  should be rejected by implementation


positive traces---> 
['', 'bddd', 'aaaa']


negative traces---> 
['b', 'a', 'c', 'db', 'cd', 'aa']



8  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F( a U c )
final ltl:  (b U ((F (b | (a | c))) -> (X a)))
incomplete formula

Time taken: 401.12735247612
target        query                         explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F( a U c )  (b U ((F (b | (a | c))) -> (X a)))  False      100.0                0.0                                0.0       401.127352
query: ~F( b U d )


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.1702272891998291  s
No positive counterexample found
EQ test took  0.007444143295288086  s
new counterexample: a  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['a']



0  iteration complete



learned LTL formula: false
Learning took:  0.17126917839050293  s
EQ test took  0.0004086494445800781  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['a']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ a)
Learning took:  0.21771740913391113  s
EQ test took  0.018105030059814453  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (G a))
Learning took:  0.2815995216369629  s
EQ test took  0.014223575592041016  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['', 'ac']


negative traces---> 
['a', 'c']



3  iteration complete



start formula depth: 3
learned LTL formula: ((c | a) -> (X c))
Learning took:  0.671118974685669  s
EQ test took  0.03884553909301758  s
new counterexample: aac  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['a', 'c']



4  iteration complete



start formula depth: 5
learned LTL formula: ((a | c) -> (X (a | c)))
Learning took:  0.5946848392486572  s
EQ test took  0.07115602493286133  s
new counterexample: d  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['a', 'c', 'd']



5  iteration complete



start formula depth: 5
learned LTL formula: (((c | d) | a) -> (X ((c | d) | a)))
Learning took:  3.0443434715270996  s
No positive counterexample found
EQ test took  0.07411623001098633  s
new counterexample: b  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['a', 'c', 'd', 'b']



6  iteration complete



start formula depth: 7
learned LTL formula: (((b | (d | a)) | c) -> (X ((b | (d | a)) | c)))
Learning took:  66.95296573638916  s
No positive counterexample found
EQ test took  0.03240847587585449  s
new counterexample: cb  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac']


negative traces---> 
['a', 'c', 'd', 'b', 'cb']



7  iteration complete



start formula depth: 9
learned LTL formula: (~ ((d | (G a)) | (c | b)))
Learning took:  4.771878719329834  s
EQ test took  0.14129996299743652  s
new counterexample: aaaa  should be accepted by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['a', 'c', 'd', 'b', 'cb']



8  iteration complete



start formula depth: 9
learned LTL formula: (((a | (d | c)) | b) -> (X (a | (d | c))))
Learning took:  8.483790159225464  s
EQ test took  0.11287903785705566  s
new counterexample: cd  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['a', 'c', 'd', 'b', 'cb', 'cd']



9  iteration complete



start formula depth: 9
learned LTL formula: (((b | d) | (a | c)) -> (X (a | c)))
Learning took:  26.818285942077637  s
No positive counterexample found
EQ test took  0.24067902565002441  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'ac', 'aac', 'aaaa']


negative traces---> 
['a', 'c', 'd', 'b', 'cb', 'cd', 'da']



10  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: ~F( b U d )
final ltl:  (((b | d) | (a | c)) -> (X (a | c)))
incomplete formula

Time taken: 401.12841033935547
target        query                           explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  ~F( b U d )  (((b | d) | (a | c)) -> (X (a | c)))  False      100.0                0.0                                0.0        401.12841
query: (F(a) & F(b)) -> F(c) 


positive traces---> 
[]


negative traces---> 
[]



learned LTL formula: true
Learning took:  0.17507529258728027  s
No positive counterexample found
EQ test took  0.009900093078613281  s
new counterexample: b  should be rejected by implementation


positive traces---> 
[]


negative traces---> 
['b']



0  iteration complete



learned LTL formula: false
Learning took:  0.17562198638916016  s
EQ test took  0.0003962516784667969  s
new counterexample:   should be accepted by implementation


positive traces---> 
['']


negative traces---> 
['b']



1  iteration complete



start formula depth: 1
learned LTL formula: (~ b)
Learning took:  0.22298550605773926  s
No positive counterexample found
EQ test took  0.04228973388671875  s
new counterexample: c  should be rejected by implementation


positive traces---> 
['']


negative traces---> 
['b', 'c']



2  iteration complete



start formula depth: 2
learned LTL formula: (~ (c | b))
Learning took:  0.381014347076416  s
EQ test took  0.035756826400756836  s
new counterexample: bddd  should be accepted by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'c']



3  iteration complete



start formula depth: 4
learned LTL formula: (~ (c | (G b)))
Learning took:  0.7029881477355957  s
EQ test took  0.06500983238220215  s
new counterexample: a  should be rejected by implementation


positive traces---> 
['', 'bddd']


negative traces---> 
['b', 'c', 'a']



4  iteration complete



start formula depth: 5
learned LTL formula: (~ ((G b) | (a | c)))
Learning took:  2.787381887435913  s
EQ test took  0.022717952728271484  s
new counterexample: ac  should be accepted by implementation


positive traces---> 
['', 'bddd', 'ac']


negative traces---> 
['b', 'c', 'a']



5  iteration complete



start formula depth: 7
learned LTL formula: (~ ((G (a | b)) | c))
Learning took:  2.5794577598571777  s
EQ test took  0.06357216835021973  s
new counterexample: da  should be rejected by implementation


positive traces---> 
['', 'bddd', 'ac']


negative traces---> 
['b', 'c', 'a', 'da']



6  iteration complete



start formula depth: 7
learned LTL formula: (~ (c | (G (b | (F a)))))
Learning took:  18.555051803588867  s
EQ test took  0.053209781646728516  s
new counterexample: ddda  should be accepted by implementation


positive traces---> 
['', 'bddd', 'ac', 'ddda']


negative traces---> 
['b', 'c', 'a', 'da']



7  iteration complete



start formula depth: 8
learned LTL formula: (((b | (d | c)) | a) -> (X (d | c)))
Learning took:  101.93888330459595  s
EQ test took  0.02172231674194336  s
new counterexample: ad  should be rejected by implementation


positive traces---> 
['', 'bddd', 'ac', 'ddda']


negative traces---> 
['b', 'c', 'a', 'da', 'ad']



8  iteration complete





epsilon= 0.05 delta= 0.05 max_trace_length= 20
query: (F(a) & F(b)) -> F(c) 
final ltl:  (((b | (d | c)) | a) -> (X (d | c)))
incomplete formula

Time taken: 401.12812304496765
target                   query                           explanation status  rnn score  explanation score  explanation score on ground truth  extraction time
alternating bit protocol  (F(a) & F(b)) -> F(c)   (((b | (d | c)) | a) -> (X (d | c)))  False      100.0                0.0                                0.0       401.128123
